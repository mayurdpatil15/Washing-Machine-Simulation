

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Nov 25 19:23:44 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444                           
   445                           	psect	idataBANK0
   446  09B6                     __pidataBANK0:
   447                           
   448                           ;initializer for read_digital_keypad@once
   449  09B6  3401               	retlw	1
   450  09B7  3400               	retlw	0
   451                           
   452                           	psect	idataBANK1
   453  07DD                     __pidataBANK1:
   454                           
   455                           ;initializer for _washing_prog
   456  07DD  3492               	retlw	low (STR_1| (0+32768))
   457  07DE  3489               	retlw	high (STR_1| (0+32768))
   458  07DF  3498               	retlw	low (STR_2| (0+32768))
   459  07E0  3489               	retlw	high (STR_2| (0+32768))
   460  07E1  341A               	retlw	low (STR_3| (0+32768))
   461  07E2  3489               	retlw	high (STR_3| (0+32768))
   462  07E3  347F               	retlw	low (STR_4| (0+32768))
   463  07E4  3489               	retlw	high (STR_4| (0+32768))
   464  07E5  3410               	retlw	low (STR_5| (0+32768))
   465  07E6  3489               	retlw	high (STR_5| (0+32768))
   466  07E7  3405               	retlw	low (STR_6| (0+32768))
   467  07E8  3489               	retlw	high (STR_6| (0+32768))
   468  07E9  345B               	retlw	low (STR_7| (0+32768))
   469  07EA  3489               	retlw	high (STR_7| (0+32768))
   470  07EB  3424               	retlw	low (STR_8| (0+32768))
   471  07EC  3489               	retlw	high (STR_8| (0+32768))
   472  07ED  3438               	retlw	low (STR_9| (0+32768))
   473  07EE  3489               	retlw	high (STR_9| (0+32768))
   474  07EF  3442               	retlw	low (STR_10| (0+32768))
   475  07F0  3489               	retlw	high (STR_10| (0+32768))
   476  07F1  342E               	retlw	low (STR_11| (0+32768))
   477  07F2  3489               	retlw	high (STR_11| (0+32768))
   478  07F3  34FA               	retlw	low (STR_12| (0+32768))
   479  07F4  3488               	retlw	high (STR_12| (0+32768))
   480                           
   481                           ;initializer for _water_level_arr
   482  07F5  34A8               	retlw	low (STR_13| (0+32768))
   483  07F6  3489               	retlw	high (STR_13| (0+32768))
   484  07F7  34AD               	retlw	low (STR_14| (0+32768))
   485  07F8  3489               	retlw	high (STR_14| (0+32768))
   486  07F9  3478               	retlw	low (STR_15| (0+32768))
   487  07FA  3489               	retlw	high (STR_15| (0+32768))
   488  07FB  349E               	retlw	low (STR_16| (0+32768))
   489  07FC  3489               	retlw	high (STR_16| (0+32768))
   490  07FD  34B1               	retlw	low (STR_17| (0+32768))
   491  07FE  3489               	retlw	high (STR_17| (0+32768))
   492                           
   493                           	psect	nvBANK0
   494  006C                     __pnvBANK0:
   495  006C                     _operation_mode:
   496  006C                     	ds	1
   497  0006                     _PORTB	set	6
   498  0008                     _PORTD	set	8
   499  0005                     _PORTA	set	5
   500  0091                     _T2CKPS1	set	145
   501  0090                     _T2CKPS0	set	144
   502  0061                     _TMR2IF	set	97
   503  0049                     _RE1	set	73
   504  004A                     _RE2	set	74
   505  0039                     _RC1	set	57
   506  0030                     _RB0	set	48
   507  0028                     _RA0	set	40
   508  003A                     _RC2	set	58
   509  0092                     _TMR2ON	set	146
   510  005F                     _GIE	set	95
   511  005E                     _PEIE	set	94
   512  0092                     _PR2	set	146
   513  0086                     _TRISB	set	134
   514  0088                     _TRISD	set	136
   515  0085                     _TRISA	set	133
   516  009F                     _ADCON1	set	159
   517  0461                     _TMR2IE	set	1121
   518  0449                     _TRISE1	set	1097
   519  044A                     _TRISE2	set	1098
   520  043A                     _TRISC2	set	1082
   521  0439                     _TRISC1	set	1081
   522                           
   523                           	psect	strings
   524  1000                     __pstrings:
   525  1000                     stringtab:
   526  1000                     __stringtab:
   527                           
   528                           ;	String table - string pointers are 2 bytes each
   529  1000  1BFF               	btfsc	btemp+1,7
   530  1001  280A               	ljmp	stringcode
   531  1002  1383               	bcf	3,7
   532  1003  187F               	btfsc	btemp+1,0
   533  1004  1783               	bsf	3,7
   534  1005  0800               	movf	0,w
   535  1006  0A84               	incf	4,f
   536  1007  1903               	skipnz
   537  1008  0AFF               	incf	btemp+1,f
   538  1009  0008               	return
   539  100A                     stringcode:
   540  100A  087F               	movf	btemp+1,w
   541  100B  397F               	andlw	127
   542  100C  008A               	movwf	10
   543  100D  0804               	movf	4,w
   544  100E  0A84               	incf	4,f
   545  100F  1903               	skipnz
   546  1010  0AFF               	incf	btemp+1,f
   547  1011  0082               	movwf	2
   548  1012                     __stringbase:
   549  1012                     __end_of__stringtab:
   550                           
   551                           	psect	stringtext
   552  0800                     __pstringtext:
   553  0800                     STR_20:
   554  0800  3420               	retlw	32	;' '
   555  0801  3457               	retlw	87	;'W'
   556  0802  3461               	retlw	97	;'a'
   557  0803  3473               	retlw	115	;'s'
   558  0804  3468               	retlw	104	;'h'
   559  0805  3469               	retlw	105	;'i'
   560  0806  346E               	retlw	110	;'n'
   561  0807  3467               	retlw	103	;'g'
   562  0808  3420               	retlw	32	;' '
   563  0809  344D               	retlw	77	;'M'
   564  080A  3461               	retlw	97	;'a'
   565  080B  3463               	retlw	99	;'c'
   566  080C  3468               	retlw	104	;'h'
   567  080D  3469               	retlw	105	;'i'
   568  080E  346E               	retlw	110	;'n'
   569  080F  3465               	retlw	101	;'e'
   570  0810  3420               	retlw	32	;' '
   571  0811  3400               	retlw	0
   572  0812                     STR_19:
   573  0812  3420               	retlw	32	;' '
   574  0813  3420               	retlw	32	;' '
   575  0814  3420               	retlw	32	;' '
   576  0815  3420               	retlw	32	;' '
   577  0816  3450               	retlw	80	;'P'
   578  0817  346F               	retlw	111	;'o'
   579  0818  3477               	retlw	119	;'w'
   580  0819  3465               	retlw	101	;'e'
   581  081A  3472               	retlw	114	;'r'
   582  081B  3420               	retlw	32	;' '
   583  081C  344F               	retlw	79	;'O'
   584  081D  344E               	retlw	78	;'N'
   585  081E  3420               	retlw	32	;' '
   586  081F  3420               	retlw	32	;' '
   587  0820  3420               	retlw	32	;' '
   588  0821  3420               	retlw	32	;' '
   589  0822  3400               	retlw	0
   590  0823                     STR_26:
   591  0823  3420               	retlw	32	;' '
   592  0824  3420               	retlw	32	;' '
   593  0825  3450               	retlw	80	;'P'
   594  0826  346F               	retlw	111	;'o'
   595  0827  3477               	retlw	119	;'w'
   596  0828  3465               	retlw	101	;'e'
   597  0829  3472               	retlw	114	;'r'
   598  082A  3469               	retlw	105	;'i'
   599  082B  346E               	retlw	110	;'n'
   600  082C  3467               	retlw	103	;'g'
   601  082D  3420               	retlw	32	;' '
   602  082E  344F               	retlw	79	;'O'
   603  082F  344E               	retlw	78	;'N'
   604  0830  3420               	retlw	32	;' '
   605  0831  3420               	retlw	32	;' '
   606  0832  3420               	retlw	32	;' '
   607  0833  3400               	retlw	0
   608  0834                     STR_34:
   609  0834  3435               	retlw	53	;'5'
   610  0835  342D               	retlw	45	;'-'
   611  0836  3453               	retlw	83	;'S'
   612  0837  3454               	retlw	84	;'T'
   613  0838  3441               	retlw	65	;'A'
   614  0839  3452               	retlw	82	;'R'
   615  083A  3454               	retlw	84	;'T'
   616  083B  3420               	retlw	32	;' '
   617  083C  3420               	retlw	32	;' '
   618  083D  3436               	retlw	54	;'6'
   619  083E  342D               	retlw	45	;'-'
   620  083F  3450               	retlw	80	;'P'
   621  0840  3441               	retlw	65	;'A'
   622  0841  3455               	retlw	85	;'U'
   623  0842  3453               	retlw	83	;'S'
   624  0843  3445               	retlw	69	;'E'
   625  0844  3400               	retlw	0
   626  0845                     STR_28:
   627  0845  3457               	retlw	87	;'W'
   628  0846  3461               	retlw	97	;'a'
   629  0847  3473               	retlw	115	;'s'
   630  0848  3468               	retlw	104	;'h'
   631  0849  3469               	retlw	105	;'i'
   632  084A  346E               	retlw	110	;'n'
   633  084B  3467               	retlw	103	;'g'
   634  084C  3420               	retlw	32	;' '
   635  084D  3450               	retlw	80	;'P'
   636  084E  3472               	retlw	114	;'r'
   637  084F  346F               	retlw	111	;'o'
   638  0850  3467               	retlw	103	;'g'
   639  0851  3472               	retlw	114	;'r'
   640  0852  3461               	retlw	97	;'a'
   641  0853  346D               	retlw	109	;'m'
   642  0854  3473               	retlw	115	;'s'
   643  0855  3400               	retlw	0
   644  0856                     STR_18:
   645  0856  3420               	retlw	32	;' '
   646  0857  3450               	retlw	80	;'P'
   647  0858  3472               	retlw	114	;'r'
   648  0859  3465               	retlw	101	;'e'
   649  085A  3473               	retlw	115	;'s'
   650  085B  3473               	retlw	115	;'s'
   651  085C  3420               	retlw	32	;' '
   652  085D  344B               	retlw	75	;'K'
   653  085E  3465               	retlw	101	;'e'
   654  085F  3479               	retlw	121	;'y'
   655  0860  3435               	retlw	53	;'5'
   656  0861  3420               	retlw	32	;' '
   657  0862  3454               	retlw	84	;'T'
   658  0863  346F               	retlw	111	;'o'
   659  0864  3420               	retlw	32	;' '
   660  0865  3400               	retlw	0
   661  0866                     STR_25:
   662  0866  344D               	retlw	77	;'M'
   663  0867  3461               	retlw	97	;'a'
   664  0868  3469               	retlw	105	;'i'
   665  0869  346E               	retlw	110	;'n'
   666  086A  3420               	retlw	32	;' '
   667  086B  3453               	retlw	83	;'S'
   668  086C  3463               	retlw	99	;'c'
   669  086D  3472               	retlw	114	;'r'
   670  086E  3465               	retlw	101	;'e'
   671  086F  3465               	retlw	101	;'e'
   672  0870  346E               	retlw	110	;'n'
   673  0871  342E               	retlw	46	;'.'
   674  0872  342E               	retlw	46	;'.'
   675  0873  342E               	retlw	46	;'.'
   676  0874  3400               	retlw	0
   677  0875                     STR_21:
   678  0875  3420               	retlw	32	;' '
   679  0876  3450               	retlw	80	;'P'
   680  0877  3472               	retlw	114	;'r'
   681  0878  3465               	retlw	101	;'e'
   682  0879  3473               	retlw	115	;'s'
   683  087A  3473               	retlw	115	;'s'
   684  087B  3420               	retlw	32	;' '
   685  087C  3453               	retlw	83	;'S'
   686  087D  3477               	retlw	119	;'w'
   687  087E  3469               	retlw	105	;'i'
   688  087F  3474               	retlw	116	;'t'
   689  0880  3463               	retlw	99	;'c'
   690  0881  3468               	retlw	104	;'h'
   691  0882  343A               	retlw	58	;':'
   692  0883  3400               	retlw	0
   693  0884                     STR_48:
   694  0884  3450               	retlw	80	;'P'
   695  0885  3472               	retlw	114	;'r'
   696  0886  346F               	retlw	111	;'o'
   697  0887  3467               	retlw	103	;'g'
   698  0888  3420               	retlw	32	;' '
   699  0889  3443               	retlw	67	;'C'
   700  088A  346F               	retlw	111	;'o'
   701  088B  346D               	retlw	109	;'m'
   702  088C  3470               	retlw	112	;'p'
   703  088D  346C               	retlw	108	;'l'
   704  088E  3465               	retlw	101	;'e'
   705  088F  3474               	retlw	116	;'t'
   706  0890  3465               	retlw	101	;'e'
   707  0891  3464               	retlw	100	;'d'
   708  0892  3400               	retlw	0
   709  0893                     STR_49:
   710  0893  3452               	retlw	82	;'R'
   711  0894  3465               	retlw	101	;'e'
   712  0895  346D               	retlw	109	;'m'
   713  0896  346F               	retlw	111	;'o'
   714  0897  3476               	retlw	118	;'v'
   715  0898  3465               	retlw	101	;'e'
   716  0899  3420               	retlw	32	;' '
   717  089A  3443               	retlw	67	;'C'
   718  089B  346C               	retlw	108	;'l'
   719  089C  346F               	retlw	111	;'o'
   720  089D  3474               	retlw	116	;'t'
   721  089E  3468               	retlw	104	;'h'
   722  089F  3465               	retlw	101	;'e'
   723  08A0  3473               	retlw	115	;'s'
   724  08A1  3400               	retlw	0
   725  08A2                     STR_24:
   726  08A2  3452               	retlw	82	;'R'
   727  08A3  3465               	retlw	101	;'e'
   728  08A4  3474               	retlw	116	;'t'
   729  08A5  3475               	retlw	117	;'u'
   730  08A6  3472               	retlw	114	;'r'
   731  08A7  346E               	retlw	110	;'n'
   732  08A8  3469               	retlw	105	;'i'
   733  08A9  346E               	retlw	110	;'n'
   734  08AA  3467               	retlw	103	;'g'
   735  08AB  3420               	retlw	32	;' '
   736  08AC  3454               	retlw	84	;'T'
   737  08AD  346F               	retlw	111	;'o'
   738  08AE  3420               	retlw	32	;' '
   739  08AF  3400               	retlw	0
   740  08B0                     STR_22:
   741  08B0  3420               	retlw	32	;' '
   742  08B1  3453               	retlw	83	;'S'
   743  08B2  3457               	retlw	87	;'W'
   744  08B3  3435               	retlw	53	;'5'
   745  08B4  343A               	retlw	58	;':'
   746  08B5  3420               	retlw	32	;' '
   747  08B6  3453               	retlw	83	;'S'
   748  08B7  3454               	retlw	84	;'T'
   749  08B8  3441               	retlw	65	;'A'
   750  08B9  3452               	retlw	82	;'R'
   751  08BA  3454               	retlw	84	;'T'
   752  08BB  3420               	retlw	32	;' '
   753  08BC  3400               	retlw	0
   754  08BD                     STR_29:
   755  08BD  3457               	retlw	87	;'W'
   756  08BE  3461               	retlw	97	;'a'
   757  08BF  3474               	retlw	116	;'t'
   758  08C0  3465               	retlw	101	;'e'
   759  08C1  3472               	retlw	114	;'r'
   760  08C2  3420               	retlw	32	;' '
   761  08C3  344C               	retlw	76	;'L'
   762  08C4  3465               	retlw	101	;'e'
   763  08C5  3476               	retlw	118	;'v'
   764  08C6  3465               	retlw	101	;'e'
   765  08C7  346C               	retlw	108	;'l'
   766  08C8  343A               	retlw	58	;':'
   767  08C9  3400               	retlw	0
   768  08CA                     STR_31:
   769  08CA  3450               	retlw	80	;'P'
   770  08CB  346C               	retlw	108	;'l'
   771  08CC  3465               	retlw	101	;'e'
   772  08CD  3461               	retlw	97	;'a'
   773  08CE  3473               	retlw	115	;'s'
   774  08CF  3465               	retlw	101	;'e'
   775  08D0  3420               	retlw	32	;' '
   776  08D1  3443               	retlw	67	;'C'
   777  08D2  344C               	retlw	76	;'L'
   778  08D3  346F               	retlw	111	;'o'
   779  08D4  3473               	retlw	115	;'s'
   780  08D5  3465               	retlw	101	;'e'
   781  08D6  3400               	retlw	0
   782  08D7                     STR_23:
   783  08D7  3420               	retlw	32	;' '
   784  08D8  3453               	retlw	83	;'S'
   785  08D9  3457               	retlw	87	;'W'
   786  08DA  3436               	retlw	54	;'6'
   787  08DB  343A               	retlw	58	;':'
   788  08DC  3420               	retlw	32	;' '
   789  08DD  3453               	retlw	83	;'S'
   790  08DE  3454               	retlw	84	;'T'
   791  08DF  344F               	retlw	79	;'O'
   792  08E0  3450               	retlw	80	;'P'
   793  08E1  3420               	retlw	32	;' '
   794  08E2  3400               	retlw	0
   795  08E3                     STR_30:
   796  08E3  3444               	retlw	68	;'D'
   797  08E4  344F               	retlw	79	;'O'
   798  08E5  344F               	retlw	79	;'O'
   799  08E6  3452               	retlw	82	;'R'
   800  08E7  3420               	retlw	32	;' '
   801  08E8  343A               	retlw	58	;':'
   802  08E9  3420               	retlw	32	;' '
   803  08EA  344F               	retlw	79	;'O'
   804  08EB  3450               	retlw	80	;'P'
   805  08EC  3445               	retlw	69	;'E'
   806  08ED  344E               	retlw	78	;'N'
   807  08EE  3400               	retlw	0
   808  08EF                     STR_32:
   809  08EF  3446               	retlw	70	;'F'
   810  08F0  3475               	retlw	117	;'u'
   811  08F1  346E               	retlw	110	;'n'
   812  08F2  3463               	retlw	99	;'c'
   813  08F3  3474               	retlw	116	;'t'
   814  08F4  3469               	retlw	105	;'i'
   815  08F5  346F               	retlw	111	;'o'
   816  08F6  346E               	retlw	110	;'n'
   817  08F7  3420               	retlw	32	;' '
   818  08F8  342D               	retlw	45	;'-'
   819  08F9  3400               	retlw	0
   820  08FA                     STR_12:
   821  08FA  3441               	retlw	65	;'A'
   822  08FB  3471               	retlw	113	;'q'
   823  08FC  3475               	retlw	117	;'u'
   824  08FD  3461               	retlw	97	;'a'
   825  08FE  3420               	retlw	32	;' '
   826  08FF  3453               	retlw	83	;'S'
   827  0900  3474               	retlw	116	;'t'
   828  0901  346F               	retlw	111	;'o'
   829  0902  3472               	retlw	114	;'r'
   830  0903  3465               	retlw	101	;'e'
   831  0904  3400               	retlw	0
   832  0905                     STR_6:
   833  0905  3445               	retlw	69	;'E'
   834  0906  3463               	retlw	99	;'c'
   835  0907  346F               	retlw	111	;'o'
   836  0908  3443               	retlw	67	;'C'
   837  0909  346F               	retlw	111	;'o'
   838  090A  3474               	retlw	116	;'t'
   839  090B  3474               	retlw	116	;'t'
   840  090C  346F               	retlw	111	;'o'
   841  090D  346E               	retlw	110	;'n'
   842  090E  3473               	retlw	115	;'s'
   843  090F  3400               	retlw	0
   844  0910                     STR_5:
   845  0910  3453               	retlw	83	;'S'
   846  0911  3474               	retlw	116	;'t'
   847  0912  3461               	retlw	97	;'a'
   848  0913  3469               	retlw	105	;'i'
   849  0914  346E               	retlw	110	;'n'
   850  0915  3477               	retlw	119	;'w'
   851  0916  3461               	retlw	97	;'a'
   852  0917  3473               	retlw	115	;'s'
   853  0918  3468               	retlw	104	;'h'
   854  0919  3400               	retlw	0
   855  091A                     STR_3:
   856  091A  3444               	retlw	68	;'D'
   857  091B  3465               	retlw	101	;'e'
   858  091C  346C               	retlw	108	;'l'
   859  091D  3469               	retlw	105	;'i'
   860  091E  3463               	retlw	99	;'c'
   861  091F  3461               	retlw	97	;'a'
   862  0920  3474               	retlw	116	;'t'
   863  0921  3465               	retlw	101	;'e'
   864  0922  3473               	retlw	115	;'s'
   865  0923  3400               	retlw	0
   866  0924                     STR_8:
   867  0924  3442               	retlw	66	;'B'
   868  0925  3465               	retlw	101	;'e'
   869  0926  3464               	retlw	100	;'d'
   870  0927  3473               	retlw	115	;'s'
   871  0928  3468               	retlw	104	;'h'
   872  0929  3465               	retlw	101	;'e'
   873  092A  3465               	retlw	101	;'e'
   874  092B  3474               	retlw	116	;'t'
   875  092C  3473               	retlw	115	;'s'
   876  092D  3400               	retlw	0
   877  092E                     STR_11:
   878  092E  3457               	retlw	87	;'W'
   879  092F  3461               	retlw	97	;'a'
   880  0930  3473               	retlw	115	;'s'
   881  0931  3468               	retlw	104	;'h'
   882  0932  3420               	retlw	32	;' '
   883  0933  346F               	retlw	111	;'o'
   884  0934  346E               	retlw	110	;'n'
   885  0935  346C               	retlw	108	;'l'
   886  0936  3479               	retlw	121	;'y'
   887  0937  3400               	retlw	0
   888  0938                     STR_9:
   889  0938  3452               	retlw	82	;'R'
   890  0939  3469               	retlw	105	;'i'
   891  093A  346E               	retlw	110	;'n'
   892  093B  3473               	retlw	115	;'s'
   893  093C  3465               	retlw	101	;'e'
   894  093D  342B               	retlw	43	;'+'
   895  093E  3444               	retlw	68	;'D'
   896  093F  3472               	retlw	114	;'r'
   897  0940  3479               	retlw	121	;'y'
   898  0941  3400               	retlw	0
   899  0942                     STR_10:
   900  0942  3444               	retlw	68	;'D'
   901  0943  3472               	retlw	114	;'r'
   902  0944  3479               	retlw	121	;'y'
   903  0945  3420               	retlw	32	;' '
   904  0946  346F               	retlw	111	;'o'
   905  0947  346E               	retlw	110	;'n'
   906  0948  346C               	retlw	108	;'l'
   907  0949  3479               	retlw	121	;'y'
   908  094A  3400               	retlw	0
   909  094B                     STR_39:
   910  094B  3454               	retlw	84	;'T'
   911  094C  3469               	retlw	105	;'i'
   912  094D  346D               	retlw	109	;'m'
   913  094E  3465               	retlw	101	;'e'
   914  094F  3420               	retlw	32	;' '
   915  0950  343D               	retlw	61	;'='
   916  0951  3420               	retlw	32	;' '
   917  0952  3400               	retlw	0
   918  0953                     STR_37:
   919  0953  3428               	retlw	40	;'('
   920  0954  344D               	retlw	77	;'M'
   921  0955  344D               	retlw	77	;'M'
   922  0956  343A               	retlw	58	;':'
   923  0957  3453               	retlw	83	;'S'
   924  0958  3453               	retlw	83	;'S'
   925  0959  3429               	retlw	41	;')'
   926  095A  3400               	retlw	0
   927  095B                     STR_7:
   928  095B  3457               	retlw	87	;'W'
   929  095C  346F               	retlw	111	;'o'
   930  095D  346C               	retlw	108	;'l'
   931  095E  346C               	retlw	108	;'l'
   932  095F  3465               	retlw	101	;'e'
   933  0960  346E               	retlw	110	;'n'
   934  0961  3473               	retlw	115	;'s'
   935  0962  3400               	retlw	0
   936  0963                     STR_36:
   937  0963  3454               	retlw	84	;'T'
   938  0964  3469               	retlw	105	;'i'
   939  0965  346D               	retlw	109	;'m'
   940  0966  3465               	retlw	101	;'e'
   941  0967  343A               	retlw	58	;':'
   942  0968  3420               	retlw	32	;' '
   943  0969  3400               	retlw	0
   944  096A                     STR_35:
   945  096A  3450               	retlw	80	;'P'
   946  096B  3472               	retlw	114	;'r'
   947  096C  346F               	retlw	111	;'o'
   948  096D  3467               	retlw	103	;'g'
   949  096E  343A               	retlw	58	;':'
   950  096F  3420               	retlw	32	;' '
   951  0970  3400               	retlw	0
   952  0971                     STR_33:
   953  0971  3454               	retlw	84	;'T'
   954  0972  3469               	retlw	105	;'i'
   955  0973  346D               	retlw	109	;'m'
   956  0974  3465               	retlw	101	;'e'
   957  0975  343D               	retlw	61	;'='
   958  0976  3420               	retlw	32	;' '
   959  0977  3400               	retlw	0
   960  0978                     STR_15:
   961  0978  344D               	retlw	77	;'M'
   962  0979  3465               	retlw	101	;'e'
   963  097A  3464               	retlw	100	;'d'
   964  097B  3469               	retlw	105	;'i'
   965  097C  3475               	retlw	117	;'u'
   966  097D  346D               	retlw	109	;'m'
   967  097E  3400               	retlw	0
   968  097F                     STR_4:
   969  097F  3457               	retlw	87	;'W'
   970  0980  3468               	retlw	104	;'h'
   971  0981  3469               	retlw	105	;'i'
   972  0982  3474               	retlw	116	;'t'
   973  0983  3465               	retlw	101	;'e'
   974  0984  3473               	retlw	115	;'s'
   975  0985  3400               	retlw	0
   976  0986                     STR_42:
   977  0986  3452               	retlw	82	;'R'
   978  0987  3469               	retlw	105	;'i'
   979  0988  346E               	retlw	110	;'n'
   980  0989  3473               	retlw	115	;'s'
   981  098A  3465               	retlw	101	;'e'
   982  098B  3400               	retlw	0
   983  098C                     STR_43:
   984  098C  3420               	retlw	32	;' '
   985  098D  3453               	retlw	83	;'S'
   986  098E  3470               	retlw	112	;'p'
   987  098F  3469               	retlw	105	;'i'
   988  0990  346E               	retlw	110	;'n'
   989  0991  3400               	retlw	0
   990  0992                     STR_1:
   991  0992  3444               	retlw	68	;'D'
   992  0993  3461               	retlw	97	;'a'
   993  0994  3469               	retlw	105	;'i'
   994  0995  346C               	retlw	108	;'l'
   995  0996  3479               	retlw	121	;'y'
   996  0997  3400               	retlw	0
   997  0998                     STR_2:
   998  0998  3448               	retlw	72	;'H'
   999  0999  3465               	retlw	101	;'e'
  1000  099A  3461               	retlw	97	;'a'
  1001  099B  3476               	retlw	118	;'v'
  1002  099C  3479               	retlw	121	;'y'
  1003  099D  3400               	retlw	0
  1004  099E                     STR_16:
  1005  099E  3448               	retlw	72	;'H'
  1006  099F  3469               	retlw	105	;'i'
  1007  09A0  3467               	retlw	103	;'g'
  1008  09A1  3468               	retlw	104	;'h'
  1009  09A2  3400               	retlw	0
  1010  09A3                     STR_41:
  1011  09A3  3457               	retlw	87	;'W'
  1012  09A4  3461               	retlw	97	;'a'
  1013  09A5  3473               	retlw	115	;'s'
  1014  09A6  3468               	retlw	104	;'h'
  1015  09A7  3400               	retlw	0
  1016  09A8                     STR_13:
  1017  09A8  3441               	retlw	65	;'A'
  1018  09A9  3475               	retlw	117	;'u'
  1019  09AA  3474               	retlw	116	;'t'
  1020  09AB  346F               	retlw	111	;'o'
  1021  09AC  3400               	retlw	0
  1022  09AD                     STR_14:
  1023  09AD  344C               	retlw	76	;'L'
  1024  09AE  346F               	retlw	111	;'o'
  1025  09AF  3477               	retlw	119	;'w'
  1026  09B0  3400               	retlw	0
  1027  09B1                     STR_17:
  1028  09B1  344D               	retlw	77	;'M'
  1029  09B2  3461               	retlw	97	;'a'
  1030  09B3  3478               	retlw	120	;'x'
  1031  09B4  3400               	retlw	0
  1032  0800                     
  1033                           	psect	cinit
  1034  000F                     start_initialization:	
  1035                           ; #config settings
  1036                           
  1037  000F                     __initialization:
  1038                           
  1039                           ; Initialize objects allocated to BANK1
  1040  000F  1383               	bcf	3,7	;select IRP bank0
  1041  0010  30C2               	movlw	low (__pdataBANK1+34)
  1042  0011  00FD               	movwf	btemp+-1
  1043  0012  3007               	movlw	high __pidataBANK1
  1044  0013  00FE               	movwf	btemp
  1045  0014  30DD               	movlw	low __pidataBANK1
  1046  0015  00FF               	movwf	btemp+1
  1047  0016  30A0               	movlw	low __pdataBANK1
  1048  0017  0084               	movwf	4
  1049  0018  160A  118A  2505  120A  118A  	fcall	init_ram0
  1050                           
  1051                           ; Initialize objects allocated to BANK0
  1052  001D  120A  158A  21B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1053  0022  00EA               	movwf	__pdataBANK0& (0+127)
  1054  0023  120A  158A  21B7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1055  0028  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  1056                           
  1057                           ; Clear objects allocated to BANK0
  1058  0029  305A               	movlw	low __pbssBANK0
  1059  002A  0084               	movwf	4
  1060  002B  306A               	movlw	low (__pbssBANK0+16)
  1061  002C  160A  118A  24D4  120A  118A  	fcall	clear_ram0
  1062                           
  1063                           ; Clear objects allocated to COMMON
  1064  0031  01F8               	clrf	__pbssCOMMON& (0+127)
  1065  0032  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1066  0033  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1067  0034                     end_of_initialization:	
  1068                           ;End of C runtime variable initialization code
  1069                           
  1070  0034                     __end_of__initialization:
  1071  0034  0183               	clrf	3
  1072  0035  120A  158A  2E69   	ljmp	_main	;jump to C main() function
  1073                           
  1074                           	psect	bssCOMMON
  1075  0078                     __pbssCOMMON:
  1076  0078                     _sec:
  1077  0078                     	ds	1
  1078  0079                     _water_level_index:
  1079  0079                     	ds	1
  1080  007A                     _program_no:
  1081  007A                     	ds	1
  1082                           
  1083                           	psect	bssBANK0
  1084  005A                     __pbssBANK0:
  1085  005A                     isr@count:
  1086  005A                     	ds	2
  1087  005C                     run_program@time:
  1088  005C                     	ds	2
  1089  005E                     run_program@total_time:
  1090  005E                     	ds	2
  1091  0060                     _spin_time:
  1092  0060                     	ds	2
  1093  0062                     _rinse_time:
  1094  0062                     	ds	2
  1095  0064                     _wash_time:
  1096  0064                     	ds	2
  1097  0066                     read_digital_keypad@longpress:
  1098  0066                     	ds	1
  1099  0067                     read_digital_keypad@pre_key:
  1100  0067                     	ds	1
  1101  0068                     _min:
  1102  0068                     	ds	1
  1103  0069                     _reset_mode:
  1104  0069                     	ds	1
  1105                           
  1106                           	psect	dataBANK0
  1107  006A                     __pdataBANK0:
  1108  006A                     read_digital_keypad@once:
  1109  006A                     	ds	2
  1110                           
  1111                           	psect	dataBANK1
  1112  00A0                     __pdataBANK1:
  1113  00A0                     _washing_prog:
  1114  00A0                     	ds	24
  1115  00B8                     _water_level_arr:
  1116  00B8                     	ds	10
  1117                           
  1118                           	psect	inittext
  1119  1501                     init_fetch0:	
  1120                           ;	Called with low address in FSR and high address in W
  1121                           
  1122  1501  087E               	movf	btemp,w
  1123  1502  008A               	movwf	10
  1124  1503  087F               	movf	btemp+1,w
  1125  1504  0082               	movwf	2
  1126  1505                     init_ram0:	
  1127                           ;Called with:
  1128                           ;	high address of idata address in btemp 
  1129                           ;	low address of idata address in btemp+1 
  1130                           ;	low address of data in FSR
  1131                           ;	high address + 1 of data in btemp-1
  1132                           
  1133  1505  160A  118A  2501  160A  118A  	fcall	init_fetch0
  1134  150A  0080               	movwf	0
  1135  150B  0A84               	incf	4,f
  1136  150C  0804               	movf	4,w
  1137  150D  067D               	xorwf	btemp+-1,w
  1138  150E  1903               	btfsc	3,2
  1139  150F  3400               	retlw	0
  1140  1510  0AFF               	incf	btemp+1,f
  1141  1511  1903               	btfsc	3,2
  1142  1512  0AFE               	incf	btemp,f
  1143  1513  2D05               	goto	init_ram0
  1144                           
  1145                           	psect	clrtext
  1146  14D4                     clear_ram0:	
  1147                           ;	Called with FSR containing the base address, and
  1148                           ;	W with the last address+1
  1149                           
  1150  14D4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1151  14D5                     clrloop0:
  1152  14D5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1153  14D6  0A84               	incf	4,f	;increment pointer
  1154  14D7  0604               	xorwf	4,w	;XOR with final address
  1155  14D8  1903               	btfsc	3,2	;have we reached the end yet?
  1156  14D9  3400               	retlw	0	;all done for this memory range, return
  1157  14DA  0604               	xorwf	4,w	;XOR again to restore value
  1158  14DB  2CD5               	goto	clrloop0	;do the next byte
  1159                           
  1160                           	psect	cstackBANK1
  1161  00C2                     __pcstackBANK1:
  1162  00C2                     main@j:
  1163                           
  1164                           ; 2 bytes @ 0x0
  1165  00C2                     	ds	2
  1166  00C4                     main@j_142:
  1167                           
  1168                           ; 2 bytes @ 0x2
  1169  00C4                     	ds	2
  1170  00C6                     main@key:
  1171                           
  1172                           ; 1 bytes @ 0x4
  1173  00C6                     	ds	1
  1174                           
  1175                           	psect	cstackCOMMON
  1176  0070                     __pcstackCOMMON:
  1177  0070                     ?_init_clcd:
  1178  0070                     ?_init_digital_keypad:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_init_timer2:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_read_digital_keypad:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_clear_screen:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_power_on_screen:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_set_time_for_program:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_washing_program_display:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_water_level_display:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_run_program:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_init_config:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_main:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_door_status_check:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_init_display_controller:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_isr:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ??_isr:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x0
  1225  0070                     	ds	3
  1226  0073                     ??_init_digital_keypad:
  1227  0073                     ??_init_timer2:	
  1228                           ; 1 bytes @ 0x3
  1229                           
  1230  0073                     ??_read_digital_keypad:	
  1231                           ; 1 bytes @ 0x3
  1232                           
  1233  0073                     ??_set_time_for_program:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     ?_clcd_write:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     ?__Umul8_16:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0073                     ?___wmul:	
  1243                           ; 2 bytes @ 0x3
  1244                           
  1245  0073                     ?___awdiv:	
  1246                           ; 2 bytes @ 0x3
  1247                           
  1248  0073                     ?___awmod:	
  1249                           ; 2 bytes @ 0x3
  1250                           
  1251  0073                     ?___xxtofl:	
  1252                           ; 2 bytes @ 0x3
  1253                           
  1254  0073                     clcd_write@mode:	
  1255                           ; 4 bytes @ 0x3
  1256                           
  1257  0073                     __Umul8_16@multiplicand:	
  1258                           ; 1 bytes @ 0x3
  1259                           
  1260  0073                     ___wmul@multiplier:	
  1261                           ; 1 bytes @ 0x3
  1262                           
  1263  0073                     ___awdiv@divisor:	
  1264                           ; 2 bytes @ 0x3
  1265                           
  1266  0073                     ___awmod@divisor:	
  1267                           ; 2 bytes @ 0x3
  1268                           
  1269  0073                     ___xxtofl@val:	
  1270                           ; 2 bytes @ 0x3
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x3
  1274  0073                     	ds	1
  1275  0074                     ??_clcd_write:
  1276  0074                     read_digital_keypad@mode:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279                           
  1280                           ; 1 bytes @ 0x4
  1281  0074                     	ds	1
  1282  0075                     ??__Umul8_16:
  1283  0075                     ___wmul@multiplicand:	
  1284                           ; 1 bytes @ 0x5
  1285                           
  1286  0075                     ___awdiv@dividend:	
  1287                           ; 2 bytes @ 0x5
  1288                           
  1289  0075                     ___awmod@dividend:	
  1290                           ; 2 bytes @ 0x5
  1291                           
  1292                           
  1293                           ; 2 bytes @ 0x5
  1294  0075                     	ds	1
  1295  0076                     clcd_write@byte:
  1296                           
  1297                           ; 1 bytes @ 0x6
  1298  0076                     	ds	1
  1299  0077                     ??_init_clcd:
  1300  0077                     ??_clcd_print:	
  1301                           ; 1 bytes @ 0x7
  1302                           
  1303  0077                     ??_clear_screen:	
  1304                           ; 1 bytes @ 0x7
  1305                           
  1306  0077                     ??_init_config:	
  1307                           ; 1 bytes @ 0x7
  1308                           
  1309  0077                     ??___wmul:	
  1310                           ; 1 bytes @ 0x7
  1311                           
  1312  0077                     ??___awdiv:	
  1313                           ; 1 bytes @ 0x7
  1314                           
  1315  0077                     ??___awmod:	
  1316                           ; 1 bytes @ 0x7
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x7
  1320  0077                     	ds	1
  1321  0078                     ??_clcd_putch:
  1322                           
  1323                           	psect	cstackBANK0
  1324  0020                     __pcstackBANK0:	
  1325                           ; 1 bytes @ 0x8
  1326                           
  1327  0020                     ?_clcd_print:
  1328  0020                     ??_init_display_controller:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0020                     ??___xxtofl:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0020                     ___awdiv@counter:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0020                     ___awmod@counter:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0020                     clcd_print@str:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0020                     ___wmul@product:	
  1344                           ; 2 bytes @ 0x0
  1345                           
  1346  0020                     __Umul8_16@product:	
  1347                           ; 2 bytes @ 0x0
  1348                           
  1349                           
  1350                           ; 2 bytes @ 0x0
  1351  0020                     	ds	1
  1352  0021                     ___awdiv@sign:
  1353  0021                     ___awmod@sign:	
  1354                           ; 1 bytes @ 0x1
  1355                           
  1356                           
  1357                           ; 1 bytes @ 0x1
  1358  0021                     	ds	1
  1359  0022                     clcd_print@addr:
  1360  0022                     ___awdiv@quotient:	
  1361                           ; 1 bytes @ 0x2
  1362                           
  1363  0022                     __Umul8_16@word_mpld:	
  1364                           ; 2 bytes @ 0x2
  1365                           
  1366                           
  1367                           ; 2 bytes @ 0x2
  1368  0022                     	ds	1
  1369  0023                     ??_door_status_check:
  1370                           
  1371                           ; 1 bytes @ 0x3
  1372  0023                     	ds	1
  1373  0024                     ?_clcd_putch:
  1374  0024                     clcd_putch@addr:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0024                     __Umul8_16@multiplier:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0024                     ___xxtofl@sign:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x4
  1385  0024                     	ds	1
  1386  0025                     clcd_putch@data:
  1387  0025                     ___xxtofl@exp:	
  1388                           ; 1 bytes @ 0x5
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0x5
  1392  0025                     	ds	1
  1393  0026                     ??_power_on_screen:
  1394  0026                     ??_washing_program_display:	
  1395                           ; 1 bytes @ 0x6
  1396                           
  1397  0026                     ??_water_level_display:	
  1398                           ; 1 bytes @ 0x6
  1399                           
  1400  0026                     ___xxtofl@arg:	
  1401                           ; 1 bytes @ 0x6
  1402                           
  1403                           
  1404                           ; 4 bytes @ 0x6
  1405  0026                     	ds	3
  1406  0029                     power_on_screen@i:
  1407  0029                     washing_program_display@key:	
  1408                           ; 1 bytes @ 0x9
  1409                           
  1410  0029                     water_level_display@key:	
  1411                           ; 1 bytes @ 0x9
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x9
  1415  0029                     	ds	1
  1416  002A                     ?___flmul:
  1417  002A                     power_on_screen@i_152:	
  1418                           ; 4 bytes @ 0xA
  1419                           
  1420  002A                     ___flmul@b:	
  1421                           ; 1 bytes @ 0xA
  1422                           
  1423                           
  1424                           ; 4 bytes @ 0xA
  1425  002A                     	ds	4
  1426  002E                     ___flmul@a:
  1427                           
  1428                           ; 4 bytes @ 0xE
  1429  002E                     	ds	4
  1430  0032                     ??___flmul:
  1431                           
  1432                           ; 1 bytes @ 0x12
  1433  0032                     	ds	5
  1434  0037                     ___flmul@sign:
  1435                           
  1436                           ; 1 bytes @ 0x17
  1437  0037                     	ds	1
  1438  0038                     ___flmul@aexp:
  1439                           
  1440                           ; 1 bytes @ 0x18
  1441  0038                     	ds	1
  1442  0039                     ___flmul@grs:
  1443                           
  1444                           ; 4 bytes @ 0x19
  1445  0039                     	ds	4
  1446  003D                     ___flmul@bexp:
  1447                           
  1448                           ; 1 bytes @ 0x1D
  1449  003D                     	ds	1
  1450  003E                     ___flmul@prod:
  1451                           
  1452                           ; 4 bytes @ 0x1E
  1453  003E                     	ds	4
  1454  0042                     ___flmul@temp:
  1455                           
  1456                           ; 2 bytes @ 0x22
  1457  0042                     	ds	2
  1458  0044                     ?___fltol:
  1459  0044                     ___fltol@f1:	
  1460                           ; 4 bytes @ 0x24
  1461                           
  1462                           
  1463                           ; 4 bytes @ 0x24
  1464  0044                     	ds	4
  1465  0048                     ??___fltol:
  1466                           
  1467                           ; 1 bytes @ 0x28
  1468  0048                     	ds	5
  1469  004D                     ___fltol@sign1:
  1470                           
  1471                           ; 1 bytes @ 0x2D
  1472  004D                     	ds	1
  1473  004E                     ___fltol@exp1:
  1474                           
  1475                           ; 1 bytes @ 0x2E
  1476  004E                     	ds	1
  1477  004F                     ??_run_program:
  1478                           
  1479                           ; 1 bytes @ 0x2F
  1480  004F                     	ds	7
  1481  0056                     run_program@key:
  1482                           
  1483                           ; 1 bytes @ 0x36
  1484  0056                     	ds	1
  1485  0057                     ??_main:
  1486                           
  1487                           ; 1 bytes @ 0x37
  1488  0057                     	ds	3
  1489                           
  1490                           	psect	maintext
  1491  0E69                     __pmaintext:	
  1492 ;;
  1493 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1494 ;;
  1495 ;; *************** function _main *****************
  1496 ;; Defined at:
  1497 ;;		line 29 in file "main.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  j               2    2[BANK1 ] int 
  1502 ;;  j               2    0[BANK1 ] int 
  1503 ;;  key             1    4[BANK1 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : B00/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       5       0       0
  1515 ;;      Temps:          0       3       0       0       0
  1516 ;;      Totals:         0       3       5       0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels required when called: 5
  1519 ;; This function calls:
  1520 ;;		_clcd_print
  1521 ;;		_clear_screen
  1522 ;;		_init_config
  1523 ;;		_power_on_screen
  1524 ;;		_read_digital_keypad
  1525 ;;		_run_program
  1526 ;;		_set_time_for_program
  1527 ;;		_washing_program_display
  1528 ;;		_water_level_display
  1529 ;; This function is called by:
  1530 ;;		Startup code after reset
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534  0E69                     _main:	
  1535                           ;psect for function _main
  1536                           
  1537  0E69                     l3887:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1540                           
  1541                           
  1542                           ;main.c: 31:     power_on_screen();;main.c: 32:     reset_mode = 0x10;
  1543  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0E6B  01EC               	clrf	_operation_mode
  1546  0E6C  0AEC               	incf	_operation_mode,f
  1547  0E6D                     l3889:
  1548                           
  1549                           ;main.c: 33:     while(1)
  1550  0E6D  160A  118A  2529  120A  158A  	fcall	_init_config
  1551  0E72                     l3891:
  1552                           
  1553                           ;main.c: 34:     {
  1554  0E72  3056               	movlw	low (STR_18| (0+32768))
  1555  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0E75  00A0               	movwf	clcd_print@str
  1558  0E76  3088               	movlw	high (STR_18| (0+32768))
  1559  0E77  00A1               	movwf	clcd_print@str+1
  1560  0E78  3080               	movlw	128
  1561  0E79  00D7               	movwf	??_main
  1562  0E7A  0857               	movf	??_main,w
  1563  0E7B  00A2               	movwf	clcd_print@addr
  1564  0E7C  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1565  0E81                     l3893:
  1566                           
  1567                           ;main.c: 35:       key=read_digital_keypad(1);
  1568  0E81  3012               	movlw	low (STR_19| (0+32768))
  1569  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0E84  00A0               	movwf	clcd_print@str
  1572  0E85  3088               	movlw	high (STR_19| (0+32768))
  1573  0E86  00A1               	movwf	clcd_print@str+1
  1574  0E87  30C0               	movlw	192
  1575  0E88  00D7               	movwf	??_main
  1576  0E89  0857               	movf	??_main,w
  1577  0E8A  00A2               	movwf	clcd_print@addr
  1578  0E8B  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1579  0E90                     l3895:
  1580                           
  1581                           ;main.c: 36:       for(int j=0;j<3000;j++);
  1582  0E90  3000               	movlw	low (STR_20| (0+32768))
  1583  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0E93  00A0               	movwf	clcd_print@str
  1586  0E94  3088               	movlw	high (STR_20| (0+32768))
  1587  0E95  00A1               	movwf	clcd_print@str+1
  1588  0E96  3090               	movlw	144
  1589  0E97  00D7               	movwf	??_main
  1590  0E98  0857               	movf	??_main,w
  1591  0E99  00A2               	movwf	clcd_print@addr
  1592  0E9A  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1593                           
  1594                           ;main.c: 37:       if(key == 0xB7 && operation_mode == 0x01)
  1595  0E9F  2EB9               	goto	l3907
  1596  0EA0                     l3897:
  1597                           
  1598                           ;main.c: 38:       {;main.c: 39:           operation_mode=0x02;
  1599  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0EA2  01C2               	clrf	main@j^(0+128)
  1602  0EA3  01C3               	clrf	(main@j+1)^(0+128)
  1603  0EA4                     l3903:
  1604  0EA4  3001               	movlw	1
  1605  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  1606  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  1607  0EA7  07C2               	addwf	main@j^(0+128),f
  1608  0EA8  1803               	skipnc
  1609  0EA9  0AC3               	incf	(main@j+1)^(0+128),f
  1610  0EAA  3000               	movlw	0
  1611  0EAB  07C3               	addwf	(main@j+1)^(0+128),f
  1612  0EAC                     l3905:
  1613  0EAC  0843               	movf	(main@j+1)^(0+128),w
  1614  0EAD  3A80               	xorlw	128
  1615  0EAE  00FF               	movwf	btemp+1
  1616  0EAF  308B               	movlw	139
  1617  0EB0  027F               	subwf	btemp+1,w
  1618  0EB1  1D03               	skipz
  1619  0EB2  2EB5               	goto	u4115
  1620  0EB3  30B8               	movlw	184
  1621  0EB4  0242               	subwf	main@j^(0+128),w
  1622  0EB5                     u4115:
  1623  0EB5  1C03               	skipc
  1624  0EB6  2EB8               	goto	u4111
  1625  0EB7  2EB9               	goto	u4110
  1626  0EB8                     u4111:
  1627  0EB8  2EA4               	goto	l3903
  1628  0EB9                     u4110:
  1629  0EB9                     l3907:
  1630                           
  1631                           ;main.c: 37:       if(key == 0xB7 && operation_mode == 0x01)
  1632  0EB9  3001               	movlw	1
  1633  0EBA  160A  118A  2730  120A  158A  	fcall	_read_digital_keypad
  1634  0EBF  3A2F               	xorlw	47
  1635  0EC0  1D03               	skipz
  1636  0EC1  2EC3               	goto	u4121
  1637  0EC2  2EC4               	goto	u4120
  1638  0EC3                     u4121:
  1639  0EC3  2EA0               	goto	l3897
  1640  0EC4                     u4120:
  1641  0EC4                     l3909:
  1642                           
  1643                           ;main.c: 41:       }
  1644  0EC4  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  1645  0EC9                     l3911:
  1646                           
  1647                           ;main.c: 42:       else if(key==0xB7 && operation_mode==0x02)
  1648  0EC9  160A  118A  26D0  120A  158A  	fcall	_power_on_screen
  1649  0ECE                     l3913:
  1650                           
  1651                           ;main.c: 43:       {
  1652  0ECE  3010               	movlw	16
  1653  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0ED1  00D7               	movwf	??_main
  1656  0ED2  0857               	movf	??_main,w
  1657  0ED3  00E9               	movwf	_reset_mode
  1658  0ED4                     l3915:
  1659                           
  1660                           ;main.c: 45:           clear_screen();;main.c: 46:           clcd_print(" Press Switch:"
      +                          ,(0x80+0));
  1661  0ED4  3001               	movlw	1
  1662  0ED5  160A  118A  2730  120A  158A  	fcall	_read_digital_keypad
  1663  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0EDC  00D7               	movwf	??_main
  1666  0EDD  0857               	movf	??_main,w
  1667  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0EE0  00C6               	movwf	main@key^(0+128)
  1670  0EE1                     l3917:
  1671                           
  1672                           ;main.c: 47:           clcd_print(" SW5: START ",(0xC0+0));
  1673  0EE1  01C4               	clrf	main@j_142^(0+128)
  1674  0EE2  01C5               	clrf	(main@j_142+1)^(0+128)
  1675  0EE3                     l3923:
  1676  0EE3  3001               	movlw	1
  1677  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0EE6  07C4               	addwf	main@j_142^(0+128),f
  1680  0EE7  1803               	skipnc
  1681  0EE8  0AC5               	incf	(main@j_142+1)^(0+128),f
  1682  0EE9  3000               	movlw	0
  1683  0EEA  07C5               	addwf	(main@j_142+1)^(0+128),f
  1684  0EEB                     l3925:
  1685  0EEB  0845               	movf	(main@j_142+1)^(0+128),w
  1686  0EEC  3A80               	xorlw	128
  1687  0EED  00FF               	movwf	btemp+1
  1688  0EEE  308B               	movlw	139
  1689  0EEF  027F               	subwf	btemp+1,w
  1690  0EF0  1D03               	skipz
  1691  0EF1  2EF4               	goto	u4135
  1692  0EF2  30B8               	movlw	184
  1693  0EF3  0244               	subwf	main@j_142^(0+128),w
  1694  0EF4                     u4135:
  1695  0EF4  1C03               	skipc
  1696  0EF5  2EF7               	goto	u4131
  1697  0EF6  2EF8               	goto	u4130
  1698  0EF7                     u4131:
  1699  0EF7  2EE3               	goto	l3923
  1700  0EF8                     u4130:
  1701  0EF8                     l3927:
  1702                           
  1703                           ;main.c: 48:           clcd_print(" SW6: STOP ",(0x90+0));
  1704  0EF8  30B7               	movlw	183
  1705  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0EFB  0646               	xorwf	main@key^(0+128),w
  1708  0EFC  1D03               	btfss	3,2
  1709  0EFD  2EFF               	goto	u4141
  1710  0EFE  2F00               	goto	u4140
  1711  0EFF                     u4141:
  1712  0EFF  2F10               	goto	l3933
  1713  0F00                     u4140:
  1714  0F00                     l3929:
  1715  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0F02  036C               	decf	_operation_mode,w
  1718  0F03  1D03               	btfss	3,2
  1719  0F04  2F06               	goto	u4151
  1720  0F05  2F07               	goto	u4150
  1721  0F06                     u4151:
  1722  0F06  2F10               	goto	l3933
  1723  0F07                     u4150:
  1724  0F07                     l3931:
  1725                           
  1726                           ;main.c: 49:           operation_mode=0x03;;main.c: 50:       }
  1727  0F07  3002               	movlw	2
  1728  0F08  00D7               	movwf	??_main
  1729  0F09  0857               	movf	??_main,w
  1730  0F0A  00EC               	movwf	_operation_mode
  1731                           
  1732                           ;main.c: 51:       else if(key == 0x2F && operation_mode ==0x05)
  1733  0F0B  3011               	movlw	17
  1734  0F0C  00D7               	movwf	??_main
  1735  0F0D  0857               	movf	??_main,w
  1736  0F0E  00E9               	movwf	_reset_mode
  1737                           
  1738                           ;main.c: 52:       {
  1739  0F0F  2FE2               	goto	l3985
  1740  0F10                     l3933:
  1741  0F10  30B7               	movlw	183
  1742  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0F13  0646               	xorwf	main@key^(0+128),w
  1745  0F14  1D03               	btfss	3,2
  1746  0F15  2F17               	goto	u4161
  1747  0F16  2F18               	goto	u4160
  1748  0F17                     u4161:
  1749  0F17  2F5E               	goto	l3949
  1750  0F18                     u4160:
  1751  0F18                     l3935:
  1752  0F18  3002               	movlw	2
  1753  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0F1B  066C               	xorwf	_operation_mode,w
  1756  0F1C  1D03               	btfss	3,2
  1757  0F1D  2F1F               	goto	u4171
  1758  0F1E  2F20               	goto	u4170
  1759  0F1F                     u4171:
  1760  0F1F  2F5E               	goto	l3949
  1761  0F20                     u4170:
  1762  0F20                     l3937:
  1763                           
  1764                           ;main.c: 54:           RC2 = 1;;main.c: 55:           RA0=1;
  1765  0F20  120A  158A  2520  120A  158A  	fcall	_set_time_for_program
  1766  0F25                     l3939:
  1767                           
  1768                           ;main.c: 56:           operation_mode=0x04;
  1769  0F25  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  1770  0F2A                     l3941:
  1771                           
  1772                           ;main.c: 57:       }
  1773  0F2A  3075               	movlw	low (STR_21| (0+32768))
  1774  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0F2D  00A0               	movwf	clcd_print@str
  1777  0F2E  3088               	movlw	high (STR_21| (0+32768))
  1778  0F2F  00A1               	movwf	clcd_print@str+1
  1779  0F30  3080               	movlw	128
  1780  0F31  00D7               	movwf	??_main
  1781  0F32  0857               	movf	??_main,w
  1782  0F33  00A2               	movwf	clcd_print@addr
  1783  0F34  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1784  0F39                     l3943:
  1785                           
  1786                           ;main.c: 58:       switch(operation_mode)
  1787  0F39  30B0               	movlw	low (STR_22| (0+32768))
  1788  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0F3C  00A0               	movwf	clcd_print@str
  1791  0F3D  3088               	movlw	high (STR_22| (0+32768))
  1792  0F3E  00A1               	movwf	clcd_print@str+1
  1793  0F3F  30C0               	movlw	192
  1794  0F40  00D7               	movwf	??_main
  1795  0F41  0857               	movf	??_main,w
  1796  0F42  00A2               	movwf	clcd_print@addr
  1797  0F43  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1798  0F48                     l3945:
  1799                           
  1800                           ;main.c: 59:       {
  1801  0F48  30D7               	movlw	low (STR_23| (0+32768))
  1802  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0F4B  00A0               	movwf	clcd_print@str
  1805  0F4C  3088               	movlw	high (STR_23| (0+32768))
  1806  0F4D  00A1               	movwf	clcd_print@str+1
  1807  0F4E  3090               	movlw	144
  1808  0F4F  00D7               	movwf	??_main
  1809  0F50  0857               	movf	??_main,w
  1810  0F51  00A2               	movwf	clcd_print@addr
  1811  0F52  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1812  0F57                     l3947:
  1813                           
  1814                           ;main.c: 60:           case 0x01:
  1815  0F57  3003               	movlw	3
  1816  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0F5A  00D7               	movwf	??_main
  1819  0F5B  0857               	movf	??_main,w
  1820  0F5C  00EC               	movwf	_operation_mode
  1821                           
  1822                           ;main.c: 61:               washing_program_display(key);
  1823  0F5D  2FE2               	goto	l3985
  1824  0F5E                     l3949:
  1825  0F5E  302F               	movlw	47
  1826  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  1827  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  1828  0F61  0646               	xorwf	main@key^(0+128),w
  1829  0F62  1D03               	btfss	3,2
  1830  0F63  2F65               	goto	u4181
  1831  0F64  2F66               	goto	u4180
  1832  0F65                     u4181:
  1833  0F65  2F76               	goto	l91
  1834  0F66                     u4180:
  1835  0F66                     l3951:
  1836  0F66  3005               	movlw	5
  1837  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0F69  066C               	xorwf	_operation_mode,w
  1840  0F6A  1D03               	btfss	3,2
  1841  0F6B  2F6D               	goto	u4191
  1842  0F6C  2F6E               	goto	u4190
  1843  0F6D                     u4191:
  1844  0F6D  2F76               	goto	l91
  1845  0F6E                     u4190:
  1846  0F6E                     l3953:
  1847                           
  1848                           ;main.c: 63:           case 0x02:;main.c: 64:               water_level_display(key);
  1849  0F6E  1512               	bsf	18,2	;volatile
  1850                           
  1851                           ;main.c: 65:               break;
  1852  0F6F  1507               	bsf	7,2	;volatile
  1853                           
  1854                           ;main.c: 66:           case 0x03:
  1855  0F70  1405               	bsf	5,0	;volatile
  1856  0F71                     l3955:
  1857                           
  1858                           ;main.c: 67:               if(key==0x2F)
  1859  0F71  3004               	movlw	4
  1860  0F72  00D7               	movwf	??_main
  1861  0F73  0857               	movf	??_main,w
  1862  0F74  00EC               	movwf	_operation_mode
  1863  0F75  2FE2               	goto	l3985
  1864  0F76                     l91:
  1865                           
  1866                           ;main.c: 69:                   operation_mode=0x04;
  1867  0F76  2FE2               	goto	l3985
  1868  0F77                     l3957:
  1869                           
  1870                           ;main.c: 72:               }
  1871  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0F79  0846               	movf	main@key^(0+128),w
  1874  0F7A  120A  158A  22E0  120A  158A  	fcall	_washing_program_display
  1875                           
  1876                           ;main.c: 73:               else if(key==0x1F)
  1877  0F7F  2FF9               	goto	l3987
  1878  0F80                     l3959:
  1879                           
  1880                           ;main.c: 75:                   clear_screen();
  1881  0F80  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0F81  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0F82  0846               	movf	main@key^(0+128),w
  1884  0F83  120A  158A  2400  120A  158A  	fcall	_water_level_display
  1885                           
  1886                           ;main.c: 76:                   clcd_print("Returning To ",(0x80+2));
  1887  0F88  2FF9               	goto	l3987
  1888  0F89                     l3961:
  1889                           
  1890                           ;main.c: 78:                   _delay((unsigned long)((1000)*(20000000/4000.0)));
  1891  0F89  302F               	movlw	47
  1892  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0F8C  0646               	xorwf	main@key^(0+128),w
  1895  0F8D  1D03               	btfss	3,2
  1896  0F8E  2F90               	goto	u4201
  1897  0F8F  2F91               	goto	u4200
  1898  0F90                     u4201:
  1899  0F90  2F9C               	goto	l3967
  1900  0F91                     u4200:
  1901  0F91                     l3963:
  1902                           
  1903                           ;main.c: 79:                   operation_mode=0x01;;main.c: 80:                   reset_
      +                          mode=0x10;
  1904  0F91  3004               	movlw	4
  1905  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0F94  00D7               	movwf	??_main
  1908  0F95  0857               	movf	??_main,w
  1909  0F96  00EC               	movwf	_operation_mode
  1910                           
  1911                           ;main.c: 81:                   continue;
  1912  0F97  3012               	movlw	18
  1913  0F98  00D7               	movwf	??_main
  1914  0F99  0857               	movf	??_main,w
  1915  0F9A  00E9               	movwf	_reset_mode
  1916                           
  1917                           ;main.c: 82:               }
  1918  0F9B  2ED4               	goto	l3915
  1919  0F9C                     l3967:
  1920  0F9C  301F               	movlw	31
  1921  0F9D  0646               	xorwf	main@key^(0+128),w
  1922  0F9E  1D03               	btfss	3,2
  1923  0F9F  2FA1               	goto	u4211
  1924  0FA0  2FA2               	goto	u4210
  1925  0FA1                     u4211:
  1926  0FA1  2FF9               	goto	l3987
  1927  0FA2                     u4210:
  1928  0FA2                     l3969:
  1929                           
  1930                           ;main.c: 85:               run_program(key);;main.c: 86:               break;
  1931  0FA2  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  1932  0FA7                     l3971:
  1933                           
  1934                           ;main.c: 87:       }
  1935  0FA7  30A2               	movlw	low (STR_24| (0+32768))
  1936  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0FAA  00A0               	movwf	clcd_print@str
  1939  0FAB  3088               	movlw	high (STR_24| (0+32768))
  1940  0FAC  00A1               	movwf	clcd_print@str+1
  1941  0FAD  3082               	movlw	130
  1942  0FAE  00D7               	movwf	??_main
  1943  0FAF  0857               	movf	??_main,w
  1944  0FB0  00A2               	movwf	clcd_print@addr
  1945  0FB1  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1946  0FB6                     l3973:
  1947                           
  1948                           ;main.c: 88:       reset_mode=0x00;
  1949  0FB6  3066               	movlw	low (STR_25| (0+32768))
  1950  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0FB9  00A0               	movwf	clcd_print@str
  1953  0FBA  3088               	movlw	high (STR_25| (0+32768))
  1954  0FBB  00A1               	movwf	clcd_print@str+1
  1955  0FBC  30C2               	movlw	194
  1956  0FBD  00D7               	movwf	??_main
  1957  0FBE  0857               	movf	??_main,w
  1958  0FBF  00A2               	movwf	clcd_print@addr
  1959  0FC0  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  1960  0FC5                     l3975:
  1961                           
  1962                           ;main.c: 89:     }
  1963  0FC5  301A               	movlw	26
  1964  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0FC8  00D9               	movwf	??_main+2
  1967  0FC9  305E               	movlw	94
  1968  0FCA  00D8               	movwf	??_main+1
  1969  0FCB  306D               	movlw	109
  1970  0FCC  00D7               	movwf	??_main
  1971  0FCD                     u4227:
  1972  0FCD  0BD7               	decfsz	??_main,f
  1973  0FCE  2FCD               	goto	u4227
  1974  0FCF  0BD8               	decfsz	??_main+1,f
  1975  0FD0  2FCD               	goto	u4227
  1976  0FD1  0BD9               	decfsz	??_main+2,f
  1977  0FD2  2FCD               	goto	u4227
  1978  0FD3  2FD4               	nop2
  1979  0FD4                     l3977:
  1980                           
  1981                           ;main.c: 90: }
  1982  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0FD6  01EC               	clrf	_operation_mode
  1985  0FD7  0AEC               	incf	_operation_mode,f
  1986  0FD8  2ECE               	goto	l3913
  1987  0FD9                     l3981:
  1988                           
  1989                           ;main.c: 96:     }
  1990  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0FDB  0846               	movf	main@key^(0+128),w
  1993  0FDC  120A  118A  2038  120A  158A  	fcall	_run_program
  1994                           
  1995                           ;main.c: 97:     clcd_print("  Powering ON   ",(0xC0+0));
  1996  0FE1  2FF9               	goto	l3987
  1997  0FE2                     l3985:
  1998  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0FE3  086C               	movf	_operation_mode,w
  2000  0FE4  00D7               	movwf	??_main
  2001  0FE5  01D8               	clrf	??_main+1
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ; direct_byte           11     8 (fixed)
  2010                           ; jumptable            260     6 (fixed)
  2011                           ;	Chosen strategy is simple_byte
  2012  0FE6  0858               	movf	??_main+1,w
  2013  0FE7  3A00               	xorlw	0	; case 0
  2014  0FE8  1903               	skipnz
  2015  0FE9  2FEB               	goto	l4165
  2016  0FEA  2FF9               	goto	l3987
  2017  0FEB                     l4165:
  2018                           
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 4, Range of values is 1 to 4
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte           13     7 (average)
  2024                           ; direct_byte           23    11 (fixed)
  2025                           ; jumptable            263     9 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027  0FEB  0857               	movf	??_main,w
  2028  0FEC  3A01               	xorlw	1	; case 1
  2029  0FED  1903               	skipnz
  2030  0FEE  2F77               	goto	l3957
  2031  0FEF  3A03               	xorlw	3	; case 2
  2032  0FF0  1903               	skipnz
  2033  0FF1  2F80               	goto	l3959
  2034  0FF2  3A01               	xorlw	1	; case 3
  2035  0FF3  1903               	skipnz
  2036  0FF4  2F89               	goto	l3961
  2037  0FF5  3A07               	xorlw	7	; case 4
  2038  0FF6  1903               	skipnz
  2039  0FF7  2FD9               	goto	l3981
  2040  0FF8  2FF9               	goto	l3987
  2041  0FF9                     l3987:
  2042                           
  2043                           ;main.c: 99:     for(unsigned char i=0;i<16;i++)
  2044  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0FFB  01E9               	clrf	_reset_mode
  2047  0FFC  2ED4               	goto	l3915
  2048  0FFD  120A  118A  280C   	ljmp	start
  2049  1000                     __end_of_main:
  2050                           
  2051                           	psect	text1
  2052  0C00                     __ptext1:	
  2053 ;; *************** function _water_level_display *****************
  2054 ;; Defined at:
  2055 ;;		line 158 in file "main.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  key             1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  key             1    9[BANK0 ] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2069 ;;      Params:         0       0       0       0       0
  2070 ;;      Locals:         0       1       0       0       0
  2071 ;;      Temps:          0       3       0       0       0
  2072 ;;      Totals:         0       4       0       0       0
  2073 ;;Total ram usage:        4 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 3
  2076 ;; This function calls:
  2077 ;;		_clcd_print
  2078 ;;		_clcd_putch
  2079 ;;		_clear_screen
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085  0C00                     _water_level_display:	
  2086                           ;psect for function _water_level_display
  2087                           
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _water_level_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2091                           ;water_level_display@key stored from wreg
  2092  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0C02  00A9               	movwf	water_level_display@key
  2095  0C03                     l3745:
  2096                           
  2097                           ;main.c: 158:         {;main.c: 159:             water_level_index=0;;main.c: 160:      
      +                             }
  2098  0C03  3011               	movlw	17
  2099  0C04  0669               	xorwf	_reset_mode,w
  2100  0C05  1D03               	btfss	3,2
  2101  0C06  2C08               	goto	u3951
  2102  0C07  2C09               	goto	u3950
  2103  0C08                     u3951:
  2104  0C08  2C0F               	goto	l3751
  2105  0C09                     u3950:
  2106  0C09                     l3747:
  2107                           
  2108                           ;main.c: 161:         clear_screen();;main.c: 162:     }
  2109  0C09  01F9               	clrf	_water_level_index
  2110  0C0A                     l3749:
  2111                           
  2112                           ;main.c: 163:     clcd_print("Water Level:",(0x80+0));
  2113  0C0A  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  2114  0C0F                     l3751:
  2115                           
  2116                           ;main.c: 165:     if(water_level_index <= 2)
  2117  0C0F  3037               	movlw	55
  2118  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0C12  0629               	xorwf	water_level_display@key,w
  2121  0C13  1D03               	btfss	3,2
  2122  0C14  2C16               	goto	u3961
  2123  0C15  2C17               	goto	u3960
  2124  0C16                     u3961:
  2125  0C16  2C27               	goto	l3759
  2126  0C17                     u3960:
  2127  0C17                     l3753:
  2128                           
  2129                           ;main.c: 166:     {;main.c: 167:         clcd_print(water_level_arr[water_level_index],(
      +                          0xC0+2));
  2130  0C17  3001               	movlw	1
  2131  0C18  00A6               	movwf	??_water_level_display
  2132  0C19  0826               	movf	??_water_level_display,w
  2133  0C1A  07F9               	addwf	_water_level_index,f
  2134                           
  2135                           ;main.c: 168:         clcd_print(water_level_arr[water_level_index + 1],(0x90+2));
  2136  0C1B  3005               	movlw	5
  2137  0C1C  0679               	xorwf	_water_level_index,w
  2138  0C1D  1D03               	btfss	3,2
  2139  0C1E  2C20               	goto	u3971
  2140  0C1F  2C21               	goto	u3970
  2141  0C20                     u3971:
  2142  0C20  2C22               	goto	l3757
  2143  0C21                     u3970:
  2144  0C21                     l3755:
  2145                           
  2146                           ;main.c: 169:         clcd_print(water_level_arr[water_level_index + 2],(0xD0+2));;main.
      +                          c: 170:     }
  2147  0C21  01F9               	clrf	_water_level_index
  2148  0C22                     l3757:
  2149                           
  2150                           ;main.c: 172:     {
  2151  0C22  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  2152  0C27                     l3759:
  2153                           
  2154                           ;main.c: 174:         clcd_print(water_level_arr[water_level_index + 1],(0x90+2));
  2155  0C27  30BD               	movlw	low (STR_29| (0+32768))
  2156  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0C2A  00A0               	movwf	clcd_print@str
  2159  0C2B  3088               	movlw	high (STR_29| (0+32768))
  2160  0C2C  00A1               	movwf	clcd_print@str+1
  2161  0C2D  3080               	movlw	128
  2162  0C2E  00A6               	movwf	??_water_level_display
  2163  0C2F  0826               	movf	??_water_level_display,w
  2164  0C30  00A2               	movwf	clcd_print@addr
  2165  0C31  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2166  0C36                     l3761:
  2167                           
  2168                           ;main.c: 175:         clcd_print(water_level_arr[0],(0xD0+2));
  2169  0C36  30C0               	movlw	192
  2170  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0C39  00A6               	movwf	??_water_level_display
  2173  0C3A  0826               	movf	??_water_level_display,w
  2174  0C3B  00A4               	movwf	clcd_putch@addr
  2175  0C3C  302A               	movlw	42
  2176  0C3D  160A  118A  2514  120A  158A  	fcall	_clcd_putch
  2177  0C42                     l3763:
  2178                           
  2179                           ;main.c: 176:     }
  2180  0C42  3003               	movlw	3
  2181  0C43  0279               	subwf	_water_level_index,w
  2182  0C44  1803               	skipnc
  2183  0C45  2C47               	goto	u3981
  2184  0C46  2C48               	goto	u3980
  2185  0C47                     u3981:
  2186  0C47  2C8E               	goto	l3767
  2187  0C48                     u3980:
  2188  0C48                     l3765:
  2189                           
  2190                           ;main.c: 177:     else if(water_level_index == 4);main.c: 178:     {
  2191  0C48  0879               	movf	_water_level_index,w
  2192  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0C4B  00A6               	movwf	??_water_level_display
  2195  0C4C  0726               	addwf	??_water_level_display,w
  2196  0C4D  3EB8               	addlw	(low (_water_level_arr| 0))& (0+255)
  2197  0C4E  0084               	movwf	4
  2198  0C4F  1383               	bcf	3,7	;select IRP bank1
  2199  0C50  0800               	movf	0,w
  2200  0C51  00A0               	movwf	clcd_print@str
  2201  0C52  0A84               	incf	4,f
  2202  0C53  0800               	movf	0,w
  2203  0C54  0384               	decf	4,f
  2204  0C55  00A1               	movwf	clcd_print@str+1
  2205  0C56  30C2               	movlw	194
  2206  0C57  00A8               	movwf	??_water_level_display+2
  2207  0C58  0828               	movf	??_water_level_display+2,w
  2208  0C59  00A2               	movwf	clcd_print@addr
  2209  0C5A  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2210                           
  2211                           ;main.c: 179:         clcd_print(water_level_arr[water_level_index],(0xC0+2));
  2212  0C5F  0879               	movf	_water_level_index,w
  2213  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0C62  00A6               	movwf	??_water_level_display
  2216  0C63  0726               	addwf	??_water_level_display,w
  2217  0C64  3EBA               	addlw	(low ((_water_level_arr| 0+2)))& (0+255)
  2218  0C65  0084               	movwf	4
  2219  0C66  1383               	bcf	3,7	;select IRP bank1
  2220  0C67  0800               	movf	0,w
  2221  0C68  00A0               	movwf	clcd_print@str
  2222  0C69  0A84               	incf	4,f
  2223  0C6A  0800               	movf	0,w
  2224  0C6B  0384               	decf	4,f
  2225  0C6C  00A1               	movwf	clcd_print@str+1
  2226  0C6D  3092               	movlw	146
  2227  0C6E  00A8               	movwf	??_water_level_display+2
  2228  0C6F  0828               	movf	??_water_level_display+2,w
  2229  0C70  00A2               	movwf	clcd_print@addr
  2230  0C71  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2231                           
  2232                           ;main.c: 180:         clcd_print(water_level_arr[0],(0x90+2));
  2233  0C76  0879               	movf	_water_level_index,w
  2234  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0C79  00A6               	movwf	??_water_level_display
  2237  0C7A  0726               	addwf	??_water_level_display,w
  2238  0C7B  3EBC               	addlw	(low ((_water_level_arr| 0+4)))& (0+255)
  2239  0C7C  0084               	movwf	4
  2240  0C7D  1383               	bcf	3,7	;select IRP bank1
  2241  0C7E  0800               	movf	0,w
  2242  0C7F  00A0               	movwf	clcd_print@str
  2243  0C80  0A84               	incf	4,f
  2244  0C81  0800               	movf	0,w
  2245  0C82  0384               	decf	4,f
  2246  0C83  00A1               	movwf	clcd_print@str+1
  2247  0C84  30D2               	movlw	210
  2248  0C85  00A8               	movwf	??_water_level_display+2
  2249  0C86  0828               	movf	??_water_level_display+2,w
  2250  0C87  00A2               	movwf	clcd_print@addr
  2251  0C88  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2252                           
  2253                           ;main.c: 181:         clcd_print(water_level_arr[1],(0xD0+2));
  2254  0C8D  2D1F               	goto	l138
  2255  0C8E                     l3767:
  2256  0C8E  3003               	movlw	3
  2257  0C8F  0679               	xorwf	_water_level_index,w
  2258  0C90  1D03               	btfss	3,2
  2259  0C91  2C93               	goto	u3991
  2260  0C92  2C94               	goto	u3990
  2261  0C93                     u3991:
  2262  0C93  2CD8               	goto	l3771
  2263  0C94                     u3990:
  2264  0C94                     l3769:
  2265                           
  2266                           ;main.c: 183: };main.c: 184: void set_time_for_program(void)
  2267  0C94  0879               	movf	_water_level_index,w
  2268  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0C97  00A6               	movwf	??_water_level_display
  2271  0C98  0726               	addwf	??_water_level_display,w
  2272  0C99  3EB8               	addlw	(low (_water_level_arr| 0))& (0+255)
  2273  0C9A  0084               	movwf	4
  2274  0C9B  1383               	bcf	3,7	;select IRP bank1
  2275  0C9C  0800               	movf	0,w
  2276  0C9D  00A0               	movwf	clcd_print@str
  2277  0C9E  0A84               	incf	4,f
  2278  0C9F  0800               	movf	0,w
  2279  0CA0  0384               	decf	4,f
  2280  0CA1  00A1               	movwf	clcd_print@str+1
  2281  0CA2  30C2               	movlw	194
  2282  0CA3  00A8               	movwf	??_water_level_display+2
  2283  0CA4  0828               	movf	??_water_level_display+2,w
  2284  0CA5  00A2               	movwf	clcd_print@addr
  2285  0CA6  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2286                           
  2287                           ;main.c: 185: {
  2288  0CAB  0879               	movf	_water_level_index,w
  2289  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0CAE  00A6               	movwf	??_water_level_display
  2292  0CAF  0726               	addwf	??_water_level_display,w
  2293  0CB0  3EBA               	addlw	(low ((_water_level_arr| 0+2)))& (0+255)
  2294  0CB1  0084               	movwf	4
  2295  0CB2  1383               	bcf	3,7	;select IRP bank1
  2296  0CB3  0800               	movf	0,w
  2297  0CB4  00A0               	movwf	clcd_print@str
  2298  0CB5  0A84               	incf	4,f
  2299  0CB6  0800               	movf	0,w
  2300  0CB7  0384               	decf	4,f
  2301  0CB8  00A1               	movwf	clcd_print@str+1
  2302  0CB9  3092               	movlw	146
  2303  0CBA  00A8               	movwf	??_water_level_display+2
  2304  0CBB  0828               	movf	??_water_level_display+2,w
  2305  0CBC  00A2               	movwf	clcd_print@addr
  2306  0CBD  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2307                           
  2308                           ;main.c: 186:     switch(program_no)
  2309  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0CC4  0838               	movf	_water_level_arr^(0+128),w
  2312  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0CC7  00A0               	movwf	clcd_print@str
  2315  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0CCA  0839               	movf	(_water_level_arr+1)^(0+128),w
  2318  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0CCD  00A1               	movwf	clcd_print@str+1
  2321  0CCE  30D2               	movlw	210
  2322  0CCF  00A6               	movwf	??_water_level_display
  2323  0CD0  0826               	movf	??_water_level_display,w
  2324  0CD1  00A2               	movwf	clcd_print@addr
  2325  0CD2  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2326                           
  2327                           ;main.c: 187:     {
  2328  0CD7  2D1F               	goto	l138
  2329  0CD8                     l3771:
  2330  0CD8  3004               	movlw	4
  2331  0CD9  0679               	xorwf	_water_level_index,w
  2332  0CDA  1D03               	btfss	3,2
  2333  0CDB  2CDD               	goto	u4001
  2334  0CDC  2CDE               	goto	u4000
  2335  0CDD                     u4001:
  2336  0CDD  2D1F               	goto	l138
  2337  0CDE                     u4000:
  2338  0CDE                     l3773:
  2339                           
  2340                           ;main.c: 189:             switch(water_level_index);main.c: 190:             {
  2341  0CDE  0879               	movf	_water_level_index,w
  2342  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0CE1  00A6               	movwf	??_water_level_display
  2345  0CE2  0726               	addwf	??_water_level_display,w
  2346  0CE3  3EB8               	addlw	(low (_water_level_arr| 0))& (0+255)
  2347  0CE4  0084               	movwf	4
  2348  0CE5  1383               	bcf	3,7	;select IRP bank1
  2349  0CE6  0800               	movf	0,w
  2350  0CE7  00A0               	movwf	clcd_print@str
  2351  0CE8  0A84               	incf	4,f
  2352  0CE9  0800               	movf	0,w
  2353  0CEA  0384               	decf	4,f
  2354  0CEB  00A1               	movwf	clcd_print@str+1
  2355  0CEC  30C2               	movlw	194
  2356  0CED  00A8               	movwf	??_water_level_display+2
  2357  0CEE  0828               	movf	??_water_level_display+2,w
  2358  0CEF  00A2               	movwf	clcd_print@addr
  2359  0CF0  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2360                           
  2361                           ;main.c: 191:                 case 1:
  2362  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0CF7  0838               	movf	_water_level_arr^(0+128),w
  2365  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0CFA  00A0               	movwf	clcd_print@str
  2368  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0CFD  0839               	movf	(_water_level_arr+1)^(0+128),w
  2371  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  2372  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  2373  0D00  00A1               	movwf	clcd_print@str+1
  2374  0D01  3092               	movlw	146
  2375  0D02  00A6               	movwf	??_water_level_display
  2376  0D03  0826               	movf	??_water_level_display,w
  2377  0D04  00A2               	movwf	clcd_print@addr
  2378  0D05  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2379                           
  2380                           ;main.c: 192:                     sec=33;
  2381  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  2383  0D0C  083A               	movf	(low ((_water_level_arr| 0+2)))^(0+128),w
  2384  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0D0F  00A0               	movwf	clcd_print@str
  2387  0D10  1683               	bsf	3,5	;RP0=1, select bank1
  2388  0D11  1303               	bcf	3,6	;RP1=0, select bank1
  2389  0D12  083B               	movf	((low ((_water_level_arr| 0+2))+1))^(0+128),w
  2390  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0D15  00A1               	movwf	clcd_print@str+1
  2393  0D16  30D2               	movlw	210
  2394  0D17  00A6               	movwf	??_water_level_display
  2395  0D18  0826               	movf	??_water_level_display,w
  2396  0D19  00A2               	movwf	clcd_print@addr
  2397  0D1A  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2398  0D1F                     l138:
  2399  0D1F  0008               	return
  2400  0D20                     __end_of_water_level_display:
  2401                           
  2402                           	psect	text2
  2403  0AE0                     __ptext2:	
  2404 ;; *************** function _washing_program_display *****************
  2405 ;; Defined at:
  2406 ;;		line 121 in file "main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  key             1    wreg     unsigned char 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  key             1    9[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       0       0
  2421 ;;      Locals:         0       1       0       0       0
  2422 ;;      Temps:          0       3       0       0       0
  2423 ;;      Totals:         0       4       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 3
  2427 ;; This function calls:
  2428 ;;		_clcd_print
  2429 ;;		_clcd_putch
  2430 ;;		_clear_screen
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436  0AE0                     _washing_program_display:	
  2437                           ;psect for function _washing_program_display
  2438                           
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _washing_program_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2442                           ;washing_program_display@key stored from wreg
  2443  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0AE2  00A9               	movwf	washing_program_display@key
  2446  0AE3                     l3715:
  2447                           
  2448                           ;main.c: 121:         {;main.c: 122:             program_no=0;;main.c: 123:         }
  2449  0AE3  3010               	movlw	16
  2450  0AE4  0669               	xorwf	_reset_mode,w
  2451  0AE5  1D03               	btfss	3,2
  2452  0AE6  2AE8               	goto	u3891
  2453  0AE7  2AE9               	goto	u3890
  2454  0AE8                     u3891:
  2455  0AE8  2AEF               	goto	l3721
  2456  0AE9                     u3890:
  2457  0AE9                     l3717:
  2458                           
  2459                           ;main.c: 124:         clear_screen();;main.c: 125:     }
  2460  0AE9  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  2461  0AEE                     l3719:
  2462                           
  2463                           ;main.c: 126:     clcd_print("Washing Programs",(0x80+0));
  2464  0AEE  01FA               	clrf	_program_no
  2465  0AEF                     l3721:
  2466                           
  2467                           ;main.c: 128:     if(program_no<=9)
  2468  0AEF  3037               	movlw	55
  2469  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0AF2  0629               	xorwf	washing_program_display@key,w
  2472  0AF3  1D03               	btfss	3,2
  2473  0AF4  2AF6               	goto	u3901
  2474  0AF5  2AF7               	goto	u3900
  2475  0AF6                     u3901:
  2476  0AF6  2B07               	goto	l3729
  2477  0AF7                     u3900:
  2478  0AF7                     l3723:
  2479                           
  2480                           ;main.c: 129:     {;main.c: 130:     clcd_print(washing_prog[program_no],(0xC0+2));
  2481  0AF7  3001               	movlw	1
  2482  0AF8  00A6               	movwf	??_washing_program_display
  2483  0AF9  0826               	movf	??_washing_program_display,w
  2484  0AFA  07FA               	addwf	_program_no,f
  2485                           
  2486                           ;main.c: 131:     clcd_print(washing_prog[program_no + 1],(0x90+2));
  2487  0AFB  300C               	movlw	12
  2488  0AFC  067A               	xorwf	_program_no,w
  2489  0AFD  1D03               	btfss	3,2
  2490  0AFE  2B00               	goto	u3911
  2491  0AFF  2B01               	goto	u3910
  2492  0B00                     u3911:
  2493  0B00  2B02               	goto	l3727
  2494  0B01                     u3910:
  2495  0B01                     l3725:
  2496                           
  2497                           ;main.c: 132:     clcd_print(washing_prog[program_no + 2],(0xD0+2));;main.c: 133:     }
  2498  0B01  01FA               	clrf	_program_no
  2499  0B02                     l3727:
  2500                           
  2501                           ;main.c: 135:     {
  2502  0B02  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  2503  0B07                     l3729:
  2504                           
  2505                           ;main.c: 137:     clcd_print(washing_prog[program_no + 1],(0x90+2));
  2506  0B07  3045               	movlw	low (STR_28| (0+32768))
  2507  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0B0A  00A0               	movwf	clcd_print@str
  2510  0B0B  3088               	movlw	high (STR_28| (0+32768))
  2511  0B0C  00A1               	movwf	clcd_print@str+1
  2512  0B0D  3080               	movlw	128
  2513  0B0E  00A6               	movwf	??_washing_program_display
  2514  0B0F  0826               	movf	??_washing_program_display,w
  2515  0B10  00A2               	movwf	clcd_print@addr
  2516  0B11  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2517  0B16                     l3731:
  2518                           
  2519                           ;main.c: 138:     clcd_print(washing_prog[0],(0xD0+2));
  2520  0B16  30C0               	movlw	192
  2521  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0B19  00A6               	movwf	??_washing_program_display
  2524  0B1A  0826               	movf	??_washing_program_display,w
  2525  0B1B  00A4               	movwf	clcd_putch@addr
  2526  0B1C  302A               	movlw	42
  2527  0B1D  160A  118A  2514  120A  158A  	fcall	_clcd_putch
  2528  0B22                     l3733:
  2529                           
  2530                           ;main.c: 139:     }
  2531  0B22  300A               	movlw	10
  2532  0B23  027A               	subwf	_program_no,w
  2533  0B24  1803               	skipnc
  2534  0B25  2B27               	goto	u3921
  2535  0B26  2B28               	goto	u3920
  2536  0B27                     u3921:
  2537  0B27  2B6E               	goto	l3737
  2538  0B28                     u3920:
  2539  0B28                     l3735:
  2540                           
  2541                           ;main.c: 140:     else if(program_no==11);main.c: 141:     {
  2542  0B28  087A               	movf	_program_no,w
  2543  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0B2B  00A6               	movwf	??_washing_program_display
  2546  0B2C  0726               	addwf	??_washing_program_display,w
  2547  0B2D  3EA0               	addlw	(low (_washing_prog| 0))& (0+255)
  2548  0B2E  0084               	movwf	4
  2549  0B2F  1383               	bcf	3,7	;select IRP bank1
  2550  0B30  0800               	movf	0,w
  2551  0B31  00A0               	movwf	clcd_print@str
  2552  0B32  0A84               	incf	4,f
  2553  0B33  0800               	movf	0,w
  2554  0B34  0384               	decf	4,f
  2555  0B35  00A1               	movwf	clcd_print@str+1
  2556  0B36  30C2               	movlw	194
  2557  0B37  00A8               	movwf	??_washing_program_display+2
  2558  0B38  0828               	movf	??_washing_program_display+2,w
  2559  0B39  00A2               	movwf	clcd_print@addr
  2560  0B3A  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2561                           
  2562                           ;main.c: 142:     clcd_print(washing_prog[program_no],(0xC0+2));
  2563  0B3F  087A               	movf	_program_no,w
  2564  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0B42  00A6               	movwf	??_washing_program_display
  2567  0B43  0726               	addwf	??_washing_program_display,w
  2568  0B44  3EA2               	addlw	(low ((_washing_prog| 0+2)))& (0+255)
  2569  0B45  0084               	movwf	4
  2570  0B46  1383               	bcf	3,7	;select IRP bank1
  2571  0B47  0800               	movf	0,w
  2572  0B48  00A0               	movwf	clcd_print@str
  2573  0B49  0A84               	incf	4,f
  2574  0B4A  0800               	movf	0,w
  2575  0B4B  0384               	decf	4,f
  2576  0B4C  00A1               	movwf	clcd_print@str+1
  2577  0B4D  3092               	movlw	146
  2578  0B4E  00A8               	movwf	??_washing_program_display+2
  2579  0B4F  0828               	movf	??_washing_program_display+2,w
  2580  0B50  00A2               	movwf	clcd_print@addr
  2581  0B51  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2582                           
  2583                           ;main.c: 143:     clcd_print(washing_prog[0],(0x90+2));
  2584  0B56  087A               	movf	_program_no,w
  2585  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0B59  00A6               	movwf	??_washing_program_display
  2588  0B5A  0726               	addwf	??_washing_program_display,w
  2589  0B5B  3EA4               	addlw	(low ((_washing_prog| 0+4)))& (0+255)
  2590  0B5C  0084               	movwf	4
  2591  0B5D  1383               	bcf	3,7	;select IRP bank1
  2592  0B5E  0800               	movf	0,w
  2593  0B5F  00A0               	movwf	clcd_print@str
  2594  0B60  0A84               	incf	4,f
  2595  0B61  0800               	movf	0,w
  2596  0B62  0384               	decf	4,f
  2597  0B63  00A1               	movwf	clcd_print@str+1
  2598  0B64  30D2               	movlw	210
  2599  0B65  00A8               	movwf	??_washing_program_display+2
  2600  0B66  0828               	movf	??_washing_program_display+2,w
  2601  0B67  00A2               	movwf	clcd_print@addr
  2602  0B68  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2603                           
  2604                           ;main.c: 144:     clcd_print(washing_prog[1],(0xD0+2));
  2605  0B6D  2BFF               	goto	l127
  2606  0B6E                     l3737:
  2607  0B6E  300A               	movlw	10
  2608  0B6F  067A               	xorwf	_program_no,w
  2609  0B70  1D03               	btfss	3,2
  2610  0B71  2B73               	goto	u3931
  2611  0B72  2B74               	goto	u3930
  2612  0B73                     u3931:
  2613  0B73  2BB8               	goto	l3741
  2614  0B74                     u3930:
  2615  0B74                     l3739:
  2616                           
  2617                           ;main.c: 146: };main.c: 147: void water_level_display(unsigned char key)
  2618  0B74  087A               	movf	_program_no,w
  2619  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0B77  00A6               	movwf	??_washing_program_display
  2622  0B78  0726               	addwf	??_washing_program_display,w
  2623  0B79  3EA0               	addlw	(low (_washing_prog| 0))& (0+255)
  2624  0B7A  0084               	movwf	4
  2625  0B7B  1383               	bcf	3,7	;select IRP bank1
  2626  0B7C  0800               	movf	0,w
  2627  0B7D  00A0               	movwf	clcd_print@str
  2628  0B7E  0A84               	incf	4,f
  2629  0B7F  0800               	movf	0,w
  2630  0B80  0384               	decf	4,f
  2631  0B81  00A1               	movwf	clcd_print@str+1
  2632  0B82  30C2               	movlw	194
  2633  0B83  00A8               	movwf	??_washing_program_display+2
  2634  0B84  0828               	movf	??_washing_program_display+2,w
  2635  0B85  00A2               	movwf	clcd_print@addr
  2636  0B86  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2637                           
  2638                           ;main.c: 148: {
  2639  0B8B  087A               	movf	_program_no,w
  2640  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0B8E  00A6               	movwf	??_washing_program_display
  2643  0B8F  0726               	addwf	??_washing_program_display,w
  2644  0B90  3EA2               	addlw	(low ((_washing_prog| 0+2)))& (0+255)
  2645  0B91  0084               	movwf	4
  2646  0B92  1383               	bcf	3,7	;select IRP bank1
  2647  0B93  0800               	movf	0,w
  2648  0B94  00A0               	movwf	clcd_print@str
  2649  0B95  0A84               	incf	4,f
  2650  0B96  0800               	movf	0,w
  2651  0B97  0384               	decf	4,f
  2652  0B98  00A1               	movwf	clcd_print@str+1
  2653  0B99  3092               	movlw	146
  2654  0B9A  00A8               	movwf	??_washing_program_display+2
  2655  0B9B  0828               	movf	??_washing_program_display+2,w
  2656  0B9C  00A2               	movwf	clcd_print@addr
  2657  0B9D  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2658                           
  2659                           ;main.c: 149:     if(reset_mode==0x11)
  2660  0BA2  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0BA3  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0BA4  0820               	movf	_washing_prog^(0+128),w
  2663  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0BA7  00A0               	movwf	clcd_print@str
  2666  0BA8  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0BA9  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0BAA  0821               	movf	(_washing_prog+1)^(0+128),w
  2669  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0BAD  00A1               	movwf	clcd_print@str+1
  2672  0BAE  30D2               	movlw	210
  2673  0BAF  00A6               	movwf	??_washing_program_display
  2674  0BB0  0826               	movf	??_washing_program_display,w
  2675  0BB1  00A2               	movwf	clcd_print@addr
  2676  0BB2  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2677                           
  2678                           ;main.c: 150:     {
  2679  0BB7  2BFF               	goto	l127
  2680  0BB8                     l3741:
  2681  0BB8  300B               	movlw	11
  2682  0BB9  067A               	xorwf	_program_no,w
  2683  0BBA  1D03               	btfss	3,2
  2684  0BBB  2BBD               	goto	u3941
  2685  0BBC  2BBE               	goto	u3940
  2686  0BBD                     u3941:
  2687  0BBD  2BFF               	goto	l127
  2688  0BBE                     u3940:
  2689  0BBE                     l3743:
  2690                           
  2691                           ;main.c: 152:         clear_screen();;main.c: 153:     }
  2692  0BBE  087A               	movf	_program_no,w
  2693  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0BC1  00A6               	movwf	??_washing_program_display
  2696  0BC2  0726               	addwf	??_washing_program_display,w
  2697  0BC3  3EA0               	addlw	(low (_washing_prog| 0))& (0+255)
  2698  0BC4  0084               	movwf	4
  2699  0BC5  1383               	bcf	3,7	;select IRP bank1
  2700  0BC6  0800               	movf	0,w
  2701  0BC7  00A0               	movwf	clcd_print@str
  2702  0BC8  0A84               	incf	4,f
  2703  0BC9  0800               	movf	0,w
  2704  0BCA  0384               	decf	4,f
  2705  0BCB  00A1               	movwf	clcd_print@str+1
  2706  0BCC  30C2               	movlw	194
  2707  0BCD  00A8               	movwf	??_washing_program_display+2
  2708  0BCE  0828               	movf	??_washing_program_display+2,w
  2709  0BCF  00A2               	movwf	clcd_print@addr
  2710  0BD0  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2711                           
  2712                           ;main.c: 154:     if(key == 0x37)
  2713  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0BD6  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0BD7  0820               	movf	_washing_prog^(0+128),w
  2716  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0BDA  00A0               	movwf	clcd_print@str
  2719  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0BDD  0821               	movf	(_washing_prog+1)^(0+128),w
  2722  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0BE0  00A1               	movwf	clcd_print@str+1
  2725  0BE1  3092               	movlw	146
  2726  0BE2  00A6               	movwf	??_washing_program_display
  2727  0BE3  0826               	movf	??_washing_program_display,w
  2728  0BE4  00A2               	movwf	clcd_print@addr
  2729  0BE5  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2730                           
  2731                           ;main.c: 155:     {
  2732  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0BEC  0822               	movf	(low ((_washing_prog| 0+2)))^(0+128),w
  2735  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0BEF  00A0               	movwf	clcd_print@str
  2738  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0BF2  0823               	movf	((low ((_washing_prog| 0+2))+1))^(0+128),w
  2741  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0BF5  00A1               	movwf	clcd_print@str+1
  2744  0BF6  30D2               	movlw	210
  2745  0BF7  00A6               	movwf	??_washing_program_display
  2746  0BF8  0826               	movf	??_washing_program_display,w
  2747  0BF9  00A2               	movwf	clcd_print@addr
  2748  0BFA  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  2749  0BFF                     l127:
  2750  0BFF  0008               	return
  2751  0C00                     __end_of_washing_program_display:
  2752                           
  2753                           	psect	text3
  2754  0D20                     __ptext3:	
  2755 ;; *************** function _set_time_for_program *****************
  2756 ;; Defined at:
  2757 ;;		line 195 in file "main.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0
  2773 ;;      Temps:          2       0       0       0       0
  2774 ;;      Totals:         2       0       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785  0D20                     _set_time_for_program:	
  2786                           ;psect for function _set_time_for_program
  2787                           
  2788  0D20                     l3599:	
  2789                           ;incstack = 0
  2790                           ; Regs used in _set_time_for_program: [wreg-fsr0h+status,2+status,0]
  2791                           
  2792                           
  2793                           ;main.c: 197:                     sec=41;
  2794  0D20  2E3A               	goto	l3685
  2795  0D21                     l3601:
  2796                           
  2797                           ;main.c: 203:                     min=0;
  2798  0D21  3021               	movlw	33
  2799  0D22  00F3               	movwf	??_set_time_for_program
  2800  0D23  0873               	movf	??_set_time_for_program,w
  2801  0D24  00F8               	movwf	_sec
  2802  0D25                     l3603:
  2803                           
  2804                           ;main.c: 204:             }
  2805  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0D27  01E8               	clrf	_min
  2808                           
  2809                           ;main.c: 205:             break;
  2810  0D28  2E68               	goto	l197
  2811  0D29                     l3605:
  2812                           
  2813                           ;main.c: 208:             {
  2814  0D29  3029               	movlw	41
  2815  0D2A  00F3               	movwf	??_set_time_for_program
  2816  0D2B  0873               	movf	??_set_time_for_program,w
  2817  0D2C  00F8               	movwf	_sec
  2818  0D2D  2D25               	goto	l3603
  2819  0D2E                     l3609:
  2820                           
  2821                           ;main.c: 213:                 case 2:
  2822  0D2E  302D               	movlw	45
  2823  0D2F  00F3               	movwf	??_set_time_for_program
  2824  0D30  0873               	movf	??_set_time_for_program,w
  2825  0D31  00F8               	movwf	_sec
  2826  0D32  2D25               	goto	l3603
  2827  0D33                     l3613:
  2828  0D33  0879               	movf	_water_level_index,w
  2829  0D34  00F3               	movwf	??_set_time_for_program
  2830  0D35  01F4               	clrf	??_set_time_for_program+1
  2831                           
  2832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2833                           ; Switch size 1, requested type "simple"
  2834                           ; Number of cases is 1, Range of values is 0 to 0
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte            4     3 (average)
  2838                           ; direct_byte           11     8 (fixed)
  2839                           ; jumptable            260     6 (fixed)
  2840                           ;	Chosen strategy is simple_byte
  2841  0D36  0874               	movf	??_set_time_for_program+1,w
  2842  0D37  3A00               	xorlw	0	; case 0
  2843  0D38  1903               	skipnz
  2844  0D39  2D3B               	goto	l4167
  2845  0D3A  2E68               	goto	l197
  2846  0D3B                     l4167:
  2847                           
  2848                           ; Switch size 1, requested type "simple"
  2849                           ; Number of cases is 5, Range of values is 0 to 4
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte           16     9 (average)
  2853                           ; direct_byte           23     8 (fixed)
  2854                           ; jumptable            260     6 (fixed)
  2855                           ;	Chosen strategy is simple_byte
  2856  0D3B  0873               	movf	??_set_time_for_program,w
  2857  0D3C  3A00               	xorlw	0	; case 0
  2858  0D3D  1903               	skipnz
  2859  0D3E  2D29               	goto	l3605
  2860  0D3F  3A01               	xorlw	1	; case 1
  2861  0D40  1903               	skipnz
  2862  0D41  2D21               	goto	l3601
  2863  0D42  3A03               	xorlw	3	; case 2
  2864  0D43  1903               	skipnz
  2865  0D44  2D29               	goto	l3605
  2866  0D45  3A01               	xorlw	1	; case 3
  2867  0D46  1903               	skipnz
  2868  0D47  2D2E               	goto	l3609
  2869  0D48  3A07               	xorlw	7	; case 4
  2870  0D49  1903               	skipnz
  2871  0D4A  2D2E               	goto	l3609
  2872  0D4B  2E68               	goto	l197
  2873  0D4C                     l3615:
  2874                           
  2875                           ;main.c: 221:             }
  2876  0D4C  302B               	movlw	43
  2877  0D4D  00F3               	movwf	??_set_time_for_program
  2878  0D4E  0873               	movf	??_set_time_for_program,w
  2879  0D4F  00F8               	movwf	_sec
  2880  0D50                     l3617:
  2881                           
  2882                           ;main.c: 222:             break;
  2883  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0D52  01E8               	clrf	_min
  2886  0D53                     l3619:
  2887                           
  2888                           ;main.c: 225:             {
  2889  0D53  3032               	movlw	50
  2890  0D54  00F3               	movwf	??_set_time_for_program
  2891  0D55  0873               	movf	??_set_time_for_program,w
  2892  0D56  00F8               	movwf	_sec
  2893                           
  2894                           ;main.c: 226:                 case 1:
  2895  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0D59  01E8               	clrf	_min
  2898                           
  2899                           ;main.c: 227:                 case 0:
  2900  0D5A  2E68               	goto	l197
  2901  0D5B                     l3621:
  2902                           
  2903                           ;main.c: 230:                     min=0;
  2904  0D5B  3039               	movlw	57
  2905  0D5C  00F3               	movwf	??_set_time_for_program
  2906  0D5D  0873               	movf	??_set_time_for_program,w
  2907  0D5E  00F8               	movwf	_sec
  2908  0D5F  2D25               	goto	l3603
  2909  0D60                     l3625:
  2910  0D60  0879               	movf	_water_level_index,w
  2911  0D61  00F3               	movwf	??_set_time_for_program
  2912  0D62  01F4               	clrf	??_set_time_for_program+1
  2913                           
  2914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2915                           ; Switch size 1, requested type "simple"
  2916                           ; Number of cases is 1, Range of values is 0 to 0
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte            4     3 (average)
  2920                           ; direct_byte           11     8 (fixed)
  2921                           ; jumptable            260     6 (fixed)
  2922                           ;	Chosen strategy is simple_byte
  2923  0D63  0874               	movf	??_set_time_for_program+1,w
  2924  0D64  3A00               	xorlw	0	; case 0
  2925  0D65  1903               	skipnz
  2926  0D66  2D68               	goto	l4169
  2927  0D67  2E68               	goto	l197
  2928  0D68                     l4169:
  2929                           
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 5, Range of values is 0 to 4
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte           16     9 (average)
  2935                           ; direct_byte           23     8 (fixed)
  2936                           ; jumptable            260     6 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938  0D68  0873               	movf	??_set_time_for_program,w
  2939  0D69  3A00               	xorlw	0	; case 0
  2940  0D6A  1903               	skipnz
  2941  0D6B  2D53               	goto	l3619
  2942  0D6C  3A01               	xorlw	1	; case 1
  2943  0D6D  1903               	skipnz
  2944  0D6E  2D4C               	goto	l3615
  2945  0D6F  3A03               	xorlw	3	; case 2
  2946  0D70  1903               	skipnz
  2947  0D71  2D53               	goto	l3619
  2948  0D72  3A01               	xorlw	1	; case 3
  2949  0D73  1903               	skipnz
  2950  0D74  2D5B               	goto	l3621
  2951  0D75  3A07               	xorlw	7	; case 4
  2952  0D76  1903               	skipnz
  2953  0D77  2D5B               	goto	l3621
  2954  0D78  2E68               	goto	l197
  2955  0D79                     l3627:
  2956                           
  2957                           ;main.c: 240:             min=1;
  2958  0D79  301A               	movlw	26
  2959  0D7A  00F3               	movwf	??_set_time_for_program
  2960  0D7B  0873               	movf	??_set_time_for_program,w
  2961  0D7C  00F8               	movwf	_sec
  2962  0D7D  2D25               	goto	l3603
  2963  0D7E                     l3631:
  2964                           
  2965                           ;main.c: 245:         case 5:
  2966  0D7E  301F               	movlw	31
  2967  0D7F  00F3               	movwf	??_set_time_for_program
  2968  0D80  0873               	movf	??_set_time_for_program,w
  2969  0D81  00F8               	movwf	_sec
  2970  0D82  2D25               	goto	l3603
  2971  0D83                     l3635:
  2972  0D83  0879               	movf	_water_level_index,w
  2973  0D84  00F3               	movwf	??_set_time_for_program
  2974  0D85  01F4               	clrf	??_set_time_for_program+1
  2975                           
  2976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2977                           ; Switch size 1, requested type "simple"
  2978                           ; Number of cases is 1, Range of values is 0 to 0
  2979                           ; switch strategies available:
  2980                           ; Name         Instructions Cycles
  2981                           ; simple_byte            4     3 (average)
  2982                           ; direct_byte           11     8 (fixed)
  2983                           ; jumptable            260     6 (fixed)
  2984                           ;	Chosen strategy is simple_byte
  2985  0D86  0874               	movf	??_set_time_for_program+1,w
  2986  0D87  3A00               	xorlw	0	; case 0
  2987  0D88  1903               	skipnz
  2988  0D89  2D8B               	goto	l4171
  2989  0D8A  2E68               	goto	l197
  2990  0D8B                     l4171:
  2991                           
  2992                           ; Switch size 1, requested type "simple"
  2993                           ; Number of cases is 5, Range of values is 0 to 4
  2994                           ; switch strategies available:
  2995                           ; Name         Instructions Cycles
  2996                           ; simple_byte           16     9 (average)
  2997                           ; direct_byte           23     8 (fixed)
  2998                           ; jumptable            260     6 (fixed)
  2999                           ;	Chosen strategy is simple_byte
  3000  0D8B  0873               	movf	??_set_time_for_program,w
  3001  0D8C  3A00               	xorlw	0	; case 0
  3002  0D8D  1903               	skipnz
  3003  0D8E  2D79               	goto	l3627
  3004  0D8F  3A01               	xorlw	1	; case 1
  3005  0D90  1903               	skipnz
  3006  0D91  2D79               	goto	l3627
  3007  0D92  3A03               	xorlw	3	; case 2
  3008  0D93  1903               	skipnz
  3009  0D94  2D79               	goto	l3627
  3010  0D95  3A01               	xorlw	1	; case 3
  3011  0D96  1903               	skipnz
  3012  0D97  2D7E               	goto	l3631
  3013  0D98  3A07               	xorlw	7	; case 4
  3014  0D99  1903               	skipnz
  3015  0D9A  2D7E               	goto	l3631
  3016  0D9B  2E68               	goto	l197
  3017  0D9C                     l3637:
  3018                           
  3019                           ;main.c: 250:             sec=29;
  3020  0D9C  3010               	movlw	16
  3021  0D9D  00F3               	movwf	??_set_time_for_program
  3022  0D9E  0873               	movf	??_set_time_for_program,w
  3023  0D9F  00F8               	movwf	_sec
  3024  0DA0                     l3639:
  3025                           
  3026                           ;main.c: 251:             break;
  3027  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0DA2  01E8               	clrf	_min
  3030  0DA3  0AE8               	incf	_min,f
  3031                           
  3032                           ;main.c: 252:         case 7:
  3033  0DA4  2E68               	goto	l197
  3034  0DA5                     l3641:
  3035                           
  3036                           ;main.c: 254:             {
  3037  0DA5  3024               	movlw	36
  3038  0DA6  00F3               	movwf	??_set_time_for_program
  3039  0DA7  0873               	movf	??_set_time_for_program,w
  3040  0DA8  00F8               	movwf	_sec
  3041  0DA9                     l3643:
  3042                           
  3043                           ;main.c: 255:                 case 1:
  3044  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0DAB  01E8               	clrf	_min
  3047  0DAC  0AE8               	incf	_min,f
  3048  0DAD                     l169:	
  3049                           ;main.c: 256:                     sec=46;
  3050                           
  3051                           
  3052                           ;main.c: 257:                     min=0;
  3053  0DAD  301C               	movlw	28
  3054  0DAE  00F3               	movwf	??_set_time_for_program
  3055  0DAF  0873               	movf	??_set_time_for_program,w
  3056  0DB0  00F8               	movwf	_sec
  3057  0DB1  2D25               	goto	l3603
  3058  0DB2                     l3647:
  3059                           
  3060                           ;main.c: 261:                     min=0;
  3061  0DB2  301D               	movlw	29
  3062  0DB3  00F3               	movwf	??_set_time_for_program
  3063  0DB4  0873               	movf	??_set_time_for_program,w
  3064  0DB5  00F8               	movwf	_sec
  3065                           
  3066                           ;main.c: 262:                     break;
  3067  0DB6  2E68               	goto	l197
  3068  0DB7                     l3649:
  3069                           
  3070                           ;main.c: 267:             }
  3071  0DB7  302E               	movlw	46
  3072  0DB8  00F3               	movwf	??_set_time_for_program
  3073  0DB9  0873               	movf	??_set_time_for_program,w
  3074  0DBA  00F8               	movwf	_sec
  3075  0DBB                     l3651:
  3076                           
  3077                           ;main.c: 268:             break;
  3078  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0DBD  01E8               	clrf	_min
  3081  0DBE                     l3653:
  3082                           
  3083                           ;main.c: 271:             {
  3084  0DBE  3035               	movlw	53
  3085  0DBF  00F3               	movwf	??_set_time_for_program
  3086  0DC0  0873               	movf	??_set_time_for_program,w
  3087  0DC1  00F8               	movwf	_sec
  3088                           
  3089                           ;main.c: 272:                 case 1:
  3090  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0DC4  01E8               	clrf	_min
  3093                           
  3094                           ;main.c: 273:                     sec=18;
  3095  0DC5  2E68               	goto	l197
  3096  0DC6                     l3655:
  3097                           
  3098                           ;main.c: 276:                 case 2:
  3099  0DC6  303C               	movlw	60
  3100  0DC7  00F3               	movwf	??_set_time_for_program
  3101  0DC8  0873               	movf	??_set_time_for_program,w
  3102  0DC9  00F8               	movwf	_sec
  3103  0DCA  2D25               	goto	l3603
  3104  0DCB                     l3659:
  3105  0DCB  0879               	movf	_water_level_index,w
  3106  0DCC  00F3               	movwf	??_set_time_for_program
  3107  0DCD  01F4               	clrf	??_set_time_for_program+1
  3108                           
  3109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3110                           ; Switch size 1, requested type "simple"
  3111                           ; Number of cases is 1, Range of values is 0 to 0
  3112                           ; switch strategies available:
  3113                           ; Name         Instructions Cycles
  3114                           ; simple_byte            4     3 (average)
  3115                           ; direct_byte           11     8 (fixed)
  3116                           ; jumptable            260     6 (fixed)
  3117                           ;	Chosen strategy is simple_byte
  3118  0DCE  0874               	movf	??_set_time_for_program+1,w
  3119  0DCF  3A00               	xorlw	0	; case 0
  3120  0DD0  1903               	skipnz
  3121  0DD1  2DD3               	goto	l4173
  3122  0DD2  2E68               	goto	l197
  3123  0DD3                     l4173:
  3124                           
  3125                           ; Switch size 1, requested type "simple"
  3126                           ; Number of cases is 5, Range of values is 0 to 4
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte           16     9 (average)
  3130                           ; direct_byte           23     8 (fixed)
  3131                           ; jumptable            260     6 (fixed)
  3132                           ;	Chosen strategy is simple_byte
  3133  0DD3  0873               	movf	??_set_time_for_program,w
  3134  0DD4  3A00               	xorlw	0	; case 0
  3135  0DD5  1903               	skipnz
  3136  0DD6  2DBE               	goto	l3653
  3137  0DD7  3A01               	xorlw	1	; case 1
  3138  0DD8  1903               	skipnz
  3139  0DD9  2DB7               	goto	l3649
  3140  0DDA  3A03               	xorlw	3	; case 2
  3141  0DDB  1903               	skipnz
  3142  0DDC  2DBE               	goto	l3653
  3143  0DDD  3A01               	xorlw	1	; case 3
  3144  0DDE  1903               	skipnz
  3145  0DDF  2DC6               	goto	l3655
  3146  0DE0  3A07               	xorlw	7	; case 4
  3147  0DE1  1903               	skipnz
  3148  0DE2  2DC6               	goto	l3655
  3149  0DE3  2E68               	goto	l197
  3150  0DE4                     l3661:
  3151                           
  3152                           ;main.c: 284:             sec=6;
  3153  0DE4  3012               	movlw	18
  3154  0DE5  00F3               	movwf	??_set_time_for_program
  3155  0DE6  0873               	movf	??_set_time_for_program,w
  3156  0DE7  00F8               	movwf	_sec
  3157  0DE8                     l3663:
  3158                           
  3159                           ;main.c: 285:             break;
  3160  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0DEA  01E8               	clrf	_min
  3163  0DEB  2DEC               	goto	l3665
  3164  0DEC                     l184:	
  3165                           ;main.c: 288:             switch(water_level_index)
  3166                           
  3167  0DEC                     l3665:
  3168                           
  3169                           ;main.c: 290:                 case 1:
  3170  0DEC  3014               	movlw	20
  3171  0DED  00F3               	movwf	??_set_time_for_program
  3172  0DEE  0873               	movf	??_set_time_for_program,w
  3173  0DEF  00F8               	movwf	_sec
  3174                           
  3175                           ;main.c: 291:                     sec=16;
  3176  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0DF2  01E8               	clrf	_min
  3179                           
  3180                           ;main.c: 292:                     min=0;
  3181  0DF3  2E68               	goto	l197
  3182  0DF4                     l3667:
  3183  0DF4  0879               	movf	_water_level_index,w
  3184  0DF5  00F3               	movwf	??_set_time_for_program
  3185  0DF6  01F4               	clrf	??_set_time_for_program+1
  3186                           
  3187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 1, Range of values is 0 to 0
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte            4     3 (average)
  3193                           ; direct_byte           11     8 (fixed)
  3194                           ; jumptable            260     6 (fixed)
  3195                           ;	Chosen strategy is simple_byte
  3196  0DF7  0874               	movf	??_set_time_for_program+1,w
  3197  0DF8  3A00               	xorlw	0	; case 0
  3198  0DF9  1903               	skipnz
  3199  0DFA  2DFC               	goto	l4175
  3200  0DFB  2E68               	goto	l197
  3201  0DFC                     l4175:
  3202                           
  3203                           ; Switch size 1, requested type "simple"
  3204                           ; Number of cases is 5, Range of values is 0 to 4
  3205                           ; switch strategies available:
  3206                           ; Name         Instructions Cycles
  3207                           ; simple_byte           16     9 (average)
  3208                           ; direct_byte           23     8 (fixed)
  3209                           ; jumptable            260     6 (fixed)
  3210                           ;	Chosen strategy is simple_byte
  3211  0DFC  0873               	movf	??_set_time_for_program,w
  3212  0DFD  3A00               	xorlw	0	; case 0
  3213  0DFE  1903               	skipnz
  3214  0DFF  2DEC               	goto	l184
  3215  0E00  3A01               	xorlw	1	; case 1
  3216  0E01  1903               	skipnz
  3217  0E02  2DE4               	goto	l3661
  3218  0E03  3A03               	xorlw	3	; case 2
  3219  0E04  1903               	skipnz
  3220  0E05  2DEC               	goto	l3665
  3221  0E06  3A01               	xorlw	1	; case 3
  3222  0E07  1903               	skipnz
  3223  0E08  2DEC               	goto	l3665
  3224  0E09  3A07               	xorlw	7	; case 4
  3225  0E0A  1903               	skipnz
  3226  0E0B  2DEC               	goto	l3665
  3227  0E0C  2E68               	goto	l197
  3228  0E0D                     l3669:
  3229                           
  3230                           ;main.c: 295:                     sec=21;
  3231  0E0D  3006               	movlw	6
  3232  0E0E  00F3               	movwf	??_set_time_for_program
  3233  0E0F  0873               	movf	??_set_time_for_program,w
  3234  0E10  00F8               	movwf	_sec
  3235                           
  3236                           ;main.c: 296:                     min=0;
  3237  0E11  2E68               	goto	l197
  3238  0E12                     l3671:
  3239                           
  3240                           ;main.c: 302:             }
  3241  0E12  3010               	movlw	16
  3242  0E13  00F3               	movwf	??_set_time_for_program
  3243  0E14  0873               	movf	??_set_time_for_program,w
  3244  0E15  00F8               	movwf	_sec
  3245  0E16                     l3673:
  3246                           
  3247                           ;main.c: 303:             break;
  3248  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0E18  01E8               	clrf	_min
  3251  0E19                     l3675:
  3252                           
  3253                           ;main.c: 306: void door_status_check(void)
  3254  0E19  3015               	movlw	21
  3255  0E1A  00F3               	movwf	??_set_time_for_program
  3256  0E1B  0873               	movf	??_set_time_for_program,w
  3257  0E1C  00F8               	movwf	_sec
  3258                           
  3259                           ;main.c: 307: {
  3260  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0E1F  01E8               	clrf	_min
  3263                           
  3264                           ;main.c: 308:    if(RB0 == 0)
  3265  0E20  2E68               	goto	l197
  3266  0E21                     l3681:
  3267  0E21  0879               	movf	_water_level_index,w
  3268  0E22  00F3               	movwf	??_set_time_for_program
  3269  0E23  01F4               	clrf	??_set_time_for_program+1
  3270                           
  3271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3272                           ; Switch size 1, requested type "simple"
  3273                           ; Number of cases is 1, Range of values is 0 to 0
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            4     3 (average)
  3277                           ; direct_byte           11     8 (fixed)
  3278                           ; jumptable            260     6 (fixed)
  3279                           ;	Chosen strategy is simple_byte
  3280  0E24  0874               	movf	??_set_time_for_program+1,w
  3281  0E25  3A00               	xorlw	0	; case 0
  3282  0E26  1903               	skipnz
  3283  0E27  2E29               	goto	l4177
  3284  0E28  2E68               	goto	l197
  3285  0E29                     l4177:
  3286                           
  3287                           ; Switch size 1, requested type "simple"
  3288                           ; Number of cases is 5, Range of values is 0 to 4
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte           16     9 (average)
  3292                           ; direct_byte           23     8 (fixed)
  3293                           ; jumptable            260     6 (fixed)
  3294                           ;	Chosen strategy is simple_byte
  3295  0E29  0873               	movf	??_set_time_for_program,w
  3296  0E2A  3A00               	xorlw	0	; case 0
  3297  0E2B  1903               	skipnz
  3298  0E2C  2E19               	goto	l3675
  3299  0E2D  3A01               	xorlw	1	; case 1
  3300  0E2E  1903               	skipnz
  3301  0E2F  2E12               	goto	l3671
  3302  0E30  3A03               	xorlw	3	; case 2
  3303  0E31  1903               	skipnz
  3304  0E32  2E19               	goto	l3675
  3305  0E33  3A01               	xorlw	1	; case 3
  3306  0E34  1903               	skipnz
  3307  0E35  2D79               	goto	l3627
  3308  0E36  3A07               	xorlw	7	; case 4
  3309  0E37  1903               	skipnz
  3310  0E38  2D79               	goto	l3627
  3311  0E39  2E68               	goto	l197
  3312  0E3A                     l3685:
  3313  0E3A  087A               	movf	_program_no,w
  3314  0E3B  00F3               	movwf	??_set_time_for_program
  3315  0E3C  01F4               	clrf	??_set_time_for_program+1
  3316                           
  3317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3318                           ; Switch size 1, requested type "simple"
  3319                           ; Number of cases is 1, Range of values is 0 to 0
  3320                           ; switch strategies available:
  3321                           ; Name         Instructions Cycles
  3322                           ; simple_byte            4     3 (average)
  3323                           ; direct_byte           11     8 (fixed)
  3324                           ; jumptable            260     6 (fixed)
  3325                           ;	Chosen strategy is simple_byte
  3326  0E3D  0874               	movf	??_set_time_for_program+1,w
  3327  0E3E  3A00               	xorlw	0	; case 0
  3328  0E3F  1903               	skipnz
  3329  0E40  2E42               	goto	l4179
  3330  0E41  2E68               	goto	l197
  3331  0E42                     l4179:
  3332                           
  3333                           ; Switch size 1, requested type "simple"
  3334                           ; Number of cases is 12, Range of values is 0 to 11
  3335                           ; switch strategies available:
  3336                           ; Name         Instructions Cycles
  3337                           ; simple_byte           37    19 (average)
  3338                           ; direct_byte           44     8 (fixed)
  3339                           ; jumptable            260     6 (fixed)
  3340                           ;	Chosen strategy is simple_byte
  3341  0E42  0873               	movf	??_set_time_for_program,w
  3342  0E43  3A00               	xorlw	0	; case 0
  3343  0E44  1903               	skipnz
  3344  0E45  2D33               	goto	l3613
  3345  0E46  3A01               	xorlw	1	; case 1
  3346  0E47  1903               	skipnz
  3347  0E48  2D60               	goto	l3625
  3348  0E49  3A03               	xorlw	3	; case 2
  3349  0E4A  1903               	skipnz
  3350  0E4B  2D83               	goto	l3635
  3351  0E4C  3A01               	xorlw	1	; case 3
  3352  0E4D  1903               	skipnz
  3353  0E4E  2D9C               	goto	l3637
  3354  0E4F  3A07               	xorlw	7	; case 4
  3355  0E50  1903               	skipnz
  3356  0E51  2DA5               	goto	l3641
  3357  0E52  3A01               	xorlw	1	; case 5
  3358  0E53  1903               	skipnz
  3359  0E54  2DAD               	goto	l169
  3360  0E55  3A03               	xorlw	3	; case 6
  3361  0E56  1903               	skipnz
  3362  0E57  2DB2               	goto	l3647
  3363  0E58  3A01               	xorlw	1	; case 7
  3364  0E59  1903               	skipnz
  3365  0E5A  2DCB               	goto	l3659
  3366  0E5B  3A0F               	xorlw	15	; case 8
  3367  0E5C  1903               	skipnz
  3368  0E5D  2DF4               	goto	l3667
  3369  0E5E  3A01               	xorlw	1	; case 9
  3370  0E5F  1903               	skipnz
  3371  0E60  2E0D               	goto	l3669
  3372  0E61  3A03               	xorlw	3	; case 10
  3373  0E62  1903               	skipnz
  3374  0E63  2E21               	goto	l3681
  3375  0E64  3A01               	xorlw	1	; case 11
  3376  0E65  1903               	skipnz
  3377  0E66  2E21               	goto	l3681
  3378  0E67  2E68               	goto	l197
  3379  0E68                     l197:
  3380  0E68  0008               	return
  3381  0E69                     __end_of_set_time_for_program:
  3382                           
  3383                           	psect	text4
  3384  0038                     __ptext4:	
  3385 ;; *************** function _run_program *****************
  3386 ;; Defined at:
  3387 ;;		line 342 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  key             1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  key             1   54[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       1       0       0       0
  3403 ;;      Temps:          0       7       0       0       0
  3404 ;;      Totals:         0       8       0       0       0
  3405 ;;Total ram usage:        8 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 4
  3408 ;; This function calls:
  3409 ;;		___awdiv
  3410 ;;		___awmod
  3411 ;;		___flmul
  3412 ;;		___fltol
  3413 ;;		___wmul
  3414 ;;		___xxtofl
  3415 ;;		_clcd_print
  3416 ;;		_clcd_putch
  3417 ;;		_clear_screen
  3418 ;;		_door_status_check
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424  0038                     _run_program:	
  3425                           ;psect for function _run_program
  3426                           
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _run_program: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3430                           ;run_program@key stored from wreg
  3431  0038  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0039  1303               	bcf	3,6	;RP1=0, select bank0
  3433  003A  00D6               	movwf	run_program@key
  3434  003B                     l3775:
  3435                           
  3436                           ;main.c: 342:         clcd_putch(':',(0xC0+8));;main.c: 343:         clcd_putch((sec/10)
      +                          +'0',(0xC0+9));;main.c: 344:         clcd_putch((sec%10)+'0',(0xC0+10));;main.c: 345:   
      +                                clcd_print("(MM:SS)",(0x90+5));
  3437  003B  3012               	movlw	18
  3438  003C  0669               	xorwf	_reset_mode,w
  3439  003D  1D03               	btfss	3,2
  3440  003E  2840               	goto	u4011
  3441  003F  2841               	goto	u4010
  3442  0040                     u4011:
  3443  0040  29FA               	goto	l3819
  3444  0041                     u4010:
  3445  0041                     l3777:
  3446                           
  3447                           ;main.c: 346:         _delay((unsigned long)((3000)*(20000000/4000.0)));;main.c: 347:   
      +                                clear_screen();
  3448  0041  160A  118A  24F4  120A  118A  	fcall	_clear_screen
  3449  0046                     l3779:
  3450                           
  3451                           ;main.c: 348:         clcd_print("Function -",(0x80+0));
  3452  0046  306A               	movlw	low (STR_35| (0+32768))
  3453  0047  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0048  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0049  00A0               	movwf	clcd_print@str
  3456  004A  3089               	movlw	high (STR_35| (0+32768))
  3457  004B  00A1               	movwf	clcd_print@str+1
  3458  004C  3080               	movlw	128
  3459  004D  00CF               	movwf	??_run_program
  3460  004E  084F               	movf	??_run_program,w
  3461  004F  00A2               	movwf	clcd_print@addr
  3462  0050  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3463  0055                     l3781:
  3464                           
  3465                           ;main.c: 349:         clcd_print("Time = ",(0xC0+0));
  3466  0055  087A               	movf	_program_no,w
  3467  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0058  00CF               	movwf	??_run_program
  3470  0059  074F               	addwf	??_run_program,w
  3471  005A  3EA0               	addlw	(low (_washing_prog| 0))& (0+255)
  3472  005B  0084               	movwf	4
  3473  005C  1383               	bcf	3,7	;select IRP bank1
  3474  005D  0800               	movf	0,w
  3475  005E  00A0               	movwf	clcd_print@str
  3476  005F  0A84               	incf	4,f
  3477  0060  0800               	movf	0,w
  3478  0061  0384               	decf	4,f
  3479  0062  00A1               	movwf	clcd_print@str+1
  3480  0063  3085               	movlw	133
  3481  0064  00D1               	movwf	??_run_program+2
  3482  0065  0851               	movf	??_run_program+2,w
  3483  0066  00A2               	movwf	clcd_print@addr
  3484  0067  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3485  006C                     l3783:
  3486                           
  3487                           ;main.c: 350:         clcd_print("5-START  6-PAUSE",(0xD0+0));
  3488  006C  3063               	movlw	low (STR_36| (0+32768))
  3489  006D  1283               	bcf	3,5	;RP0=0, select bank0
  3490  006E  1303               	bcf	3,6	;RP1=0, select bank0
  3491  006F  00A0               	movwf	clcd_print@str
  3492  0070  3089               	movlw	high (STR_36| (0+32768))
  3493  0071  00A1               	movwf	clcd_print@str+1
  3494  0072  30C0               	movlw	192
  3495  0073  00CF               	movwf	??_run_program
  3496  0074  084F               	movf	??_run_program,w
  3497  0075  00A2               	movwf	clcd_print@addr
  3498  0076  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3499  007B                     l3785:
  3500                           
  3501                           ;main.c: 351:         time=total_time=(min*60+sec);
  3502  007B  30C6               	movlw	198
  3503  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3504  007D  1303               	bcf	3,6	;RP1=0, select bank0
  3505  007E  00CF               	movwf	??_run_program
  3506  007F  084F               	movf	??_run_program,w
  3507  0080  00A4               	movwf	clcd_putch@addr
  3508  0081  300A               	movlw	10
  3509  0082  00F3               	movwf	___awdiv@divisor
  3510  0083  3000               	movlw	0
  3511  0084  00F4               	movwf	___awdiv@divisor+1
  3512  0085  0868               	movf	_min,w
  3513  0086  00D0               	movwf	??_run_program+1
  3514  0087  01D1               	clrf	??_run_program+2
  3515  0088  0850               	movf	??_run_program+1,w
  3516  0089  00F5               	movwf	___awdiv@dividend
  3517  008A  0851               	movf	??_run_program+2,w
  3518  008B  00F6               	movwf	___awdiv@dividend+1
  3519  008C  160A  118A  2797  120A  118A  	fcall	___awdiv
  3520  0091  0873               	movf	?___awdiv,w
  3521  0092  3E30               	addlw	48
  3522  0093  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  3523  0098                     l3787:
  3524                           
  3525                           ;main.c: 352:         wash_time= (int)(total_time * 0.46);
  3526  0098  30C7               	movlw	199
  3527  0099  1283               	bcf	3,5	;RP0=0, select bank0
  3528  009A  1303               	bcf	3,6	;RP1=0, select bank0
  3529  009B  00CF               	movwf	??_run_program
  3530  009C  084F               	movf	??_run_program,w
  3531  009D  00A4               	movwf	clcd_putch@addr
  3532  009E  300A               	movlw	10
  3533  009F  00F3               	movwf	___awmod@divisor
  3534  00A0  3000               	movlw	0
  3535  00A1  00F4               	movwf	___awmod@divisor+1
  3536  00A2  0868               	movf	_min,w
  3537  00A3  00D0               	movwf	??_run_program+1
  3538  00A4  01D1               	clrf	??_run_program+2
  3539  00A5  0850               	movf	??_run_program+1,w
  3540  00A6  00F5               	movwf	___awmod@dividend
  3541  00A7  0851               	movf	??_run_program+2,w
  3542  00A8  00F6               	movwf	___awmod@dividend+1
  3543  00A9  160A  118A  2675  120A  118A  	fcall	___awmod
  3544  00AE  0873               	movf	?___awmod,w
  3545  00AF  3E30               	addlw	48
  3546  00B0  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  3547  00B5                     l3789:
  3548                           
  3549                           ;main.c: 353:         rinse_time=(int)(total_time * 0.12);
  3550  00B5  30C8               	movlw	200
  3551  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3552  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3553  00B8  00CF               	movwf	??_run_program
  3554  00B9  084F               	movf	??_run_program,w
  3555  00BA  00A4               	movwf	clcd_putch@addr
  3556  00BB  303A               	movlw	58
  3557  00BC  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  3558  00C1                     l3791:
  3559                           
  3560                           ;main.c: 354:         spin_time=(total_time - wash_time - rinse_time);
  3561  00C1  30C9               	movlw	201
  3562  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  3563  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  3564  00C4  00CF               	movwf	??_run_program
  3565  00C5  084F               	movf	??_run_program,w
  3566  00C6  00A4               	movwf	clcd_putch@addr
  3567  00C7  300A               	movlw	10
  3568  00C8  00F3               	movwf	___awdiv@divisor
  3569  00C9  3000               	movlw	0
  3570  00CA  00F4               	movwf	___awdiv@divisor+1
  3571  00CB  0878               	movf	_sec,w
  3572  00CC  00D0               	movwf	??_run_program+1
  3573  00CD  01D1               	clrf	??_run_program+2
  3574  00CE  0850               	movf	??_run_program+1,w
  3575  00CF  00F5               	movwf	___awdiv@dividend
  3576  00D0  0851               	movf	??_run_program+2,w
  3577  00D1  00F6               	movwf	___awdiv@dividend+1
  3578  00D2  160A  118A  2797  120A  118A  	fcall	___awdiv
  3579  00D7  0873               	movf	?___awdiv,w
  3580  00D8  3E30               	addlw	48
  3581  00D9  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  3582  00DE                     l3793:
  3583                           
  3584                           ;main.c: 355:         TMR2ON = 1;
  3585  00DE  30CA               	movlw	202
  3586  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  3587  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  3588  00E1  00CF               	movwf	??_run_program
  3589  00E2  084F               	movf	??_run_program,w
  3590  00E3  00A4               	movwf	clcd_putch@addr
  3591  00E4  300A               	movlw	10
  3592  00E5  00F3               	movwf	___awmod@divisor
  3593  00E6  3000               	movlw	0
  3594  00E7  00F4               	movwf	___awmod@divisor+1
  3595  00E8  0878               	movf	_sec,w
  3596  00E9  00D0               	movwf	??_run_program+1
  3597  00EA  01D1               	clrf	??_run_program+2
  3598  00EB  0850               	movf	??_run_program+1,w
  3599  00EC  00F5               	movwf	___awmod@dividend
  3600  00ED  0851               	movf	??_run_program+2,w
  3601  00EE  00F6               	movwf	___awmod@dividend+1
  3602  00EF  160A  118A  2675  120A  118A  	fcall	___awmod
  3603  00F4  0873               	movf	?___awmod,w
  3604  00F5  3E30               	addlw	48
  3605  00F6  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  3606                           
  3607                           ;main.c: 356:         RC2=1;
  3608  00FB  3053               	movlw	low (STR_37| (0+32768))
  3609  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3610  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  3611  00FE  00A0               	movwf	clcd_print@str
  3612  00FF  3089               	movlw	high (STR_37| (0+32768))
  3613  0100  00A1               	movwf	clcd_print@str+1
  3614  0101  3095               	movlw	149
  3615  0102  00CF               	movwf	??_run_program
  3616  0103  084F               	movf	??_run_program,w
  3617  0104  00A2               	movwf	clcd_print@addr
  3618  0105  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3619  010A                     l3795:
  3620                           
  3621                           ;main.c: 357:         RA0=1;
  3622  010A  304D               	movlw	77
  3623  010B  1283               	bcf	3,5	;RP0=0, select bank0
  3624  010C  1303               	bcf	3,6	;RP1=0, select bank0
  3625  010D  00D1               	movwf	??_run_program+2
  3626  010E  3019               	movlw	25
  3627  010F  00D0               	movwf	??_run_program+1
  3628  0110  304F               	movlw	79
  3629  0111  00CF               	movwf	??_run_program
  3630  0112                     u4237:
  3631  0112  0BCF               	decfsz	??_run_program,f
  3632  0113  2912               	goto	u4237
  3633  0114  0BD0               	decfsz	??_run_program+1,f
  3634  0115  2912               	goto	u4237
  3635  0116  0BD1               	decfsz	??_run_program+2,f
  3636  0117  2912               	goto	u4237
  3637  0118                     l3797:
  3638                           
  3639                           ;main.c: 358:     }
  3640  0118  160A  118A  24F4  120A  118A  	fcall	_clear_screen
  3641  011D                     l3799:
  3642                           
  3643                           ;main.c: 359:     door_status_check();
  3644  011D  30EF               	movlw	low (STR_32| (0+32768))
  3645  011E  1283               	bcf	3,5	;RP0=0, select bank0
  3646  011F  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0120  00A0               	movwf	clcd_print@str
  3648  0121  3088               	movlw	high (STR_32| (0+32768))
  3649  0122  00A1               	movwf	clcd_print@str+1
  3650  0123  3080               	movlw	128
  3651  0124  00CF               	movwf	??_run_program
  3652  0125  084F               	movf	??_run_program,w
  3653  0126  00A2               	movwf	clcd_print@addr
  3654  0127  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3655  012C                     l3801:
  3656                           
  3657                           ;main.c: 360:     if(key==0x1F)
  3658  012C  304B               	movlw	low (STR_39| (0+32768))
  3659  012D  1283               	bcf	3,5	;RP0=0, select bank0
  3660  012E  1303               	bcf	3,6	;RP1=0, select bank0
  3661  012F  00A0               	movwf	clcd_print@str
  3662  0130  3089               	movlw	high (STR_39| (0+32768))
  3663  0131  00A1               	movwf	clcd_print@str+1
  3664  0132  30C0               	movlw	192
  3665  0133  00CF               	movwf	??_run_program
  3666  0134  084F               	movf	??_run_program,w
  3667  0135  00A2               	movwf	clcd_print@addr
  3668  0136  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3669  013B                     l3803:
  3670                           
  3671                           ;main.c: 361:     {
  3672  013B  3034               	movlw	low (STR_34| (0+32768))
  3673  013C  1283               	bcf	3,5	;RP0=0, select bank0
  3674  013D  1303               	bcf	3,6	;RP1=0, select bank0
  3675  013E  00A0               	movwf	clcd_print@str
  3676  013F  3088               	movlw	high (STR_34| (0+32768))
  3677  0140  00A1               	movwf	clcd_print@str+1
  3678  0141  30D0               	movlw	208
  3679  0142  00CF               	movwf	??_run_program
  3680  0143  084F               	movf	??_run_program,w
  3681  0144  00A2               	movwf	clcd_print@addr
  3682  0145  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3683  014A                     l3805:
  3684                           
  3685                           ;main.c: 362:         TMR2ON=0;
  3686  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3687  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3688  014C  0868               	movf	_min,w
  3689  014D  00CF               	movwf	??_run_program
  3690  014E  01D0               	clrf	??_run_program+1
  3691  014F  084F               	movf	??_run_program,w
  3692  0150  00F3               	movwf	___wmul@multiplier
  3693  0151  0850               	movf	??_run_program+1,w
  3694  0152  00F4               	movwf	___wmul@multiplier+1
  3695  0153  303C               	movlw	60
  3696  0154  00F5               	movwf	___wmul@multiplicand
  3697  0155  3000               	movlw	0
  3698  0156  00F6               	movwf	___wmul@multiplicand+1
  3699  0157  160A  118A  258E  120A  118A  	fcall	___wmul
  3700  015C  0878               	movf	_sec,w
  3701  015D  0773               	addwf	?___wmul,w
  3702  015E  1283               	bcf	3,5	;RP0=0, select bank0
  3703  015F  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0160  00DE               	movwf	run_program@total_time
  3705  0161  3000               	movlw	0
  3706  0162  1803               	skipnc
  3707  0163  3001               	movlw	1
  3708  0164  0774               	addwf	?___wmul+1,w
  3709  0165  00DF               	movwf	run_program@total_time+1
  3710  0166  085F               	movf	run_program@total_time+1,w
  3711  0167  00DD               	movwf	run_program@time+1
  3712  0168  085E               	movf	run_program@total_time,w
  3713  0169  00DC               	movwf	run_program@time
  3714  016A                     l3807:
  3715                           
  3716                           ;main.c: 363:         RC2=0;
  3717  016A  085E               	movf	run_program@total_time,w
  3718  016B  00F3               	movwf	___xxtofl@val
  3719  016C  085F               	movf	run_program@total_time+1,w
  3720  016D  00F4               	movwf	___xxtofl@val+1
  3721  016E  3000               	movlw	0
  3722  016F  1BF4               	btfsc	___xxtofl@val+1,7
  3723  0170  30FF               	movlw	255
  3724  0171  00F5               	movwf	___xxtofl@val+2
  3725  0172  00F6               	movwf	___xxtofl@val+3
  3726  0173  3001               	movlw	1
  3727  0174  120A  158A  2224  120A  118A  	fcall	___xxtofl
  3728  0179  0876               	movf	?___xxtofl+3,w
  3729  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3730  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3731  017C  00B1               	movwf	___flmul@a+3
  3732  017D  0875               	movf	?___xxtofl+2,w
  3733  017E  00B0               	movwf	___flmul@a+2
  3734  017F  0874               	movf	?___xxtofl+1,w
  3735  0180  00AF               	movwf	___flmul@a+1
  3736  0181  0873               	movf	?___xxtofl,w
  3737  0182  00AE               	movwf	___flmul@a
  3738  0183  303E               	movlw	62
  3739  0184  00AD               	movwf	___flmul@b+3
  3740  0185  30EB               	movlw	235
  3741  0186  00AC               	movwf	___flmul@b+2
  3742  0187  3085               	movlw	133
  3743  0188  00AB               	movwf	___flmul@b+1
  3744  0189  301F               	movlw	31
  3745  018A  00AA               	movwf	___flmul@b
  3746  018B  120A  118A  2400  120A  118A  	fcall	___flmul
  3747  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0192  082D               	movf	?___flmul+3,w
  3750  0193  00C7               	movwf	___fltol@f1+3
  3751  0194  082C               	movf	?___flmul+2,w
  3752  0195  00C6               	movwf	___fltol@f1+2
  3753  0196  082B               	movf	?___flmul+1,w
  3754  0197  00C5               	movwf	___fltol@f1+1
  3755  0198  082A               	movf	?___flmul,w
  3756  0199  00C4               	movwf	___fltol@f1
  3757  019A  120A  118A  2761  120A  118A  	fcall	___fltol
  3758  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3759  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3760  01A1  0845               	movf	?___fltol+1,w
  3761  01A2  00E5               	movwf	_wash_time+1
  3762  01A3  0844               	movf	?___fltol,w
  3763  01A4  00E4               	movwf	_wash_time
  3764  01A5                     l3809:
  3765                           
  3766                           ;main.c: 364:         operation_mode=0x05;
  3767  01A5  085E               	movf	run_program@total_time,w
  3768  01A6  00F3               	movwf	___xxtofl@val
  3769  01A7  085F               	movf	run_program@total_time+1,w
  3770  01A8  00F4               	movwf	___xxtofl@val+1
  3771  01A9  3000               	movlw	0
  3772  01AA  1BF4               	btfsc	___xxtofl@val+1,7
  3773  01AB  30FF               	movlw	255
  3774  01AC  00F5               	movwf	___xxtofl@val+2
  3775  01AD  00F6               	movwf	___xxtofl@val+3
  3776  01AE  3001               	movlw	1
  3777  01AF  120A  158A  2224  120A  118A  	fcall	___xxtofl
  3778  01B4  0876               	movf	?___xxtofl+3,w
  3779  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3780  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3781  01B7  00B1               	movwf	___flmul@a+3
  3782  01B8  0875               	movf	?___xxtofl+2,w
  3783  01B9  00B0               	movwf	___flmul@a+2
  3784  01BA  0874               	movf	?___xxtofl+1,w
  3785  01BB  00AF               	movwf	___flmul@a+1
  3786  01BC  0873               	movf	?___xxtofl,w
  3787  01BD  00AE               	movwf	___flmul@a
  3788  01BE  303D               	movlw	61
  3789  01BF  00AD               	movwf	___flmul@b+3
  3790  01C0  30F5               	movlw	245
  3791  01C1  00AC               	movwf	___flmul@b+2
  3792  01C2  30C2               	movlw	194
  3793  01C3  00AB               	movwf	___flmul@b+1
  3794  01C4  308F               	movlw	143
  3795  01C5  00AA               	movwf	___flmul@b
  3796  01C6  120A  118A  2400  120A  118A  	fcall	___flmul
  3797  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3798  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3799  01CD  082D               	movf	?___flmul+3,w
  3800  01CE  00C7               	movwf	___fltol@f1+3
  3801  01CF  082C               	movf	?___flmul+2,w
  3802  01D0  00C6               	movwf	___fltol@f1+2
  3803  01D1  082B               	movf	?___flmul+1,w
  3804  01D2  00C5               	movwf	___fltol@f1+1
  3805  01D3  082A               	movf	?___flmul,w
  3806  01D4  00C4               	movwf	___fltol@f1
  3807  01D5  120A  118A  2761  120A  118A  	fcall	___fltol
  3808  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3809  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3810  01DC  0845               	movf	?___fltol+1,w
  3811  01DD  00E3               	movwf	_rinse_time+1
  3812  01DE  0844               	movf	?___fltol,w
  3813  01DF  00E2               	movwf	_rinse_time
  3814  01E0                     l3811:
  3815                           
  3816                           ;main.c: 365:         RA0=0;
  3817  01E0  0964               	comf	_wash_time,w
  3818  01E1  00CF               	movwf	??_run_program
  3819  01E2  0965               	comf	_wash_time+1,w
  3820  01E3  00D0               	movwf	??_run_program+1
  3821  01E4  0ACF               	incf	??_run_program,f
  3822  01E5  1903               	skipnz
  3823  01E6  0AD0               	incf	??_run_program+1,f
  3824  01E7  0862               	movf	_rinse_time,w
  3825  01E8  024F               	subwf	??_run_program,w
  3826  01E9  00D1               	movwf	??_run_program+2
  3827  01EA  0863               	movf	_rinse_time+1,w
  3828  01EB  1C03               	skipc
  3829  01EC  0A63               	incf	_rinse_time+1,w
  3830  01ED  0250               	subwf	??_run_program+1,w
  3831  01EE  00D2               	movwf	??_run_program+3
  3832  01EF  085E               	movf	run_program@total_time,w
  3833  01F0  0751               	addwf	??_run_program+2,w
  3834  01F1  00E0               	movwf	_spin_time
  3835  01F2  085F               	movf	run_program@total_time+1,w
  3836  01F3  1803               	skipnc
  3837  01F4  0A5F               	incf	run_program@total_time+1,w
  3838  01F5  0752               	addwf	??_run_program+3,w
  3839  01F6  00E1               	movwf	_spin_time+1
  3840  01F7                     l3813:
  3841                           
  3842                           ;main.c: 366:     }
  3843  01F7  1512               	bsf	18,2	;volatile
  3844  01F8                     l3815:
  3845                           
  3846                           ;main.c: 367:     total_time=(min * 60 + sec);
  3847  01F8  1507               	bsf	7,2	;volatile
  3848  01F9                     l3817:
  3849                           
  3850                           ;main.c: 368:     if(program_no<7)
  3851  01F9  1405               	bsf	5,0	;volatile
  3852  01FA                     l3819:
  3853                           
  3854                           ;main.c: 370:     if(total_time >=( time - wash_time))
  3855  01FA  120A  158A  21B8  120A  118A  	fcall	_door_status_check
  3856  01FF                     l3821:
  3857                           
  3858                           ;main.c: 371:     {
  3859  01FF  301F               	movlw	31
  3860  0200  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0201  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0202  0656               	xorwf	run_program@key,w
  3863  0203  1D03               	btfss	3,2
  3864  0204  2A06               	goto	u4021
  3865  0205  2A07               	goto	u4020
  3866  0206                     u4021:
  3867  0206  2A0E               	goto	l3829
  3868  0207                     u4020:
  3869  0207                     l3823:
  3870                           
  3871                           ;main.c: 372:         clcd_print("Wash",(0x80+11));;main.c: 373:     }
  3872  0207  1112               	bcf	18,2	;volatile
  3873                           
  3874                           ;main.c: 374:     else if(total_time >= (time - wash_time - rinse_time))
  3875  0208  1107               	bcf	7,2	;volatile
  3876  0209                     l3825:
  3877                           
  3878                           ;main.c: 375:     {
  3879  0209  3005               	movlw	5
  3880  020A  00CF               	movwf	??_run_program
  3881  020B  084F               	movf	??_run_program,w
  3882  020C  00EC               	movwf	_operation_mode
  3883  020D                     l3827:
  3884                           
  3885                           ;main.c: 376:         clcd_print("Rinse",(0x80+11));
  3886  020D  1005               	bcf	5,0	;volatile
  3887  020E                     l3829:
  3888                           
  3889                           ;main.c: 378:     else
  3890  020E  0868               	movf	_min,w
  3891  020F  00CF               	movwf	??_run_program
  3892  0210  01D0               	clrf	??_run_program+1
  3893  0211  084F               	movf	??_run_program,w
  3894  0212  00F3               	movwf	___wmul@multiplier
  3895  0213  0850               	movf	??_run_program+1,w
  3896  0214  00F4               	movwf	___wmul@multiplier+1
  3897  0215  303C               	movlw	60
  3898  0216  00F5               	movwf	___wmul@multiplicand
  3899  0217  3000               	movlw	0
  3900  0218  00F6               	movwf	___wmul@multiplicand+1
  3901  0219  160A  118A  258E  120A  118A  	fcall	___wmul
  3902  021E  0878               	movf	_sec,w
  3903  021F  0773               	addwf	?___wmul,w
  3904  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0222  00DE               	movwf	run_program@total_time
  3907  0223  3000               	movlw	0
  3908  0224  1803               	skipnc
  3909  0225  3001               	movlw	1
  3910  0226  0774               	addwf	?___wmul+1,w
  3911  0227  00DF               	movwf	run_program@total_time+1
  3912  0228                     l3831:
  3913                           
  3914                           ;main.c: 379:     clcd_print(" Spin",(0x80+11));
  3915  0228  3007               	movlw	7
  3916  0229  027A               	subwf	_program_no,w
  3917  022A  1803               	skipnc
  3918  022B  2A2D               	goto	u4031
  3919  022C  2A2E               	goto	u4030
  3920  022D                     u4031:
  3921  022D  2A9B               	goto	l3843
  3922  022E                     u4030:
  3923  022E                     l3833:
  3924                           
  3925                           ;main.c: 380:     };main.c: 381:     else if(program_no==8)
  3926  022E  0864               	movf	_wash_time,w
  3927  022F  025C               	subwf	run_program@time,w
  3928  0230  00CF               	movwf	??_run_program
  3929  0231  0865               	movf	_wash_time+1,w
  3930  0232  1C03               	skipc
  3931  0233  0A65               	incf	_wash_time+1,w
  3932  0234  025D               	subwf	run_program@time+1,w
  3933  0235  00D0               	movwf	??_run_program+1
  3934  0236  085F               	movf	run_program@total_time+1,w
  3935  0237  3A80               	xorlw	128
  3936  0238  00D1               	movwf	??_run_program+2
  3937  0239  0850               	movf	??_run_program+1,w
  3938  023A  3A80               	xorlw	128
  3939  023B  0251               	subwf	??_run_program+2,w
  3940  023C  1D03               	skipz
  3941  023D  2A40               	goto	u4045
  3942  023E  084F               	movf	??_run_program,w
  3943  023F  025E               	subwf	run_program@total_time,w
  3944  0240                     u4045:
  3945  0240  1C03               	skipc
  3946  0241  2A43               	goto	u4041
  3947  0242  2A44               	goto	u4040
  3948  0243                     u4041:
  3949  0243  2A54               	goto	l3837
  3950  0244                     u4040:
  3951  0244                     l3835:
  3952                           
  3953                           ;main.c: 382:     {;main.c: 383:         if(total_time>=(time - (int)(0.40*time)))
  3954  0244  30A3               	movlw	low (STR_41| (0+32768))
  3955  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0247  00A0               	movwf	clcd_print@str
  3958  0248  3089               	movlw	high (STR_41| (0+32768))
  3959  0249  00A1               	movwf	clcd_print@str+1
  3960  024A  308B               	movlw	139
  3961  024B  00CF               	movwf	??_run_program
  3962  024C  084F               	movf	??_run_program,w
  3963  024D  00A2               	movwf	clcd_print@addr
  3964  024E  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  3965                           
  3966                           ;main.c: 384:         {
  3967  0253  2B2F               	goto	l3857
  3968  0254                     l3837:
  3969  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0256  0964               	comf	_wash_time,w
  3972  0257  00CF               	movwf	??_run_program
  3973  0258  0965               	comf	_wash_time+1,w
  3974  0259  00D0               	movwf	??_run_program+1
  3975  025A  0ACF               	incf	??_run_program,f
  3976  025B  1903               	skipnz
  3977  025C  0AD0               	incf	??_run_program+1,f
  3978  025D  0862               	movf	_rinse_time,w
  3979  025E  024F               	subwf	??_run_program,w
  3980  025F  00D1               	movwf	??_run_program+2
  3981  0260  0863               	movf	_rinse_time+1,w
  3982  0261  1C03               	skipc
  3983  0262  0A63               	incf	_rinse_time+1,w
  3984  0263  0250               	subwf	??_run_program+1,w
  3985  0264  00D2               	movwf	??_run_program+3
  3986  0265  085C               	movf	run_program@time,w
  3987  0266  0751               	addwf	??_run_program+2,w
  3988  0267  00D3               	movwf	??_run_program+4
  3989  0268  085D               	movf	run_program@time+1,w
  3990  0269  1803               	skipnc
  3991  026A  0A5D               	incf	run_program@time+1,w
  3992  026B  0752               	addwf	??_run_program+3,w
  3993  026C  00D4               	movwf	??_run_program+5
  3994  026D  085F               	movf	run_program@total_time+1,w
  3995  026E  3A80               	xorlw	128
  3996  026F  00D5               	movwf	??_run_program+6
  3997  0270  0854               	movf	??_run_program+5,w
  3998  0271  3A80               	xorlw	128
  3999  0272  0255               	subwf	??_run_program+6,w
  4000  0273  1D03               	skipz
  4001  0274  2A77               	goto	u4055
  4002  0275  0853               	movf	??_run_program+4,w
  4003  0276  025E               	subwf	run_program@total_time,w
  4004  0277                     u4055:
  4005  0277  1C03               	skipc
  4006  0278  2A7A               	goto	u4051
  4007  0279  2A7B               	goto	u4050
  4008  027A                     u4051:
  4009  027A  2A8B               	goto	l3841
  4010  027B                     u4050:
  4011  027B                     l3839:
  4012                           
  4013                           ;main.c: 386:         };main.c: 387:         else
  4014  027B  3086               	movlw	low (STR_42| (0+32768))
  4015  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4016  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4017  027E  00A0               	movwf	clcd_print@str
  4018  027F  3089               	movlw	high (STR_42| (0+32768))
  4019  0280  00A1               	movwf	clcd_print@str+1
  4020  0281  308B               	movlw	139
  4021  0282  00CF               	movwf	??_run_program
  4022  0283  084F               	movf	??_run_program,w
  4023  0284  00A2               	movwf	clcd_print@addr
  4024  0285  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4025                           
  4026                           ;main.c: 388:             clcd_print(" Spin",(0x80+11));
  4027  028A  2B2F               	goto	l3857
  4028  028B                     l3841:
  4029                           
  4030                           ;main.c: 390:     else if(program_no==9)
  4031  028B  308C               	movlw	low (STR_43| (0+32768))
  4032  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4033  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4034  028E  00A0               	movwf	clcd_print@str
  4035  028F  3089               	movlw	high (STR_43| (0+32768))
  4036  0290  00A1               	movwf	clcd_print@str+1
  4037  0291  308B               	movlw	139
  4038  0292  00CF               	movwf	??_run_program
  4039  0293  084F               	movf	??_run_program,w
  4040  0294  00A2               	movwf	clcd_print@addr
  4041  0295  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4042  029A  2B2F               	goto	l3857
  4043  029B                     l3843:
  4044  029B  3008               	movlw	8
  4045  029C  067A               	xorwf	_program_no,w
  4046  029D  1D03               	btfss	3,2
  4047  029E  2AA0               	goto	u4061
  4048  029F  2AA1               	goto	u4060
  4049  02A0                     u4061:
  4050  02A0  2B0E               	goto	l3851
  4051  02A1                     u4060:
  4052  02A1                     l3845:
  4053                           
  4054                           ;main.c: 393:     };main.c: 394:     else
  4055  02A1  085C               	movf	run_program@time,w
  4056  02A2  00F3               	movwf	___xxtofl@val
  4057  02A3  085D               	movf	run_program@time+1,w
  4058  02A4  00F4               	movwf	___xxtofl@val+1
  4059  02A5  3000               	movlw	0
  4060  02A6  1BF4               	btfsc	___xxtofl@val+1,7
  4061  02A7  30FF               	movlw	255
  4062  02A8  00F5               	movwf	___xxtofl@val+2
  4063  02A9  00F6               	movwf	___xxtofl@val+3
  4064  02AA  3001               	movlw	1
  4065  02AB  120A  158A  2224  120A  118A  	fcall	___xxtofl
  4066  02B0  0876               	movf	?___xxtofl+3,w
  4067  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  4068  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  4069  02B3  00B1               	movwf	___flmul@a+3
  4070  02B4  0875               	movf	?___xxtofl+2,w
  4071  02B5  00B0               	movwf	___flmul@a+2
  4072  02B6  0874               	movf	?___xxtofl+1,w
  4073  02B7  00AF               	movwf	___flmul@a+1
  4074  02B8  0873               	movf	?___xxtofl,w
  4075  02B9  00AE               	movwf	___flmul@a
  4076  02BA  303E               	movlw	62
  4077  02BB  00AD               	movwf	___flmul@b+3
  4078  02BC  30CC               	movlw	204
  4079  02BD  00AC               	movwf	___flmul@b+2
  4080  02BE  30CC               	movlw	204
  4081  02BF  00AB               	movwf	___flmul@b+1
  4082  02C0  30CD               	movlw	205
  4083  02C1  00AA               	movwf	___flmul@b
  4084  02C2  120A  118A  2400  120A  118A  	fcall	___flmul
  4085  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  4086  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  4087  02C9  082D               	movf	?___flmul+3,w
  4088  02CA  00C7               	movwf	___fltol@f1+3
  4089  02CB  082C               	movf	?___flmul+2,w
  4090  02CC  00C6               	movwf	___fltol@f1+2
  4091  02CD  082B               	movf	?___flmul+1,w
  4092  02CE  00C5               	movwf	___fltol@f1+1
  4093  02CF  082A               	movf	?___flmul,w
  4094  02D0  00C4               	movwf	___fltol@f1
  4095  02D1  120A  118A  2761  120A  118A  	fcall	___fltol
  4096  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  4097  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  4098  02D8  0844               	movf	?___fltol,w
  4099  02D9  025C               	subwf	run_program@time,w
  4100  02DA  00CF               	movwf	??_run_program
  4101  02DB  0845               	movf	?___fltol+1,w
  4102  02DC  1C03               	skipc
  4103  02DD  0A45               	incf	?___fltol+1,w
  4104  02DE  025D               	subwf	run_program@time+1,w
  4105  02DF  00D0               	movwf	??_run_program+1
  4106  02E0  085F               	movf	run_program@total_time+1,w
  4107  02E1  3A80               	xorlw	128
  4108  02E2  00D1               	movwf	??_run_program+2
  4109  02E3  0850               	movf	??_run_program+1,w
  4110  02E4  3A80               	xorlw	128
  4111  02E5  0251               	subwf	??_run_program+2,w
  4112  02E6  1D03               	skipz
  4113  02E7  2AEA               	goto	u4075
  4114  02E8  084F               	movf	??_run_program,w
  4115  02E9  025E               	subwf	run_program@total_time,w
  4116  02EA                     u4075:
  4117  02EA  1C03               	skipc
  4118  02EB  2AED               	goto	u4071
  4119  02EC  2AEE               	goto	u4070
  4120  02ED                     u4071:
  4121  02ED  2AFE               	goto	l3849
  4122  02EE                     u4070:
  4123  02EE                     l3847:
  4124                           
  4125                           ;main.c: 395:     {;main.c: 396:          clcd_print("Wash",(0x80+11));
  4126  02EE  3086               	movlw	low (STR_42| (0+32768))
  4127  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4128  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4129  02F1  00A0               	movwf	clcd_print@str
  4130  02F2  3089               	movlw	high (STR_42| (0+32768))
  4131  02F3  00A1               	movwf	clcd_print@str+1
  4132  02F4  308B               	movlw	139
  4133  02F5  00CF               	movwf	??_run_program
  4134  02F6  084F               	movf	??_run_program,w
  4135  02F7  00A2               	movwf	clcd_print@addr
  4136  02F8  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4137                           
  4138                           ;main.c: 397:     }
  4139  02FD  2B2F               	goto	l3857
  4140  02FE                     l3849:
  4141                           
  4142                           ;main.c: 399:     clcd_putch((min%10)+'0',(0xC0+7));
  4143  02FE  308C               	movlw	low (STR_43| (0+32768))
  4144  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  4145  0300  1303               	bcf	3,6	;RP1=0, select bank0
  4146  0301  00A0               	movwf	clcd_print@str
  4147  0302  3089               	movlw	high (STR_43| (0+32768))
  4148  0303  00A1               	movwf	clcd_print@str+1
  4149  0304  308B               	movlw	139
  4150  0305  00CF               	movwf	??_run_program
  4151  0306  084F               	movf	??_run_program,w
  4152  0307  00A2               	movwf	clcd_print@addr
  4153  0308  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4154  030D  2B2F               	goto	l3857
  4155  030E                     l3851:
  4156  030E  3009               	movlw	9
  4157  030F  067A               	xorwf	_program_no,w
  4158  0310  1D03               	btfss	3,2
  4159  0311  2B13               	goto	u4081
  4160  0312  2B14               	goto	u4080
  4161  0313                     u4081:
  4162  0313  2B22               	goto	l3855
  4163  0314                     u4080:
  4164  0314                     l3853:
  4165                           
  4166                           ;main.c: 402:     clcd_putch((sec%10)+'0',(0xC0+10));;main.c: 403:     if(sec==0 && min=
      +                          =0)
  4167  0314  3086               	movlw	low (STR_42| (0+32768))
  4168  0315  00A0               	movwf	clcd_print@str
  4169  0316  3089               	movlw	high (STR_42| (0+32768))
  4170  0317  00A1               	movwf	clcd_print@str+1
  4171  0318  308B               	movlw	139
  4172  0319  00CF               	movwf	??_run_program
  4173  031A  084F               	movf	??_run_program,w
  4174  031B  00A2               	movwf	clcd_print@addr
  4175  031C  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4176                           
  4177                           ;main.c: 404:     {
  4178  0321  2B2F               	goto	l3857
  4179  0322                     l3855:
  4180                           
  4181                           ;main.c: 406:         RC2 = 0;;main.c: 407:         RA0=0;
  4182  0322  30A3               	movlw	low (STR_41| (0+32768))
  4183  0323  00A0               	movwf	clcd_print@str
  4184  0324  3089               	movlw	high (STR_41| (0+32768))
  4185  0325  00A1               	movwf	clcd_print@str+1
  4186  0326  308B               	movlw	139
  4187  0327  00CF               	movwf	??_run_program
  4188  0328  084F               	movf	??_run_program,w
  4189  0329  00A2               	movwf	clcd_print@addr
  4190  032A  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4191  032F                     l3857:
  4192                           
  4193                           ;main.c: 409:         clear_screen();
  4194  032F  30C6               	movlw	198
  4195  0330  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0331  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0332  00CF               	movwf	??_run_program
  4198  0333  084F               	movf	??_run_program,w
  4199  0334  00A4               	movwf	clcd_putch@addr
  4200  0335  300A               	movlw	10
  4201  0336  00F3               	movwf	___awdiv@divisor
  4202  0337  3000               	movlw	0
  4203  0338  00F4               	movwf	___awdiv@divisor+1
  4204  0339  0868               	movf	_min,w
  4205  033A  00D0               	movwf	??_run_program+1
  4206  033B  01D1               	clrf	??_run_program+2
  4207  033C  0850               	movf	??_run_program+1,w
  4208  033D  00F5               	movwf	___awdiv@dividend
  4209  033E  0851               	movf	??_run_program+2,w
  4210  033F  00F6               	movwf	___awdiv@dividend+1
  4211  0340  160A  118A  2797  120A  118A  	fcall	___awdiv
  4212  0345  0873               	movf	?___awdiv,w
  4213  0346  3E30               	addlw	48
  4214  0347  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  4215  034C                     l3859:
  4216                           
  4217                           ;main.c: 410:         clcd_print("Prog Completed",(0x80+0));
  4218  034C  30C7               	movlw	199
  4219  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4220  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4221  034F  00CF               	movwf	??_run_program
  4222  0350  084F               	movf	??_run_program,w
  4223  0351  00A4               	movwf	clcd_putch@addr
  4224  0352  300A               	movlw	10
  4225  0353  00F3               	movwf	___awmod@divisor
  4226  0354  3000               	movlw	0
  4227  0355  00F4               	movwf	___awmod@divisor+1
  4228  0356  0868               	movf	_min,w
  4229  0357  00D0               	movwf	??_run_program+1
  4230  0358  01D1               	clrf	??_run_program+2
  4231  0359  0850               	movf	??_run_program+1,w
  4232  035A  00F5               	movwf	___awmod@dividend
  4233  035B  0851               	movf	??_run_program+2,w
  4234  035C  00F6               	movwf	___awmod@dividend+1
  4235  035D  160A  118A  2675  120A  118A  	fcall	___awmod
  4236  0362  0873               	movf	?___awmod,w
  4237  0363  3E30               	addlw	48
  4238  0364  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  4239  0369                     l3861:
  4240                           
  4241                           ;main.c: 411:         clcd_print("Remove Clothes",(0xC0+0));
  4242  0369  30C8               	movlw	200
  4243  036A  1283               	bcf	3,5	;RP0=0, select bank0
  4244  036B  1303               	bcf	3,6	;RP1=0, select bank0
  4245  036C  00CF               	movwf	??_run_program
  4246  036D  084F               	movf	??_run_program,w
  4247  036E  00A4               	movwf	clcd_putch@addr
  4248  036F  303A               	movlw	58
  4249  0370  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  4250  0375                     l3863:
  4251                           
  4252                           ;main.c: 412:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  4253  0375  30C9               	movlw	201
  4254  0376  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0377  1303               	bcf	3,6	;RP1=0, select bank0
  4256  0378  00CF               	movwf	??_run_program
  4257  0379  084F               	movf	??_run_program,w
  4258  037A  00A4               	movwf	clcd_putch@addr
  4259  037B  300A               	movlw	10
  4260  037C  00F3               	movwf	___awdiv@divisor
  4261  037D  3000               	movlw	0
  4262  037E  00F4               	movwf	___awdiv@divisor+1
  4263  037F  0878               	movf	_sec,w
  4264  0380  00D0               	movwf	??_run_program+1
  4265  0381  01D1               	clrf	??_run_program+2
  4266  0382  0850               	movf	??_run_program+1,w
  4267  0383  00F5               	movwf	___awdiv@dividend
  4268  0384  0851               	movf	??_run_program+2,w
  4269  0385  00F6               	movwf	___awdiv@dividend+1
  4270  0386  160A  118A  2797  120A  118A  	fcall	___awdiv
  4271  038B  0873               	movf	?___awdiv,w
  4272  038C  3E30               	addlw	48
  4273  038D  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  4274  0392                     l3865:
  4275                           
  4276                           ;main.c: 413:         RC1=0;
  4277  0392  30CA               	movlw	202
  4278  0393  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0394  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0395  00CF               	movwf	??_run_program
  4281  0396  084F               	movf	??_run_program,w
  4282  0397  00A4               	movwf	clcd_putch@addr
  4283  0398  300A               	movlw	10
  4284  0399  00F3               	movwf	___awmod@divisor
  4285  039A  3000               	movlw	0
  4286  039B  00F4               	movwf	___awmod@divisor+1
  4287  039C  0878               	movf	_sec,w
  4288  039D  00D0               	movwf	??_run_program+1
  4289  039E  01D1               	clrf	??_run_program+2
  4290  039F  0850               	movf	??_run_program+1,w
  4291  03A0  00F5               	movwf	___awmod@dividend
  4292  03A1  0851               	movf	??_run_program+2,w
  4293  03A2  00F6               	movwf	___awmod@dividend+1
  4294  03A3  160A  118A  2675  120A  118A  	fcall	___awmod
  4295  03A8  0873               	movf	?___awmod,w
  4296  03A9  3E30               	addlw	48
  4297  03AA  160A  118A  2514  120A  118A  	fcall	_clcd_putch
  4298  03AF                     l3867:
  4299                           
  4300                           ;main.c: 414:         operation_mode=0x01;
  4301  03AF  0878               	movf	_sec,w
  4302  03B0  1D03               	btfss	3,2
  4303  03B1  2BB3               	goto	u4091
  4304  03B2  2BB4               	goto	u4090
  4305  03B3                     u4091:
  4306  03B3  2BFF               	goto	l226
  4307  03B4                     u4090:
  4308  03B4                     l3869:
  4309  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  4310  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  4311  03B6  0868               	movf	_min,w
  4312  03B7  1D03               	btfss	3,2
  4313  03B8  2BBA               	goto	u4101
  4314  03B9  2BBB               	goto	u4100
  4315  03BA                     u4101:
  4316  03BA  2BFF               	goto	l226
  4317  03BB                     u4100:
  4318  03BB                     l3871:
  4319                           
  4320                           ;main.c: 415:         reset_mode=0x10;;main.c: 416:         clear_screen();
  4321  03BB  1112               	bcf	18,2	;volatile
  4322                           
  4323                           ;main.c: 417:     }
  4324  03BC  1107               	bcf	7,2	;volatile
  4325                           
  4326                           ;main.c: 418: }
  4327  03BD  1005               	bcf	5,0	;volatile
  4328  03BE  1487               	bsf	7,1	;volatile
  4329  03BF                     l3873:
  4330  03BF  160A  118A  24F4  120A  118A  	fcall	_clear_screen
  4331  03C4                     l3875:
  4332  03C4  3084               	movlw	low (STR_48| (0+32768))
  4333  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4334  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4335  03C7  00A0               	movwf	clcd_print@str
  4336  03C8  3088               	movlw	high (STR_48| (0+32768))
  4337  03C9  00A1               	movwf	clcd_print@str+1
  4338  03CA  3080               	movlw	128
  4339  03CB  00CF               	movwf	??_run_program
  4340  03CC  084F               	movf	??_run_program,w
  4341  03CD  00A2               	movwf	clcd_print@addr
  4342  03CE  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4343  03D3                     l3877:
  4344  03D3  3093               	movlw	low (STR_49| (0+32768))
  4345  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  4346  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  4347  03D6  00A0               	movwf	clcd_print@str
  4348  03D7  3088               	movlw	high (STR_49| (0+32768))
  4349  03D8  00A1               	movwf	clcd_print@str+1
  4350  03D9  30C0               	movlw	192
  4351  03DA  00CF               	movwf	??_run_program
  4352  03DB  084F               	movf	??_run_program,w
  4353  03DC  00A2               	movwf	clcd_print@addr
  4354  03DD  160A  118A  25B9  120A  118A  	fcall	_clcd_print
  4355  03E2                     l3879:
  4356  03E2  301A               	movlw	26
  4357  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  4358  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  4359  03E5  00D1               	movwf	??_run_program+2
  4360  03E6  305E               	movlw	94
  4361  03E7  00D0               	movwf	??_run_program+1
  4362  03E8  306D               	movlw	109
  4363  03E9  00CF               	movwf	??_run_program
  4364  03EA                     u4247:
  4365  03EA  0BCF               	decfsz	??_run_program,f
  4366  03EB  2BEA               	goto	u4247
  4367  03EC  0BD0               	decfsz	??_run_program+1,f
  4368  03ED  2BEA               	goto	u4247
  4369  03EE  0BD1               	decfsz	??_run_program+2,f
  4370  03EF  2BEA               	goto	u4247
  4371  03F0  2BF1               	nop2
  4372  03F1                     l3881:
  4373  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4374  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4375  03F3  1087               	bcf	7,1	;volatile
  4376  03F4                     l3883:
  4377  03F4  01EC               	clrf	_operation_mode
  4378  03F5  0AEC               	incf	_operation_mode,f
  4379  03F6                     l3885:
  4380  03F6  3010               	movlw	16
  4381  03F7  00CF               	movwf	??_run_program
  4382  03F8  084F               	movf	??_run_program,w
  4383  03F9  00E9               	movwf	_reset_mode
  4384  03FA  160A  118A  24F4  120A  118A  	fcall	_clear_screen
  4385  03FF                     l226:
  4386  03FF  0008               	return
  4387  0400                     __end_of_run_program:
  4388                           
  4389                           	psect	text5
  4390  09B8                     __ptext5:	
  4391 ;; *************** function _door_status_check *****************
  4392 ;; Defined at:
  4393 ;;		line 317 in file "main.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4407 ;;      Params:         0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0
  4409 ;;      Temps:          0       1       0       0       0
  4410 ;;      Totals:         0       1       0       0       0
  4411 ;;Total ram usage:        1 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 3
  4414 ;; This function calls:
  4415 ;;		_clcd_print
  4416 ;;		_clear_screen
  4417 ;; This function is called by:
  4418 ;;		_run_program
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422  09B8                     _door_status_check:	
  4423                           ;psect for function _door_status_check
  4424                           
  4425  09B8                     l3165:	
  4426                           ;incstack = 0
  4427                           ; Regs used in _door_status_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4428                           
  4429                           
  4430                           ;main.c: 319:            ;
  4431  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  4432  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  4433  09BA  1806               	btfsc	6,0	;volatile
  4434  09BB  29BD               	goto	u2911
  4435  09BC  29BE               	goto	u2910
  4436  09BD                     u2911:
  4437  09BD  2A23               	goto	l204
  4438  09BE                     u2910:
  4439  09BE                     l3167:
  4440                           
  4441                           ;main.c: 320:        };main.c: 321:        clear_screen();
  4442  09BE  1487               	bsf	7,1	;volatile
  4443                           
  4444                           ;main.c: 322:         clcd_print("Function -",(0x80+0));
  4445  09BF  1107               	bcf	7,2	;volatile
  4446                           
  4447                           ;main.c: 323:         clcd_print("Time= ",(0xC0+0));
  4448  09C0  1005               	bcf	5,0	;volatile
  4449                           
  4450                           ;main.c: 324:         clcd_print("5-START  6-PAUSE",(0xD0+0));
  4451  09C1  1112               	bcf	18,2	;volatile
  4452  09C2                     l3169:
  4453                           
  4454                           ;main.c: 325:        RC2=1;
  4455  09C2  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  4456  09C7                     l3171:
  4457                           
  4458                           ;main.c: 326:        RA0=1;
  4459  09C7  30E3               	movlw	low (STR_30| (0+32768))
  4460  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  4461  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  4462  09CA  00A0               	movwf	clcd_print@str
  4463  09CB  3088               	movlw	high (STR_30| (0+32768))
  4464  09CC  00A1               	movwf	clcd_print@str+1
  4465  09CD  3080               	movlw	128
  4466  09CE  00A3               	movwf	??_door_status_check
  4467  09CF  0823               	movf	??_door_status_check,w
  4468  09D0  00A2               	movwf	clcd_print@addr
  4469  09D1  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  4470  09D6                     l3173:
  4471                           
  4472                           ;main.c: 327:        TMR2ON=1;
  4473  09D6  30CA               	movlw	low (STR_31| (0+32768))
  4474  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  4475  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  4476  09D9  00A0               	movwf	clcd_print@str
  4477  09DA  3088               	movlw	high (STR_31| (0+32768))
  4478  09DB  00A1               	movwf	clcd_print@str+1
  4479  09DC  30C0               	movlw	192
  4480  09DD  00A3               	movwf	??_door_status_check
  4481  09DE  0823               	movf	??_door_status_check,w
  4482  09DF  00A2               	movwf	clcd_print@addr
  4483  09E0  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  4484  09E5                     l201:	
  4485                           ;main.c: 329:    };main.c: 331: void run_program(unsigned char key)
  4486                           
  4487                           
  4488                           ;main.c: 328:        RC1=0;
  4489  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  4490  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  4491  09E7  1C06               	btfss	6,0	;volatile
  4492  09E8  29EA               	goto	u2921
  4493  09E9  29EB               	goto	u2920
  4494  09EA                     u2921:
  4495  09EA  29E5               	goto	l201
  4496  09EB                     u2920:
  4497  09EB                     l3175:
  4498                           
  4499                           ;main.c: 332: {
  4500  09EB  160A  118A  24F4  120A  158A  	fcall	_clear_screen
  4501  09F0                     l3177:
  4502                           
  4503                           ;main.c: 333:     static int total_time,time;
  4504  09F0  30EF               	movlw	low (STR_32| (0+32768))
  4505  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  4506  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  4507  09F3  00A0               	movwf	clcd_print@str
  4508  09F4  3088               	movlw	high (STR_32| (0+32768))
  4509  09F5  00A1               	movwf	clcd_print@str+1
  4510  09F6  3080               	movlw	128
  4511  09F7  00A3               	movwf	??_door_status_check
  4512  09F8  0823               	movf	??_door_status_check,w
  4513  09F9  00A2               	movwf	clcd_print@addr
  4514  09FA  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  4515  09FF                     l3179:
  4516                           
  4517                           ;main.c: 334:     if(reset_mode==0x12)
  4518  09FF  3071               	movlw	low (STR_33| (0+32768))
  4519  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  4520  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  4521  0A02  00A0               	movwf	clcd_print@str
  4522  0A03  3089               	movlw	high (STR_33| (0+32768))
  4523  0A04  00A1               	movwf	clcd_print@str+1
  4524  0A05  30C0               	movlw	192
  4525  0A06  00A3               	movwf	??_door_status_check
  4526  0A07  0823               	movf	??_door_status_check,w
  4527  0A08  00A2               	movwf	clcd_print@addr
  4528  0A09  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  4529  0A0E                     l3181:
  4530                           
  4531                           ;main.c: 335:     {
  4532  0A0E  3034               	movlw	low (STR_34| (0+32768))
  4533  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0A11  00A0               	movwf	clcd_print@str
  4536  0A12  3088               	movlw	high (STR_34| (0+32768))
  4537  0A13  00A1               	movwf	clcd_print@str+1
  4538  0A14  30D0               	movlw	208
  4539  0A15  00A3               	movwf	??_door_status_check
  4540  0A16  0823               	movf	??_door_status_check,w
  4541  0A17  00A2               	movwf	clcd_print@addr
  4542  0A18  160A  118A  25B9  120A  158A  	fcall	_clcd_print
  4543  0A1D                     l3183:
  4544                           
  4545                           ;main.c: 336:         clear_screen();
  4546  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0A1F  1507               	bsf	7,2	;volatile
  4549  0A20                     l3185:
  4550                           
  4551                           ;main.c: 337:         clcd_print("Prog: ",(0x80+0));
  4552  0A20  1405               	bsf	5,0	;volatile
  4553  0A21                     l3187:
  4554                           
  4555                           ;main.c: 338:         clcd_print(washing_prog[program_no],(0x80+5));
  4556  0A21  1512               	bsf	18,2	;volatile
  4557  0A22                     l3189:
  4558                           
  4559                           ;main.c: 339:         clcd_print("Time: ",(0xC0+0));
  4560  0A22  1087               	bcf	7,1	;volatile
  4561  0A23                     l204:
  4562  0A23  0008               	return
  4563  0A24                     __end_of_door_status_check:
  4564                           
  4565                           	psect	text6
  4566  14F4                     __ptext6:	
  4567 ;; *************** function _clear_screen *****************
  4568 ;; Defined at:
  4569 ;;		line 116 in file "main.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0
  4585 ;;      Temps:          1       0       0       0       0
  4586 ;;      Totals:         1       0       0       0       0
  4587 ;;Total ram usage:        1 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 2
  4590 ;; This function calls:
  4591 ;;		_clcd_write
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;;		_washing_program_display
  4595 ;;		_water_level_display
  4596 ;;		_door_status_check
  4597 ;;		_run_program
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601  14F4                     _clear_screen:	
  4602                           ;psect for function _clear_screen
  4603                           
  4604  14F4                     l3109:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  4607                           
  4608                           
  4609                           ;main.c: 118:     {
  4610  14F4  01F3               	clrf	clcd_write@mode
  4611  14F5  3001               	movlw	1
  4612  14F6  160A  118A  2545  160A  118A  	fcall	_clcd_write
  4613  14FB                     l3111:
  4614                           
  4615                           ;main.c: 119:         program_no++;
  4616  14FB  30A6               	movlw	166
  4617  14FC  00F7               	movwf	??_clear_screen
  4618  14FD                     u4257:
  4619  14FD  0BF7               	decfsz	??_clear_screen,f
  4620  14FE  2CFD               	goto	u4257
  4621  14FF  0000               	nop
  4622  1500                     l116:
  4623  1500  0008               	return
  4624  1501                     __end_of_clear_screen:
  4625                           
  4626                           	psect	text7
  4627  0A24                     __ptext7:	
  4628 ;; *************** function ___xxtofl *****************
  4629 ;; Defined at:
  4630 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  sign            1    wreg     unsigned char 
  4633 ;;  val             4    3[COMMON] long 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  sign            1    4[BANK0 ] unsigned char 
  4636 ;;  arg             4    6[BANK0 ] unsigned long 
  4637 ;;  exp             1    5[BANK0 ] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  4    3[COMMON] unsigned char 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         4       0       0       0       0
  4648 ;;      Locals:         0       6       0       0       0
  4649 ;;      Temps:          0       4       0       0       0
  4650 ;;      Totals:         4      10       0       0       0
  4651 ;;Total ram usage:       14 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_run_program
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661  0A24                     ___xxtofl:	
  4662                           ;psect for function ___xxtofl
  4663                           
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4667                           ;___xxtofl@sign stored from wreg
  4668  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0A26  00A4               	movwf	___xxtofl@sign
  4671  0A27                     l3463:
  4672  0A27  0824               	movf	___xxtofl@sign,w
  4673  0A28  1903               	btfsc	3,2
  4674  0A29  2A2B               	goto	u3631
  4675  0A2A  2A2C               	goto	u3630
  4676  0A2B                     u3631:
  4677  0A2B  2A40               	goto	l3469
  4678  0A2C                     u3630:
  4679  0A2C                     l3465:
  4680  0A2C  1FF6               	btfss	___xxtofl@val+3,7
  4681  0A2D  2A2F               	goto	u3641
  4682  0A2E  2A30               	goto	u3640
  4683  0A2F                     u3641:
  4684  0A2F  2A40               	goto	l3469
  4685  0A30                     u3640:
  4686  0A30                     l3467:
  4687  0A30  0973               	comf	___xxtofl@val,w
  4688  0A31  00A6               	movwf	___xxtofl@arg
  4689  0A32  0974               	comf	___xxtofl@val+1,w
  4690  0A33  00A7               	movwf	___xxtofl@arg+1
  4691  0A34  0975               	comf	___xxtofl@val+2,w
  4692  0A35  00A8               	movwf	___xxtofl@arg+2
  4693  0A36  0976               	comf	___xxtofl@val+3,w
  4694  0A37  00A9               	movwf	___xxtofl@arg+3
  4695  0A38  0AA6               	incf	___xxtofl@arg,f
  4696  0A39  1903               	skipnz
  4697  0A3A  0AA7               	incf	___xxtofl@arg+1,f
  4698  0A3B  1903               	skipnz
  4699  0A3C  0AA8               	incf	___xxtofl@arg+2,f
  4700  0A3D  1903               	skipnz
  4701  0A3E  0AA9               	incf	___xxtofl@arg+3,f
  4702  0A3F  2A48               	goto	l836
  4703  0A40                     l3469:
  4704  0A40  0876               	movf	___xxtofl@val+3,w
  4705  0A41  00A9               	movwf	___xxtofl@arg+3
  4706  0A42  0875               	movf	___xxtofl@val+2,w
  4707  0A43  00A8               	movwf	___xxtofl@arg+2
  4708  0A44  0874               	movf	___xxtofl@val+1,w
  4709  0A45  00A7               	movwf	___xxtofl@arg+1
  4710  0A46  0873               	movf	___xxtofl@val,w
  4711  0A47  00A6               	movwf	___xxtofl@arg
  4712  0A48                     l836:
  4713  0A48  0876               	movf	___xxtofl@val+3,w
  4714  0A49  0475               	iorwf	___xxtofl@val+2,w
  4715  0A4A  0474               	iorwf	___xxtofl@val+1,w
  4716  0A4B  0473               	iorwf	___xxtofl@val,w
  4717  0A4C  1D03               	skipz
  4718  0A4D  2A4F               	goto	u3651
  4719  0A4E  2A50               	goto	u3650
  4720  0A4F                     u3651:
  4721  0A4F  2A59               	goto	l3475
  4722  0A50                     u3650:
  4723  0A50                     l3471:
  4724  0A50  3000               	movlw	0
  4725  0A51  00F6               	movwf	?___xxtofl+3
  4726  0A52  3000               	movlw	0
  4727  0A53  00F5               	movwf	?___xxtofl+2
  4728  0A54  3000               	movlw	0
  4729  0A55  00F4               	movwf	?___xxtofl+1
  4730  0A56  3000               	movlw	0
  4731  0A57  00F3               	movwf	?___xxtofl
  4732  0A58  2ADF               	goto	l838
  4733  0A59                     l3475:
  4734  0A59  3096               	movlw	150
  4735  0A5A  00A0               	movwf	??___xxtofl
  4736  0A5B  0820               	movf	??___xxtofl,w
  4737  0A5C  00A5               	movwf	___xxtofl@exp
  4738  0A5D  2A6B               	goto	l3479
  4739  0A5E                     l3477:
  4740  0A5E  3001               	movlw	1
  4741  0A5F  00A0               	movwf	??___xxtofl
  4742  0A60  0820               	movf	??___xxtofl,w
  4743  0A61  07A5               	addwf	___xxtofl@exp,f
  4744  0A62  3001               	movlw	1
  4745  0A63                     u3665:
  4746  0A63  1003               	clrc
  4747  0A64  0CA9               	rrf	___xxtofl@arg+3,f
  4748  0A65  0CA8               	rrf	___xxtofl@arg+2,f
  4749  0A66  0CA7               	rrf	___xxtofl@arg+1,f
  4750  0A67  0CA6               	rrf	___xxtofl@arg,f
  4751  0A68  3EFF               	addlw	-1
  4752  0A69  1D03               	skipz
  4753  0A6A  2A63               	goto	u3665
  4754  0A6B                     l3479:
  4755  0A6B  30FE               	movlw	254
  4756  0A6C  0529               	andwf	___xxtofl@arg+3,w
  4757  0A6D  1D03               	btfss	3,2
  4758  0A6E  2A70               	goto	u3671
  4759  0A6F  2A71               	goto	u3670
  4760  0A70                     u3671:
  4761  0A70  2A5E               	goto	l3477
  4762  0A71                     u3670:
  4763  0A71  2A8D               	goto	l842
  4764  0A72                     l3481:
  4765  0A72  3001               	movlw	1
  4766  0A73  00A0               	movwf	??___xxtofl
  4767  0A74  0820               	movf	??___xxtofl,w
  4768  0A75  07A5               	addwf	___xxtofl@exp,f
  4769  0A76                     l3483:
  4770  0A76  3001               	movlw	1
  4771  0A77  07A6               	addwf	___xxtofl@arg,f
  4772  0A78  3000               	movlw	0
  4773  0A79  1803               	skipnc
  4774  0A7A  3001               	movlw	1
  4775  0A7B  07A7               	addwf	___xxtofl@arg+1,f
  4776  0A7C  3000               	movlw	0
  4777  0A7D  1803               	skipnc
  4778  0A7E  3001               	movlw	1
  4779  0A7F  07A8               	addwf	___xxtofl@arg+2,f
  4780  0A80  3000               	movlw	0
  4781  0A81  1803               	skipnc
  4782  0A82  3001               	movlw	1
  4783  0A83  07A9               	addwf	___xxtofl@arg+3,f
  4784  0A84                     l3485:
  4785  0A84  3001               	movlw	1
  4786  0A85                     u3685:
  4787  0A85  1003               	clrc
  4788  0A86  0CA9               	rrf	___xxtofl@arg+3,f
  4789  0A87  0CA8               	rrf	___xxtofl@arg+2,f
  4790  0A88  0CA7               	rrf	___xxtofl@arg+1,f
  4791  0A89  0CA6               	rrf	___xxtofl@arg,f
  4792  0A8A  3EFF               	addlw	-1
  4793  0A8B  1D03               	skipz
  4794  0A8C  2A85               	goto	u3685
  4795  0A8D                     l842:
  4796  0A8D  30FF               	movlw	255
  4797  0A8E  0529               	andwf	___xxtofl@arg+3,w
  4798  0A8F  1D03               	btfss	3,2
  4799  0A90  2A92               	goto	u3691
  4800  0A91  2A93               	goto	u3690
  4801  0A92                     u3691:
  4802  0A92  2A72               	goto	l3481
  4803  0A93                     u3690:
  4804  0A93  2A9F               	goto	l3489
  4805  0A94                     l3487:
  4806  0A94  3001               	movlw	1
  4807  0A95  02A5               	subwf	___xxtofl@exp,f
  4808  0A96  3001               	movlw	1
  4809  0A97  00A0               	movwf	??___xxtofl
  4810  0A98                     u3705:
  4811  0A98  1003               	clrc
  4812  0A99  0DA6               	rlf	___xxtofl@arg,f
  4813  0A9A  0DA7               	rlf	___xxtofl@arg+1,f
  4814  0A9B  0DA8               	rlf	___xxtofl@arg+2,f
  4815  0A9C  0DA9               	rlf	___xxtofl@arg+3,f
  4816  0A9D  0BA0               	decfsz	??___xxtofl,f
  4817  0A9E  2A98               	goto	u3705
  4818  0A9F                     l3489:
  4819  0A9F  1BA8               	btfsc	___xxtofl@arg+2,7
  4820  0AA0  2AA2               	goto	u3711
  4821  0AA1  2AA3               	goto	u3710
  4822  0AA2                     u3711:
  4823  0AA2  2AA9               	goto	l849
  4824  0AA3                     u3710:
  4825  0AA3                     l3491:
  4826  0AA3  3002               	movlw	2
  4827  0AA4  0225               	subwf	___xxtofl@exp,w
  4828  0AA5  1803               	skipnc
  4829  0AA6  2AA8               	goto	u3721
  4830  0AA7  2AA9               	goto	u3720
  4831  0AA8                     u3721:
  4832  0AA8  2A94               	goto	l3487
  4833  0AA9                     u3720:
  4834  0AA9                     l849:
  4835  0AA9  1825               	btfsc	___xxtofl@exp,0
  4836  0AAA  2AAC               	goto	u3731
  4837  0AAB  2AAD               	goto	u3730
  4838  0AAC                     u3731:
  4839  0AAC  2AB5               	goto	l850
  4840  0AAD                     u3730:
  4841  0AAD                     l3493:
  4842  0AAD  30FF               	movlw	255
  4843  0AAE  05A6               	andwf	___xxtofl@arg,f
  4844  0AAF  30FF               	movlw	255
  4845  0AB0  05A7               	andwf	___xxtofl@arg+1,f
  4846  0AB1  307F               	movlw	127
  4847  0AB2  05A8               	andwf	___xxtofl@arg+2,f
  4848  0AB3  30FF               	movlw	255
  4849  0AB4  05A9               	andwf	___xxtofl@arg+3,f
  4850  0AB5                     l850:
  4851  0AB5  1003               	clrc
  4852  0AB6  0CA5               	rrf	___xxtofl@exp,f
  4853  0AB7                     l3495:
  4854  0AB7  0825               	movf	___xxtofl@exp,w
  4855  0AB8  00A0               	movwf	??___xxtofl
  4856  0AB9  01A1               	clrf	??___xxtofl+1
  4857  0ABA  01A2               	clrf	??___xxtofl+2
  4858  0ABB  01A3               	clrf	??___xxtofl+3
  4859  0ABC  3018               	movlw	24
  4860  0ABD                     u3745:
  4861  0ABD  1003               	clrc
  4862  0ABE  0DA0               	rlf	??___xxtofl,f
  4863  0ABF  0DA1               	rlf	??___xxtofl+1,f
  4864  0AC0  0DA2               	rlf	??___xxtofl+2,f
  4865  0AC1  0DA3               	rlf	??___xxtofl+3,f
  4866  0AC2                     u3740:
  4867  0AC2  3EFF               	addlw	-1
  4868  0AC3  1D03               	skipz
  4869  0AC4  2ABD               	goto	u3745
  4870  0AC5  0820               	movf	??___xxtofl,w
  4871  0AC6  04A6               	iorwf	___xxtofl@arg,f
  4872  0AC7  0821               	movf	??___xxtofl+1,w
  4873  0AC8  04A7               	iorwf	___xxtofl@arg+1,f
  4874  0AC9  0822               	movf	??___xxtofl+2,w
  4875  0ACA  04A8               	iorwf	___xxtofl@arg+2,f
  4876  0ACB  0823               	movf	??___xxtofl+3,w
  4877  0ACC  04A9               	iorwf	___xxtofl@arg+3,f
  4878  0ACD                     l3497:
  4879  0ACD  0824               	movf	___xxtofl@sign,w
  4880  0ACE  1903               	btfsc	3,2
  4881  0ACF  2AD1               	goto	u3751
  4882  0AD0  2AD2               	goto	u3750
  4883  0AD1                     u3751:
  4884  0AD1  2AD7               	goto	l3503
  4885  0AD2                     u3750:
  4886  0AD2                     l3499:
  4887  0AD2  1FF6               	btfss	___xxtofl@val+3,7
  4888  0AD3  2AD5               	goto	u3761
  4889  0AD4  2AD6               	goto	u3760
  4890  0AD5                     u3761:
  4891  0AD5  2AD7               	goto	l3503
  4892  0AD6                     u3760:
  4893  0AD6                     l3501:
  4894  0AD6  17A9               	bsf	___xxtofl@arg+3,7
  4895  0AD7                     l3503:
  4896  0AD7  0829               	movf	___xxtofl@arg+3,w
  4897  0AD8  00F6               	movwf	?___xxtofl+3
  4898  0AD9  0828               	movf	___xxtofl@arg+2,w
  4899  0ADA  00F5               	movwf	?___xxtofl+2
  4900  0ADB  0827               	movf	___xxtofl@arg+1,w
  4901  0ADC  00F4               	movwf	?___xxtofl+1
  4902  0ADD  0826               	movf	___xxtofl@arg,w
  4903  0ADE  00F3               	movwf	?___xxtofl
  4904  0ADF                     l838:
  4905  0ADF  0008               	return
  4906  0AE0                     __end_of___xxtofl:
  4907                           
  4908                           	psect	text8
  4909  158E                     __ptext8:	
  4910 ;; *************** function ___wmul *****************
  4911 ;; Defined at:
  4912 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  multiplier      2    3[COMMON] unsigned int 
  4915 ;;  multiplicand    2    5[COMMON] unsigned int 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  product         2    0[BANK0 ] unsigned int 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  2    3[COMMON] unsigned int 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         4       0       0       0       0
  4928 ;;      Locals:         0       2       0       0       0
  4929 ;;      Temps:          0       0       0       0       0
  4930 ;;      Totals:         4       2       0       0       0
  4931 ;;Total ram usage:        6 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_run_program
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941  158E                     ___wmul:	
  4942                           ;psect for function ___wmul
  4943                           
  4944  158E                     l3191:	
  4945                           ;incstack = 0
  4946                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4947                           
  4948  158E  1283               	bcf	3,5	;RP0=0, select bank0
  4949  158F  1303               	bcf	3,6	;RP1=0, select bank0
  4950  1590  01A0               	clrf	___wmul@product
  4951  1591  01A1               	clrf	___wmul@product+1
  4952  1592                     l3193:
  4953  1592  1C73               	btfss	___wmul@multiplier,0
  4954  1593  2D95               	goto	u2931
  4955  1594  2D96               	goto	u2930
  4956  1595                     u2931:
  4957  1595  2D9E               	goto	l403
  4958  1596                     u2930:
  4959  1596                     l3195:
  4960  1596  0875               	movf	___wmul@multiplicand,w
  4961  1597  1283               	bcf	3,5	;RP0=0, select bank0
  4962  1598  1303               	bcf	3,6	;RP1=0, select bank0
  4963  1599  07A0               	addwf	___wmul@product,f
  4964  159A  1803               	skipnc
  4965  159B  0AA1               	incf	___wmul@product+1,f
  4966  159C  0876               	movf	___wmul@multiplicand+1,w
  4967  159D  07A1               	addwf	___wmul@product+1,f
  4968  159E                     l403:
  4969  159E  3001               	movlw	1
  4970  159F                     u2945:
  4971  159F  1003               	clrc
  4972  15A0  0DF5               	rlf	___wmul@multiplicand,f
  4973  15A1  0DF6               	rlf	___wmul@multiplicand+1,f
  4974  15A2  3EFF               	addlw	-1
  4975  15A3  1D03               	skipz
  4976  15A4  2D9F               	goto	u2945
  4977  15A5                     l3197:
  4978  15A5  3001               	movlw	1
  4979  15A6                     u2955:
  4980  15A6  1003               	clrc
  4981  15A7  0CF4               	rrf	___wmul@multiplier+1,f
  4982  15A8  0CF3               	rrf	___wmul@multiplier,f
  4983  15A9  3EFF               	addlw	-1
  4984  15AA  1D03               	skipz
  4985  15AB  2DA6               	goto	u2955
  4986  15AC                     l3199:
  4987  15AC  0873               	movf	___wmul@multiplier,w
  4988  15AD  0474               	iorwf	___wmul@multiplier+1,w
  4989  15AE  1D03               	btfss	3,2
  4990  15AF  2DB1               	goto	u2961
  4991  15B0  2DB2               	goto	u2960
  4992  15B1                     u2961:
  4993  15B1  2D92               	goto	l3193
  4994  15B2                     u2960:
  4995  15B2                     l3201:
  4996  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  4997  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  4998  15B4  0821               	movf	___wmul@product+1,w
  4999  15B5  00F4               	movwf	?___wmul+1
  5000  15B6  0820               	movf	___wmul@product,w
  5001  15B7  00F3               	movwf	?___wmul
  5002  15B8                     l405:
  5003  15B8  0008               	return
  5004  15B9                     __end_of___wmul:
  5005                           
  5006                           	psect	text9
  5007  0761                     __ptext9:	
  5008 ;; *************** function ___fltol *****************
  5009 ;; Defined at:
  5010 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  f1              4   36[BANK0 ] unsigned int 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  exp1            1   46[BANK0 ] unsigned char 
  5015 ;;  sign1           1   45[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4   36[BANK0 ] long 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         0       4       0       0       0
  5026 ;;      Locals:         0       2       0       0       0
  5027 ;;      Temps:          0       5       0       0       0
  5028 ;;      Totals:         0      11       0       0       0
  5029 ;;Total ram usage:       11 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 1
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_run_program
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039  0761                     ___fltol:	
  5040                           ;psect for function ___fltol
  5041                           
  5042  0761                     l3287:	
  5043                           ;incstack = 0
  5044                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5045                           
  5046  0761  1003               	clrc
  5047  0762  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0763  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0764  0D46               	rlf	___fltol@f1+2,w
  5050  0765  0D47               	rlf	___fltol@f1+3,w
  5051  0766  00C8               	movwf	??___fltol
  5052  0767  0848               	movf	??___fltol,w
  5053  0768  00CE               	movwf	___fltol@exp1
  5054  0769  084E               	movf	___fltol@exp1,w
  5055  076A  1D03               	btfss	3,2
  5056  076B  2F6D               	goto	u3161
  5057  076C  2F6E               	goto	u3160
  5058  076D                     u3161:
  5059  076D  2F77               	goto	l3293
  5060  076E                     u3160:
  5061  076E                     l3289:
  5062  076E  3000               	movlw	0
  5063  076F  00C7               	movwf	?___fltol+3
  5064  0770  3000               	movlw	0
  5065  0771  00C6               	movwf	?___fltol+2
  5066  0772  3000               	movlw	0
  5067  0773  00C5               	movwf	?___fltol+1
  5068  0774  3000               	movlw	0
  5069  0775  00C4               	movwf	?___fltol
  5070  0776  2FDC               	goto	l589
  5071  0777                     l3293:
  5072  0777  0844               	movf	___fltol@f1,w
  5073  0778  00C8               	movwf	??___fltol
  5074  0779  0845               	movf	___fltol@f1+1,w
  5075  077A  00C9               	movwf	??___fltol+1
  5076  077B  0846               	movf	___fltol@f1+2,w
  5077  077C  00CA               	movwf	??___fltol+2
  5078  077D  0847               	movf	___fltol@f1+3,w
  5079  077E  00CB               	movwf	??___fltol+3
  5080  077F  301F               	movlw	31
  5081  0780                     u3175:
  5082  0780  1003               	clrc
  5083  0781  0CCB               	rrf	??___fltol+3,f
  5084  0782  0CCA               	rrf	??___fltol+2,f
  5085  0783  0CC9               	rrf	??___fltol+1,f
  5086  0784  0CC8               	rrf	??___fltol,f
  5087  0785                     u3170:
  5088  0785  3EFF               	addlw	-1
  5089  0786  1D03               	skipz
  5090  0787  2F80               	goto	u3175
  5091  0788  0848               	movf	??___fltol,w
  5092  0789  00CC               	movwf	??___fltol+4
  5093  078A  084C               	movf	??___fltol+4,w
  5094  078B  00CD               	movwf	___fltol@sign1
  5095  078C                     l3295:
  5096  078C  17C6               	bsf	___fltol@f1+2,7
  5097  078D                     l3297:
  5098  078D  30FF               	movlw	255
  5099  078E  05C4               	andwf	___fltol@f1,f
  5100  078F  30FF               	movlw	255
  5101  0790  05C5               	andwf	___fltol@f1+1,f
  5102  0791  30FF               	movlw	255
  5103  0792  05C6               	andwf	___fltol@f1+2,f
  5104  0793  3000               	movlw	0
  5105  0794  05C7               	andwf	___fltol@f1+3,f
  5106  0795                     l3299:
  5107  0795  3096               	movlw	150
  5108  0796  02CE               	subwf	___fltol@exp1,f
  5109  0797                     l3301:
  5110  0797  1FCE               	btfss	___fltol@exp1,7
  5111  0798  2F9A               	goto	u3181
  5112  0799  2F9B               	goto	u3180
  5113  079A                     u3181:
  5114  079A  2FB5               	goto	l3311
  5115  079B                     u3180:
  5116  079B                     l3303:
  5117  079B  084E               	movf	___fltol@exp1,w
  5118  079C  3A80               	xorlw	128
  5119  079D  3E97               	addlw	151
  5120  079E  1803               	skipnc
  5121  079F  2FA1               	goto	u3191
  5122  07A0  2FA2               	goto	u3190
  5123  07A1                     u3191:
  5124  07A1  2FA3               	goto	l3309
  5125  07A2                     u3190:
  5126  07A2  2F6E               	goto	l3289
  5127  07A3                     l3309:
  5128  07A3  3001               	movlw	1
  5129  07A4                     u3205:
  5130  07A4  1003               	clrc
  5131  07A5  0CC7               	rrf	___fltol@f1+3,f
  5132  07A6  0CC6               	rrf	___fltol@f1+2,f
  5133  07A7  0CC5               	rrf	___fltol@f1+1,f
  5134  07A8  0CC4               	rrf	___fltol@f1,f
  5135  07A9  3EFF               	addlw	-1
  5136  07AA  1D03               	skipz
  5137  07AB  2FA4               	goto	u3205
  5138  07AC  3001               	movlw	1
  5139  07AD  00C8               	movwf	??___fltol
  5140  07AE  0848               	movf	??___fltol,w
  5141  07AF  07CE               	addwf	___fltol@exp1,f
  5142  07B0  1D03               	btfss	3,2
  5143  07B1  2FB3               	goto	u3211
  5144  07B2  2FB4               	goto	u3210
  5145  07B3                     u3211:
  5146  07B3  2FA3               	goto	l3309
  5147  07B4                     u3210:
  5148  07B4  2FCC               	goto	l3319
  5149  07B5                     l3311:
  5150  07B5  3020               	movlw	32
  5151  07B6  024E               	subwf	___fltol@exp1,w
  5152  07B7  1C03               	skipc
  5153  07B8  2FBA               	goto	u3221
  5154  07B9  2FBB               	goto	u3220
  5155  07BA                     u3221:
  5156  07BA  2FC7               	goto	l596
  5157  07BB                     u3220:
  5158  07BB  2F6E               	goto	l3289
  5159  07BC                     l3317:
  5160  07BC  3001               	movlw	1
  5161  07BD  00C8               	movwf	??___fltol
  5162  07BE                     u3235:
  5163  07BE  1003               	clrc
  5164  07BF  0DC4               	rlf	___fltol@f1,f
  5165  07C0  0DC5               	rlf	___fltol@f1+1,f
  5166  07C1  0DC6               	rlf	___fltol@f1+2,f
  5167  07C2  0DC7               	rlf	___fltol@f1+3,f
  5168  07C3  0BC8               	decfsz	??___fltol,f
  5169  07C4  2FBE               	goto	u3235
  5170  07C5  3001               	movlw	1
  5171  07C6  02CE               	subwf	___fltol@exp1,f
  5172  07C7                     l596:
  5173  07C7  084E               	movf	___fltol@exp1,w
  5174  07C8  1D03               	btfss	3,2
  5175  07C9  2FCB               	goto	u3241
  5176  07CA  2FCC               	goto	u3240
  5177  07CB                     u3241:
  5178  07CB  2FBC               	goto	l3317
  5179  07CC                     u3240:
  5180  07CC                     l3319:
  5181  07CC  084D               	movf	___fltol@sign1,w
  5182  07CD  1903               	btfsc	3,2
  5183  07CE  2FD0               	goto	u3251
  5184  07CF  2FD1               	goto	u3250
  5185  07D0                     u3251:
  5186  07D0  2FDC               	goto	l599
  5187  07D1                     u3250:
  5188  07D1                     l3321:
  5189  07D1  09C4               	comf	___fltol@f1,f
  5190  07D2  09C5               	comf	___fltol@f1+1,f
  5191  07D3  09C6               	comf	___fltol@f1+2,f
  5192  07D4  09C7               	comf	___fltol@f1+3,f
  5193  07D5  0AC4               	incf	___fltol@f1,f
  5194  07D6  1903               	skipnz
  5195  07D7  0AC5               	incf	___fltol@f1+1,f
  5196  07D8  1903               	skipnz
  5197  07D9  0AC6               	incf	___fltol@f1+2,f
  5198  07DA  1903               	skipnz
  5199  07DB  0AC7               	incf	___fltol@f1+3,f
  5200  07DC                     l599:
  5201  07DC                     l589:
  5202  07DC  0008               	return
  5203  07DD                     __end_of___fltol:
  5204                           
  5205                           	psect	text10
  5206  0400                     __ptext10:	
  5207 ;; *************** function ___flmul *****************
  5208 ;; Defined at:
  5209 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  b               4   10[BANK0 ] long 
  5212 ;;  a               4   14[BANK0 ] long 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  prod            4   30[BANK0 ] struct .
  5215 ;;  grs             4   25[BANK0 ] unsigned long 
  5216 ;;  temp            2   34[BANK0 ] struct .
  5217 ;;  bexp            1   29[BANK0 ] unsigned char 
  5218 ;;  aexp            1   24[BANK0 ] unsigned char 
  5219 ;;  sign            1   23[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  4   10[BANK0 ] unsigned char 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       8       0       0       0
  5230 ;;      Locals:         0      13       0       0       0
  5231 ;;      Temps:          0       5       0       0       0
  5232 ;;      Totals:         0      26       0       0       0
  5233 ;;Total ram usage:       26 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 2
  5236 ;; This function calls:
  5237 ;;		__Umul8_16
  5238 ;; This function is called by:
  5239 ;;		_run_program
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243  0400                     ___flmul:	
  5244                           ;psect for function ___flmul
  5245                           
  5246  0400                     l3323:	
  5247                           ;incstack = 0
  5248                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5249                           
  5250  0400  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0401  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0402  082D               	movf	___flmul@b+3,w
  5253  0403  3980               	andlw	128
  5254  0404  00B2               	movwf	??___flmul
  5255  0405  0832               	movf	??___flmul,w
  5256  0406  00B7               	movwf	___flmul@sign
  5257  0407                     l3325:
  5258  0407  082D               	movf	___flmul@b+3,w
  5259  0408  00B2               	movwf	??___flmul
  5260  0409  0732               	addwf	??___flmul,w
  5261  040A  00B3               	movwf	??___flmul+1
  5262  040B  0833               	movf	??___flmul+1,w
  5263  040C  00BD               	movwf	___flmul@bexp
  5264  040D                     l3327:
  5265  040D  1FAC               	btfss	___flmul@b+2,7
  5266  040E  2C10               	goto	u3261
  5267  040F  2C11               	goto	u3260
  5268  0410                     u3261:
  5269  0410  2C12               	goto	l3331
  5270  0411                     u3260:
  5271  0411                     l3329:
  5272  0411  143D               	bsf	___flmul@bexp,0
  5273  0412                     l3331:
  5274  0412  083D               	movf	___flmul@bexp,w
  5275  0413  1903               	btfsc	3,2
  5276  0414  2C16               	goto	u3271
  5277  0415  2C17               	goto	u3270
  5278  0416                     u3271:
  5279  0416  2C26               	goto	l3339
  5280  0417                     u3270:
  5281  0417                     l3333:
  5282  0417  0A3D               	incf	___flmul@bexp,w
  5283  0418  1D03               	btfss	3,2
  5284  0419  2C1B               	goto	u3281
  5285  041A  2C1C               	goto	u3280
  5286  041B                     u3281:
  5287  041B  2C24               	goto	l3337
  5288  041C                     u3280:
  5289  041C                     l3335:
  5290  041C  3000               	movlw	0
  5291  041D  00AD               	movwf	___flmul@b+3
  5292  041E  3000               	movlw	0
  5293  041F  00AC               	movwf	___flmul@b+2
  5294  0420  3000               	movlw	0
  5295  0421  00AB               	movwf	___flmul@b+1
  5296  0422  3000               	movlw	0
  5297  0423  00AA               	movwf	___flmul@b
  5298  0424                     l3337:
  5299  0424  17AC               	bsf	___flmul@b+2,7
  5300  0425  2C2E               	goto	l3341
  5301  0426                     l3339:
  5302  0426  3000               	movlw	0
  5303  0427  00AD               	movwf	___flmul@b+3
  5304  0428  3000               	movlw	0
  5305  0429  00AC               	movwf	___flmul@b+2
  5306  042A  3000               	movlw	0
  5307  042B  00AB               	movwf	___flmul@b+1
  5308  042C  3000               	movlw	0
  5309  042D  00AA               	movwf	___flmul@b
  5310  042E                     l3341:
  5311  042E  0831               	movf	___flmul@a+3,w
  5312  042F  3980               	andlw	128
  5313  0430  00B2               	movwf	??___flmul
  5314  0431  0832               	movf	??___flmul,w
  5315  0432  06B7               	xorwf	___flmul@sign,f
  5316  0433                     l3343:
  5317  0433  0831               	movf	___flmul@a+3,w
  5318  0434  00B2               	movwf	??___flmul
  5319  0435  0732               	addwf	??___flmul,w
  5320  0436  00B3               	movwf	??___flmul+1
  5321  0437  0833               	movf	??___flmul+1,w
  5322  0438  00B8               	movwf	___flmul@aexp
  5323  0439                     l3345:
  5324  0439  1FB0               	btfss	___flmul@a+2,7
  5325  043A  2C3C               	goto	u3291
  5326  043B  2C3D               	goto	u3290
  5327  043C                     u3291:
  5328  043C  2C3E               	goto	l3349
  5329  043D                     u3290:
  5330  043D                     l3347:
  5331  043D  1438               	bsf	___flmul@aexp,0
  5332  043E                     l3349:
  5333  043E  0838               	movf	___flmul@aexp,w
  5334  043F  1903               	btfsc	3,2
  5335  0440  2C42               	goto	u3301
  5336  0441  2C43               	goto	u3300
  5337  0442                     u3301:
  5338  0442  2C52               	goto	l3357
  5339  0443                     u3300:
  5340  0443                     l3351:
  5341  0443  0A38               	incf	___flmul@aexp,w
  5342  0444  1D03               	btfss	3,2
  5343  0445  2C47               	goto	u3311
  5344  0446  2C48               	goto	u3310
  5345  0447                     u3311:
  5346  0447  2C50               	goto	l3355
  5347  0448                     u3310:
  5348  0448                     l3353:
  5349  0448  3000               	movlw	0
  5350  0449  00B1               	movwf	___flmul@a+3
  5351  044A  3000               	movlw	0
  5352  044B  00B0               	movwf	___flmul@a+2
  5353  044C  3000               	movlw	0
  5354  044D  00AF               	movwf	___flmul@a+1
  5355  044E  3000               	movlw	0
  5356  044F  00AE               	movwf	___flmul@a
  5357  0450                     l3355:
  5358  0450  17B0               	bsf	___flmul@a+2,7
  5359  0451  2C5A               	goto	l3359
  5360  0452                     l3357:
  5361  0452  3000               	movlw	0
  5362  0453  00B1               	movwf	___flmul@a+3
  5363  0454  3000               	movlw	0
  5364  0455  00B0               	movwf	___flmul@a+2
  5365  0456  3000               	movlw	0
  5366  0457  00AF               	movwf	___flmul@a+1
  5367  0458  3000               	movlw	0
  5368  0459  00AE               	movwf	___flmul@a
  5369  045A                     l3359:
  5370  045A  0838               	movf	___flmul@aexp,w
  5371  045B  1903               	btfsc	3,2
  5372  045C  2C5E               	goto	u3321
  5373  045D  2C5F               	goto	u3320
  5374  045E                     u3321:
  5375  045E  2C64               	goto	l3363
  5376  045F                     u3320:
  5377  045F                     l3361:
  5378  045F  083D               	movf	___flmul@bexp,w
  5379  0460  1D03               	btfss	3,2
  5380  0461  2C63               	goto	u3331
  5381  0462  2C64               	goto	u3330
  5382  0463                     u3331:
  5383  0463  2C6D               	goto	l3367
  5384  0464                     u3330:
  5385  0464                     l3363:
  5386  0464  3000               	movlw	0
  5387  0465  00AD               	movwf	?___flmul+3
  5388  0466  3000               	movlw	0
  5389  0467  00AC               	movwf	?___flmul+2
  5390  0468  3000               	movlw	0
  5391  0469  00AB               	movwf	?___flmul+1
  5392  046A  3000               	movlw	0
  5393  046B  00AA               	movwf	?___flmul
  5394  046C  2F60               	goto	l792
  5395  046D                     l3367:
  5396  046D  082A               	movf	___flmul@b,w
  5397  046E  00B2               	movwf	??___flmul
  5398  046F  0832               	movf	??___flmul,w
  5399  0470  00F3               	movwf	__Umul8_16@multiplicand
  5400  0471  0830               	movf	___flmul@a+2,w
  5401  0472  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5402  0477  0874               	movf	?__Umul8_16+1,w
  5403  0478  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0479  1303               	bcf	3,6	;RP1=0, select bank0
  5405  047A  00C3               	movwf	___flmul@temp+1
  5406  047B  0873               	movf	?__Umul8_16,w
  5407  047C  00C2               	movwf	___flmul@temp
  5408  047D                     l3369:
  5409  047D  0842               	movf	___flmul@temp,w
  5410  047E  00B2               	movwf	??___flmul
  5411  047F  01B3               	clrf	??___flmul+1
  5412  0480  01B4               	clrf	??___flmul+2
  5413  0481  01B5               	clrf	??___flmul+3
  5414  0482  0835               	movf	??___flmul+3,w
  5415  0483  00BC               	movwf	___flmul@grs+3
  5416  0484  0834               	movf	??___flmul+2,w
  5417  0485  00BB               	movwf	___flmul@grs+2
  5418  0486  0833               	movf	??___flmul+1,w
  5419  0487  00BA               	movwf	___flmul@grs+1
  5420  0488  0832               	movf	??___flmul,w
  5421  0489  00B9               	movwf	___flmul@grs
  5422  048A                     l3371:
  5423  048A  0843               	movf	___flmul@temp+1,w
  5424  048B  00B2               	movwf	??___flmul
  5425  048C  01B3               	clrf	??___flmul+1
  5426  048D  01B4               	clrf	??___flmul+2
  5427  048E  01B5               	clrf	??___flmul+3
  5428  048F  0835               	movf	??___flmul+3,w
  5429  0490  00C1               	movwf	___flmul@prod+3
  5430  0491  0834               	movf	??___flmul+2,w
  5431  0492  00C0               	movwf	___flmul@prod+2
  5432  0493  0833               	movf	??___flmul+1,w
  5433  0494  00BF               	movwf	___flmul@prod+1
  5434  0495  0832               	movf	??___flmul,w
  5435  0496  00BE               	movwf	___flmul@prod
  5436  0497  082B               	movf	___flmul@b+1,w
  5437  0498  00B2               	movwf	??___flmul
  5438  0499  0832               	movf	??___flmul,w
  5439  049A  00F3               	movwf	__Umul8_16@multiplicand
  5440  049B  082F               	movf	___flmul@a+1,w
  5441  049C  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5442  04A1  0874               	movf	?__Umul8_16+1,w
  5443  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  5444  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  5445  04A4  00C3               	movwf	___flmul@temp+1
  5446  04A5  0873               	movf	?__Umul8_16,w
  5447  04A6  00C2               	movwf	___flmul@temp
  5448  04A7                     l3373:
  5449  04A7  0842               	movf	___flmul@temp,w
  5450  04A8  00B2               	movwf	??___flmul
  5451  04A9  01B3               	clrf	??___flmul+1
  5452  04AA  01B4               	clrf	??___flmul+2
  5453  04AB  01B5               	clrf	??___flmul+3
  5454  04AC  0832               	movf	??___flmul,w
  5455  04AD  07B9               	addwf	___flmul@grs,f
  5456  04AE  0833               	movf	??___flmul+1,w
  5457  04AF  1103               	clrz
  5458  04B0  1803               	skipnc
  5459  04B1  3E01               	addlw	1
  5460  04B2  1903               	skipnz
  5461  04B3  2CB5               	goto	u3341
  5462  04B4  07BA               	addwf	___flmul@grs+1,f
  5463  04B5                     u3341:
  5464  04B5  0834               	movf	??___flmul+2,w
  5465  04B6  1103               	clrz
  5466  04B7  1803               	skipnc
  5467  04B8  3E01               	addlw	1
  5468  04B9  1903               	skipnz
  5469  04BA  2CBC               	goto	u3342
  5470  04BB  07BB               	addwf	___flmul@grs+2,f
  5471  04BC                     u3342:
  5472  04BC  0835               	movf	??___flmul+3,w
  5473  04BD  1103               	clrz
  5474  04BE  1803               	skipnc
  5475  04BF  3E01               	addlw	1
  5476  04C0  1903               	skipnz
  5477  04C1  2CC3               	goto	u3343
  5478  04C2  07BC               	addwf	___flmul@grs+3,f
  5479  04C3                     u3343:
  5480  04C3                     l3375:
  5481  04C3  0843               	movf	___flmul@temp+1,w
  5482  04C4  00B2               	movwf	??___flmul
  5483  04C5  01B3               	clrf	??___flmul+1
  5484  04C6  01B4               	clrf	??___flmul+2
  5485  04C7  01B5               	clrf	??___flmul+3
  5486  04C8  0832               	movf	??___flmul,w
  5487  04C9  07BE               	addwf	___flmul@prod,f
  5488  04CA  0833               	movf	??___flmul+1,w
  5489  04CB  1103               	clrz
  5490  04CC  1803               	skipnc
  5491  04CD  3E01               	addlw	1
  5492  04CE  1903               	skipnz
  5493  04CF  2CD1               	goto	u3351
  5494  04D0  07BF               	addwf	___flmul@prod+1,f
  5495  04D1                     u3351:
  5496  04D1  0834               	movf	??___flmul+2,w
  5497  04D2  1103               	clrz
  5498  04D3  1803               	skipnc
  5499  04D4  3E01               	addlw	1
  5500  04D5  1903               	skipnz
  5501  04D6  2CD8               	goto	u3352
  5502  04D7  07C0               	addwf	___flmul@prod+2,f
  5503  04D8                     u3352:
  5504  04D8  0835               	movf	??___flmul+3,w
  5505  04D9  1103               	clrz
  5506  04DA  1803               	skipnc
  5507  04DB  3E01               	addlw	1
  5508  04DC  1903               	skipnz
  5509  04DD  2CDF               	goto	u3353
  5510  04DE  07C1               	addwf	___flmul@prod+3,f
  5511  04DF                     u3353:
  5512  04DF  082C               	movf	___flmul@b+2,w
  5513  04E0  00B2               	movwf	??___flmul
  5514  04E1  0832               	movf	??___flmul,w
  5515  04E2  00F3               	movwf	__Umul8_16@multiplicand
  5516  04E3  082E               	movf	___flmul@a,w
  5517  04E4  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5518  04E9  0874               	movf	?__Umul8_16+1,w
  5519  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  5520  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  5521  04EC  00C3               	movwf	___flmul@temp+1
  5522  04ED  0873               	movf	?__Umul8_16,w
  5523  04EE  00C2               	movwf	___flmul@temp
  5524  04EF                     l3377:
  5525  04EF  0842               	movf	___flmul@temp,w
  5526  04F0  00B2               	movwf	??___flmul
  5527  04F1  01B3               	clrf	??___flmul+1
  5528  04F2  01B4               	clrf	??___flmul+2
  5529  04F3  01B5               	clrf	??___flmul+3
  5530  04F4  0832               	movf	??___flmul,w
  5531  04F5  07B9               	addwf	___flmul@grs,f
  5532  04F6  0833               	movf	??___flmul+1,w
  5533  04F7  1103               	clrz
  5534  04F8  1803               	skipnc
  5535  04F9  3E01               	addlw	1
  5536  04FA  1903               	skipnz
  5537  04FB  2CFD               	goto	u3361
  5538  04FC  07BA               	addwf	___flmul@grs+1,f
  5539  04FD                     u3361:
  5540  04FD  0834               	movf	??___flmul+2,w
  5541  04FE  1103               	clrz
  5542  04FF  1803               	skipnc
  5543  0500  3E01               	addlw	1
  5544  0501  1903               	skipnz
  5545  0502  2D04               	goto	u3362
  5546  0503  07BB               	addwf	___flmul@grs+2,f
  5547  0504                     u3362:
  5548  0504  0835               	movf	??___flmul+3,w
  5549  0505  1103               	clrz
  5550  0506  1803               	skipnc
  5551  0507  3E01               	addlw	1
  5552  0508  1903               	skipnz
  5553  0509  2D0B               	goto	u3363
  5554  050A  07BC               	addwf	___flmul@grs+3,f
  5555  050B                     u3363:
  5556  050B                     l3379:
  5557  050B  0843               	movf	___flmul@temp+1,w
  5558  050C  00B2               	movwf	??___flmul
  5559  050D  01B3               	clrf	??___flmul+1
  5560  050E  01B4               	clrf	??___flmul+2
  5561  050F  01B5               	clrf	??___flmul+3
  5562  0510  0832               	movf	??___flmul,w
  5563  0511  07BE               	addwf	___flmul@prod,f
  5564  0512  0833               	movf	??___flmul+1,w
  5565  0513  1103               	clrz
  5566  0514  1803               	skipnc
  5567  0515  3E01               	addlw	1
  5568  0516  1903               	skipnz
  5569  0517  2D19               	goto	u3371
  5570  0518  07BF               	addwf	___flmul@prod+1,f
  5571  0519                     u3371:
  5572  0519  0834               	movf	??___flmul+2,w
  5573  051A  1103               	clrz
  5574  051B  1803               	skipnc
  5575  051C  3E01               	addlw	1
  5576  051D  1903               	skipnz
  5577  051E  2D20               	goto	u3372
  5578  051F  07C0               	addwf	___flmul@prod+2,f
  5579  0520                     u3372:
  5580  0520  0835               	movf	??___flmul+3,w
  5581  0521  1103               	clrz
  5582  0522  1803               	skipnc
  5583  0523  3E01               	addlw	1
  5584  0524  1903               	skipnz
  5585  0525  2D27               	goto	u3373
  5586  0526  07C1               	addwf	___flmul@prod+3,f
  5587  0527                     u3373:
  5588  0527                     l3381:
  5589  0527  3008               	movlw	8
  5590  0528  00B2               	movwf	??___flmul
  5591  0529                     u3385:
  5592  0529  1003               	clrc
  5593  052A  0DB9               	rlf	___flmul@grs,f
  5594  052B  0DBA               	rlf	___flmul@grs+1,f
  5595  052C  0DBB               	rlf	___flmul@grs+2,f
  5596  052D  0DBC               	rlf	___flmul@grs+3,f
  5597  052E  0BB2               	decfsz	??___flmul,f
  5598  052F  2D29               	goto	u3385
  5599  0530                     l3383:
  5600  0530  082B               	movf	___flmul@b+1,w
  5601  0531  00B2               	movwf	??___flmul
  5602  0532  0832               	movf	??___flmul,w
  5603  0533  00F3               	movwf	__Umul8_16@multiplicand
  5604  0534  082E               	movf	___flmul@a,w
  5605  0535  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5606  053A  0874               	movf	?__Umul8_16+1,w
  5607  053B  1283               	bcf	3,5	;RP0=0, select bank0
  5608  053C  1303               	bcf	3,6	;RP1=0, select bank0
  5609  053D  00C3               	movwf	___flmul@temp+1
  5610  053E  0873               	movf	?__Umul8_16,w
  5611  053F  00C2               	movwf	___flmul@temp
  5612  0540                     l3385:
  5613  0540  0842               	movf	___flmul@temp,w
  5614  0541  00B2               	movwf	??___flmul
  5615  0542  0843               	movf	___flmul@temp+1,w
  5616  0543  00B3               	movwf	??___flmul+1
  5617  0544  01B4               	clrf	??___flmul+2
  5618  0545  01B5               	clrf	??___flmul+3
  5619  0546  0832               	movf	??___flmul,w
  5620  0547  07B9               	addwf	___flmul@grs,f
  5621  0548  0833               	movf	??___flmul+1,w
  5622  0549  1103               	clrz
  5623  054A  1803               	skipnc
  5624  054B  3E01               	addlw	1
  5625  054C  1903               	skipnz
  5626  054D  2D4F               	goto	u3391
  5627  054E  07BA               	addwf	___flmul@grs+1,f
  5628  054F                     u3391:
  5629  054F  0834               	movf	??___flmul+2,w
  5630  0550  1103               	clrz
  5631  0551  1803               	skipnc
  5632  0552  3E01               	addlw	1
  5633  0553  1903               	skipnz
  5634  0554  2D56               	goto	u3392
  5635  0555  07BB               	addwf	___flmul@grs+2,f
  5636  0556                     u3392:
  5637  0556  0835               	movf	??___flmul+3,w
  5638  0557  1103               	clrz
  5639  0558  1803               	skipnc
  5640  0559  3E01               	addlw	1
  5641  055A  1903               	skipnz
  5642  055B  2D5D               	goto	u3393
  5643  055C  07BC               	addwf	___flmul@grs+3,f
  5644  055D                     u3393:
  5645  055D                     l3387:
  5646  055D  082A               	movf	___flmul@b,w
  5647  055E  00B2               	movwf	??___flmul
  5648  055F  0832               	movf	??___flmul,w
  5649  0560  00F3               	movwf	__Umul8_16@multiplicand
  5650  0561  082F               	movf	___flmul@a+1,w
  5651  0562  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5652  0567  0874               	movf	?__Umul8_16+1,w
  5653  0568  1283               	bcf	3,5	;RP0=0, select bank0
  5654  0569  1303               	bcf	3,6	;RP1=0, select bank0
  5655  056A  00C3               	movwf	___flmul@temp+1
  5656  056B  0873               	movf	?__Umul8_16,w
  5657  056C  00C2               	movwf	___flmul@temp
  5658  056D                     l3389:
  5659  056D  0842               	movf	___flmul@temp,w
  5660  056E  00B2               	movwf	??___flmul
  5661  056F  0843               	movf	___flmul@temp+1,w
  5662  0570  00B3               	movwf	??___flmul+1
  5663  0571  01B4               	clrf	??___flmul+2
  5664  0572  01B5               	clrf	??___flmul+3
  5665  0573  0832               	movf	??___flmul,w
  5666  0574  07B9               	addwf	___flmul@grs,f
  5667  0575  0833               	movf	??___flmul+1,w
  5668  0576  1103               	clrz
  5669  0577  1803               	skipnc
  5670  0578  3E01               	addlw	1
  5671  0579  1903               	skipnz
  5672  057A  2D7C               	goto	u3401
  5673  057B  07BA               	addwf	___flmul@grs+1,f
  5674  057C                     u3401:
  5675  057C  0834               	movf	??___flmul+2,w
  5676  057D  1103               	clrz
  5677  057E  1803               	skipnc
  5678  057F  3E01               	addlw	1
  5679  0580  1903               	skipnz
  5680  0581  2D83               	goto	u3402
  5681  0582  07BB               	addwf	___flmul@grs+2,f
  5682  0583                     u3402:
  5683  0583  0835               	movf	??___flmul+3,w
  5684  0584  1103               	clrz
  5685  0585  1803               	skipnc
  5686  0586  3E01               	addlw	1
  5687  0587  1903               	skipnz
  5688  0588  2D8A               	goto	u3403
  5689  0589  07BC               	addwf	___flmul@grs+3,f
  5690  058A                     u3403:
  5691  058A                     l3391:
  5692  058A  3008               	movlw	8
  5693  058B  00B2               	movwf	??___flmul
  5694  058C                     u3415:
  5695  058C  1003               	clrc
  5696  058D  0DB9               	rlf	___flmul@grs,f
  5697  058E  0DBA               	rlf	___flmul@grs+1,f
  5698  058F  0DBB               	rlf	___flmul@grs+2,f
  5699  0590  0DBC               	rlf	___flmul@grs+3,f
  5700  0591  0BB2               	decfsz	??___flmul,f
  5701  0592  2D8C               	goto	u3415
  5702  0593  082A               	movf	___flmul@b,w
  5703  0594  00B2               	movwf	??___flmul
  5704  0595  0832               	movf	??___flmul,w
  5705  0596  00F3               	movwf	__Umul8_16@multiplicand
  5706  0597  082E               	movf	___flmul@a,w
  5707  0598  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5708  059D  0874               	movf	?__Umul8_16+1,w
  5709  059E  1283               	bcf	3,5	;RP0=0, select bank0
  5710  059F  1303               	bcf	3,6	;RP1=0, select bank0
  5711  05A0  00C3               	movwf	___flmul@temp+1
  5712  05A1  0873               	movf	?__Umul8_16,w
  5713  05A2  00C2               	movwf	___flmul@temp
  5714  05A3                     l3393:
  5715  05A3  0842               	movf	___flmul@temp,w
  5716  05A4  00B2               	movwf	??___flmul
  5717  05A5  0843               	movf	___flmul@temp+1,w
  5718  05A6  00B3               	movwf	??___flmul+1
  5719  05A7  01B4               	clrf	??___flmul+2
  5720  05A8  01B5               	clrf	??___flmul+3
  5721  05A9  0832               	movf	??___flmul,w
  5722  05AA  07B9               	addwf	___flmul@grs,f
  5723  05AB  0833               	movf	??___flmul+1,w
  5724  05AC  1103               	clrz
  5725  05AD  1803               	skipnc
  5726  05AE  3E01               	addlw	1
  5727  05AF  1903               	skipnz
  5728  05B0  2DB2               	goto	u3421
  5729  05B1  07BA               	addwf	___flmul@grs+1,f
  5730  05B2                     u3421:
  5731  05B2  0834               	movf	??___flmul+2,w
  5732  05B3  1103               	clrz
  5733  05B4  1803               	skipnc
  5734  05B5  3E01               	addlw	1
  5735  05B6  1903               	skipnz
  5736  05B7  2DB9               	goto	u3422
  5737  05B8  07BB               	addwf	___flmul@grs+2,f
  5738  05B9                     u3422:
  5739  05B9  0835               	movf	??___flmul+3,w
  5740  05BA  1103               	clrz
  5741  05BB  1803               	skipnc
  5742  05BC  3E01               	addlw	1
  5743  05BD  1903               	skipnz
  5744  05BE  2DC0               	goto	u3423
  5745  05BF  07BC               	addwf	___flmul@grs+3,f
  5746  05C0                     u3423:
  5747  05C0                     l3395:
  5748  05C0  082B               	movf	___flmul@b+1,w
  5749  05C1  00B2               	movwf	??___flmul
  5750  05C2  0832               	movf	??___flmul,w
  5751  05C3  00F3               	movwf	__Umul8_16@multiplicand
  5752  05C4  0830               	movf	___flmul@a+2,w
  5753  05C5  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5754  05CA  0874               	movf	?__Umul8_16+1,w
  5755  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  5756  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  5757  05CD  00C3               	movwf	___flmul@temp+1
  5758  05CE  0873               	movf	?__Umul8_16,w
  5759  05CF  00C2               	movwf	___flmul@temp
  5760  05D0  0842               	movf	___flmul@temp,w
  5761  05D1  00B2               	movwf	??___flmul
  5762  05D2  0843               	movf	___flmul@temp+1,w
  5763  05D3  00B3               	movwf	??___flmul+1
  5764  05D4  01B4               	clrf	??___flmul+2
  5765  05D5  01B5               	clrf	??___flmul+3
  5766  05D6  0832               	movf	??___flmul,w
  5767  05D7  07BE               	addwf	___flmul@prod,f
  5768  05D8  0833               	movf	??___flmul+1,w
  5769  05D9  1103               	clrz
  5770  05DA  1803               	skipnc
  5771  05DB  3E01               	addlw	1
  5772  05DC  1903               	skipnz
  5773  05DD  2DDF               	goto	u3431
  5774  05DE  07BF               	addwf	___flmul@prod+1,f
  5775  05DF                     u3431:
  5776  05DF  0834               	movf	??___flmul+2,w
  5777  05E0  1103               	clrz
  5778  05E1  1803               	skipnc
  5779  05E2  3E01               	addlw	1
  5780  05E3  1903               	skipnz
  5781  05E4  2DE6               	goto	u3432
  5782  05E5  07C0               	addwf	___flmul@prod+2,f
  5783  05E6                     u3432:
  5784  05E6  0835               	movf	??___flmul+3,w
  5785  05E7  1103               	clrz
  5786  05E8  1803               	skipnc
  5787  05E9  3E01               	addlw	1
  5788  05EA  1903               	skipnz
  5789  05EB  2DED               	goto	u3433
  5790  05EC  07C1               	addwf	___flmul@prod+3,f
  5791  05ED                     u3433:
  5792  05ED                     l3397:
  5793  05ED  082C               	movf	___flmul@b+2,w
  5794  05EE  00B2               	movwf	??___flmul
  5795  05EF  0832               	movf	??___flmul,w
  5796  05F0  00F3               	movwf	__Umul8_16@multiplicand
  5797  05F1  082F               	movf	___flmul@a+1,w
  5798  05F2  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5799  05F7  0874               	movf	?__Umul8_16+1,w
  5800  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  5801  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  5802  05FA  00C3               	movwf	___flmul@temp+1
  5803  05FB  0873               	movf	?__Umul8_16,w
  5804  05FC  00C2               	movwf	___flmul@temp
  5805  05FD                     l3399:
  5806  05FD  0842               	movf	___flmul@temp,w
  5807  05FE  00B2               	movwf	??___flmul
  5808  05FF  0843               	movf	___flmul@temp+1,w
  5809  0600  00B3               	movwf	??___flmul+1
  5810  0601  01B4               	clrf	??___flmul+2
  5811  0602  01B5               	clrf	??___flmul+3
  5812  0603  0832               	movf	??___flmul,w
  5813  0604  07BE               	addwf	___flmul@prod,f
  5814  0605  0833               	movf	??___flmul+1,w
  5815  0606  1103               	clrz
  5816  0607  1803               	skipnc
  5817  0608  3E01               	addlw	1
  5818  0609  1903               	skipnz
  5819  060A  2E0C               	goto	u3441
  5820  060B  07BF               	addwf	___flmul@prod+1,f
  5821  060C                     u3441:
  5822  060C  0834               	movf	??___flmul+2,w
  5823  060D  1103               	clrz
  5824  060E  1803               	skipnc
  5825  060F  3E01               	addlw	1
  5826  0610  1903               	skipnz
  5827  0611  2E13               	goto	u3442
  5828  0612  07C0               	addwf	___flmul@prod+2,f
  5829  0613                     u3442:
  5830  0613  0835               	movf	??___flmul+3,w
  5831  0614  1103               	clrz
  5832  0615  1803               	skipnc
  5833  0616  3E01               	addlw	1
  5834  0617  1903               	skipnz
  5835  0618  2E1A               	goto	u3443
  5836  0619  07C1               	addwf	___flmul@prod+3,f
  5837  061A                     u3443:
  5838  061A  082C               	movf	___flmul@b+2,w
  5839  061B  00B2               	movwf	??___flmul
  5840  061C  0832               	movf	??___flmul,w
  5841  061D  00F3               	movwf	__Umul8_16@multiplicand
  5842  061E  0830               	movf	___flmul@a+2,w
  5843  061F  160A  118A  2565  120A  118A  	fcall	__Umul8_16
  5844  0624  0874               	movf	?__Umul8_16+1,w
  5845  0625  1283               	bcf	3,5	;RP0=0, select bank0
  5846  0626  1303               	bcf	3,6	;RP1=0, select bank0
  5847  0627  00C3               	movwf	___flmul@temp+1
  5848  0628  0873               	movf	?__Umul8_16,w
  5849  0629  00C2               	movwf	___flmul@temp
  5850  062A                     l3401:
  5851  062A  0842               	movf	___flmul@temp,w
  5852  062B  00B2               	movwf	??___flmul
  5853  062C  0843               	movf	___flmul@temp+1,w
  5854  062D  00B3               	movwf	??___flmul+1
  5855  062E  01B4               	clrf	??___flmul+2
  5856  062F  01B5               	clrf	??___flmul+3
  5857  0630  3008               	movlw	8
  5858  0631                     u3455:
  5859  0631  1003               	clrc
  5860  0632  0DB2               	rlf	??___flmul,f
  5861  0633  0DB3               	rlf	??___flmul+1,f
  5862  0634  0DB4               	rlf	??___flmul+2,f
  5863  0635  0DB5               	rlf	??___flmul+3,f
  5864  0636                     u3450:
  5865  0636  3EFF               	addlw	-1
  5866  0637  1D03               	skipz
  5867  0638  2E31               	goto	u3455
  5868  0639  0832               	movf	??___flmul,w
  5869  063A  07BE               	addwf	___flmul@prod,f
  5870  063B  0833               	movf	??___flmul+1,w
  5871  063C  1103               	clrz
  5872  063D  1803               	skipnc
  5873  063E  3E01               	addlw	1
  5874  063F  1903               	skipnz
  5875  0640  2E42               	goto	u3461
  5876  0641  07BF               	addwf	___flmul@prod+1,f
  5877  0642                     u3461:
  5878  0642  0834               	movf	??___flmul+2,w
  5879  0643  1103               	clrz
  5880  0644  1803               	skipnc
  5881  0645  3E01               	addlw	1
  5882  0646  1903               	skipnz
  5883  0647  2E49               	goto	u3462
  5884  0648  07C0               	addwf	___flmul@prod+2,f
  5885  0649                     u3462:
  5886  0649  0835               	movf	??___flmul+3,w
  5887  064A  1103               	clrz
  5888  064B  1803               	skipnc
  5889  064C  3E01               	addlw	1
  5890  064D  1903               	skipnz
  5891  064E  2E50               	goto	u3463
  5892  064F  07C1               	addwf	___flmul@prod+3,f
  5893  0650                     u3463:
  5894  0650                     l3403:
  5895  0650  0839               	movf	___flmul@grs,w
  5896  0651  00B2               	movwf	??___flmul
  5897  0652  083A               	movf	___flmul@grs+1,w
  5898  0653  00B3               	movwf	??___flmul+1
  5899  0654  083B               	movf	___flmul@grs+2,w
  5900  0655  00B4               	movwf	??___flmul+2
  5901  0656  083C               	movf	___flmul@grs+3,w
  5902  0657  00B5               	movwf	??___flmul+3
  5903  0658  3018               	movlw	24
  5904  0659                     u3475:
  5905  0659  1003               	clrc
  5906  065A  0CB5               	rrf	??___flmul+3,f
  5907  065B  0CB4               	rrf	??___flmul+2,f
  5908  065C  0CB3               	rrf	??___flmul+1,f
  5909  065D  0CB2               	rrf	??___flmul,f
  5910  065E                     u3470:
  5911  065E  3EFF               	addlw	-1
  5912  065F  1D03               	skipz
  5913  0660  2E59               	goto	u3475
  5914  0661  0832               	movf	??___flmul,w
  5915  0662  07BE               	addwf	___flmul@prod,f
  5916  0663  0833               	movf	??___flmul+1,w
  5917  0664  1103               	clrz
  5918  0665  1803               	skipnc
  5919  0666  3E01               	addlw	1
  5920  0667  1903               	skipnz
  5921  0668  2E6A               	goto	u3481
  5922  0669  07BF               	addwf	___flmul@prod+1,f
  5923  066A                     u3481:
  5924  066A  0834               	movf	??___flmul+2,w
  5925  066B  1103               	clrz
  5926  066C  1803               	skipnc
  5927  066D  3E01               	addlw	1
  5928  066E  1903               	skipnz
  5929  066F  2E71               	goto	u3482
  5930  0670  07C0               	addwf	___flmul@prod+2,f
  5931  0671                     u3482:
  5932  0671  0835               	movf	??___flmul+3,w
  5933  0672  1103               	clrz
  5934  0673  1803               	skipnc
  5935  0674  3E01               	addlw	1
  5936  0675  1903               	skipnz
  5937  0676  2E78               	goto	u3483
  5938  0677  07C1               	addwf	___flmul@prod+3,f
  5939  0678                     u3483:
  5940  0678                     l3405:
  5941  0678  3008               	movlw	8
  5942  0679  00B2               	movwf	??___flmul
  5943  067A                     u3495:
  5944  067A  1003               	clrc
  5945  067B  0DB9               	rlf	___flmul@grs,f
  5946  067C  0DBA               	rlf	___flmul@grs+1,f
  5947  067D  0DBB               	rlf	___flmul@grs+2,f
  5948  067E  0DBC               	rlf	___flmul@grs+3,f
  5949  067F  0BB2               	decfsz	??___flmul,f
  5950  0680  2E7A               	goto	u3495
  5951  0681                     l3407:
  5952  0681  083D               	movf	___flmul@bexp,w
  5953  0682  0738               	addwf	___flmul@aexp,w
  5954  0683  00B2               	movwf	??___flmul
  5955  0684  01B3               	clrf	??___flmul+1
  5956  0685  0DB3               	rlf	??___flmul+1,f
  5957  0686  0832               	movf	??___flmul,w
  5958  0687  3E82               	addlw	130
  5959  0688  00C2               	movwf	___flmul@temp
  5960  0689  0833               	movf	??___flmul+1,w
  5961  068A  1803               	skipnc
  5962  068B  3E01               	addlw	1
  5963  068C  3EFF               	addlw	255
  5964  068D  00C3               	movwf	___flmul@temp+1
  5965  068E  2EAC               	goto	l3419
  5966  068F                     l3409:
  5967  068F  3001               	movlw	1
  5968  0690  00B2               	movwf	??___flmul
  5969  0691                     u3505:
  5970  0691  1003               	clrc
  5971  0692  0DBE               	rlf	___flmul@prod,f
  5972  0693  0DBF               	rlf	___flmul@prod+1,f
  5973  0694  0DC0               	rlf	___flmul@prod+2,f
  5974  0695  0DC1               	rlf	___flmul@prod+3,f
  5975  0696  0BB2               	decfsz	??___flmul,f
  5976  0697  2E91               	goto	u3505
  5977  0698                     l3411:
  5978  0698  1FBC               	btfss	___flmul@grs+3,7
  5979  0699  2E9B               	goto	u3511
  5980  069A  2E9C               	goto	u3510
  5981  069B                     u3511:
  5982  069B  2E9D               	goto	l3415
  5983  069C                     u3510:
  5984  069C                     l3413:
  5985  069C  143E               	bsf	___flmul@prod,0
  5986  069D                     l3415:
  5987  069D  3001               	movlw	1
  5988  069E  00B2               	movwf	??___flmul
  5989  069F                     u3525:
  5990  069F  1003               	clrc
  5991  06A0  0DB9               	rlf	___flmul@grs,f
  5992  06A1  0DBA               	rlf	___flmul@grs+1,f
  5993  06A2  0DBB               	rlf	___flmul@grs+2,f
  5994  06A3  0DBC               	rlf	___flmul@grs+3,f
  5995  06A4  0BB2               	decfsz	??___flmul,f
  5996  06A5  2E9F               	goto	u3525
  5997  06A6                     l3417:
  5998  06A6  30FF               	movlw	255
  5999  06A7  07C2               	addwf	___flmul@temp,f
  6000  06A8  1803               	skipnc
  6001  06A9  0AC3               	incf	___flmul@temp+1,f
  6002  06AA  30FF               	movlw	255
  6003  06AB  07C3               	addwf	___flmul@temp+1,f
  6004  06AC                     l3419:
  6005  06AC  1FC0               	btfss	___flmul@prod+2,7
  6006  06AD  2EAF               	goto	u3531
  6007  06AE  2EB0               	goto	u3530
  6008  06AF                     u3531:
  6009  06AF  2E8F               	goto	l3409
  6010  06B0                     u3530:
  6011  06B0                     l3421:
  6012  06B0  01B8               	clrf	___flmul@aexp
  6013  06B1                     l3423:
  6014  06B1  1FBC               	btfss	___flmul@grs+3,7
  6015  06B2  2EB4               	goto	u3541
  6016  06B3  2EB5               	goto	u3540
  6017  06B4                     u3541:
  6018  06B4  2ED1               	goto	l3431
  6019  06B5                     u3540:
  6020  06B5                     l3425:
  6021  06B5  30FF               	movlw	255
  6022  06B6  0539               	andwf	___flmul@grs,w
  6023  06B7  00B2               	movwf	??___flmul
  6024  06B8  30FF               	movlw	255
  6025  06B9  053A               	andwf	___flmul@grs+1,w
  6026  06BA  00B3               	movwf	??___flmul+1
  6027  06BB  30FF               	movlw	255
  6028  06BC  053B               	andwf	___flmul@grs+2,w
  6029  06BD  00B4               	movwf	??___flmul+2
  6030  06BE  307F               	movlw	127
  6031  06BF  053C               	andwf	___flmul@grs+3,w
  6032  06C0  00B5               	movwf	??___flmul+3
  6033  06C1  0835               	movf	??___flmul+3,w
  6034  06C2  0434               	iorwf	??___flmul+2,w
  6035  06C3  0433               	iorwf	??___flmul+1,w
  6036  06C4  0432               	iorwf	??___flmul,w
  6037  06C5  1903               	skipnz
  6038  06C6  2EC8               	goto	u3551
  6039  06C7  2EC9               	goto	u3550
  6040  06C8                     u3551:
  6041  06C8  2ECC               	goto	l798
  6042  06C9                     u3550:
  6043  06C9                     l3427:
  6044  06C9  01B8               	clrf	___flmul@aexp
  6045  06CA  0AB8               	incf	___flmul@aexp,f
  6046  06CB  2ED1               	goto	l3431
  6047  06CC                     l798:
  6048  06CC  1C3E               	btfss	___flmul@prod,0
  6049  06CD  2ECF               	goto	u3561
  6050  06CE  2ED0               	goto	u3560
  6051  06CF                     u3561:
  6052  06CF  2ED1               	goto	l3431
  6053  06D0                     u3560:
  6054  06D0  2EC9               	goto	l3427
  6055  06D1                     l3431:
  6056  06D1  0838               	movf	___flmul@aexp,w
  6057  06D2  1903               	btfsc	3,2
  6058  06D3  2ED5               	goto	u3571
  6059  06D4  2ED6               	goto	u3570
  6060  06D5                     u3571:
  6061  06D5  2F07               	goto	l3441
  6062  06D6                     u3570:
  6063  06D6                     l3433:
  6064  06D6  3001               	movlw	1
  6065  06D7  07BE               	addwf	___flmul@prod,f
  6066  06D8  3000               	movlw	0
  6067  06D9  1803               	skipnc
  6068  06DA  3001               	movlw	1
  6069  06DB  07BF               	addwf	___flmul@prod+1,f
  6070  06DC  3000               	movlw	0
  6071  06DD  1803               	skipnc
  6072  06DE  3001               	movlw	1
  6073  06DF  07C0               	addwf	___flmul@prod+2,f
  6074  06E0  3000               	movlw	0
  6075  06E1  1803               	skipnc
  6076  06E2  3001               	movlw	1
  6077  06E3  07C1               	addwf	___flmul@prod+3,f
  6078  06E4                     l3435:
  6079  06E4  1C41               	btfss	___flmul@prod+3,0
  6080  06E5  2EE7               	goto	u3581
  6081  06E6  2EE8               	goto	u3580
  6082  06E7                     u3581:
  6083  06E7  2F07               	goto	l3441
  6084  06E8                     u3580:
  6085  06E8                     l3437:
  6086  06E8  083E               	movf	___flmul@prod,w
  6087  06E9  00B2               	movwf	??___flmul
  6088  06EA  083F               	movf	___flmul@prod+1,w
  6089  06EB  00B3               	movwf	??___flmul+1
  6090  06EC  0840               	movf	___flmul@prod+2,w
  6091  06ED  00B4               	movwf	??___flmul+2
  6092  06EE  0841               	movf	___flmul@prod+3,w
  6093  06EF  00B5               	movwf	??___flmul+3
  6094  06F0  3001               	movlw	1
  6095  06F1  00B6               	movwf	??___flmul+4
  6096  06F2                     u3595:
  6097  06F2  0D35               	rlf	??___flmul+3,w
  6098  06F3  0CB5               	rrf	??___flmul+3,f
  6099  06F4  0CB4               	rrf	??___flmul+2,f
  6100  06F5  0CB3               	rrf	??___flmul+1,f
  6101  06F6  0CB2               	rrf	??___flmul,f
  6102  06F7                     u3590:
  6103  06F7  0BB6               	decfsz	??___flmul+4,f
  6104  06F8  2EF2               	goto	u3595
  6105  06F9  0835               	movf	??___flmul+3,w
  6106  06FA  00C1               	movwf	___flmul@prod+3
  6107  06FB  0834               	movf	??___flmul+2,w
  6108  06FC  00C0               	movwf	___flmul@prod+2
  6109  06FD  0833               	movf	??___flmul+1,w
  6110  06FE  00BF               	movwf	___flmul@prod+1
  6111  06FF  0832               	movf	??___flmul,w
  6112  0700  00BE               	movwf	___flmul@prod
  6113  0701                     l3439:
  6114  0701  3001               	movlw	1
  6115  0702  07C2               	addwf	___flmul@temp,f
  6116  0703  1803               	skipnc
  6117  0704  0AC3               	incf	___flmul@temp+1,f
  6118  0705  3000               	movlw	0
  6119  0706  07C3               	addwf	___flmul@temp+1,f
  6120  0707                     l3441:
  6121  0707  0843               	movf	___flmul@temp+1,w
  6122  0708  3A80               	xorlw	128
  6123  0709  00FF               	movwf	btemp+1
  6124  070A  3080               	movlw	128
  6125  070B  027F               	subwf	btemp+1,w
  6126  070C  1D03               	skipz
  6127  070D  2F10               	goto	u3605
  6128  070E  30FF               	movlw	255
  6129  070F  0242               	subwf	___flmul@temp,w
  6130  0710                     u3605:
  6131  0710  1C03               	skipc
  6132  0711  2F13               	goto	u3601
  6133  0712  2F14               	goto	u3600
  6134  0713                     u3601:
  6135  0713  2F1F               	goto	l3445
  6136  0714                     u3600:
  6137  0714                     l3443:
  6138  0714  307F               	movlw	127
  6139  0715  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0716  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0717  00C1               	movwf	___flmul@prod+3
  6142  0718  3080               	movlw	128
  6143  0719  00C0               	movwf	___flmul@prod+2
  6144  071A  3000               	movlw	0
  6145  071B  00BF               	movwf	___flmul@prod+1
  6146  071C  3000               	movlw	0
  6147  071D  00BE               	movwf	___flmul@prod
  6148  071E  2F54               	goto	l804
  6149  071F                     l3445:
  6150  071F  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0720  1303               	bcf	3,6	;RP1=0, select bank0
  6152  0721  0843               	movf	___flmul@temp+1,w
  6153  0722  3A80               	xorlw	128
  6154  0723  00FF               	movwf	btemp+1
  6155  0724  3080               	movlw	128
  6156  0725  027F               	subwf	btemp+1,w
  6157  0726  1D03               	skipz
  6158  0727  2F2A               	goto	u3615
  6159  0728  3001               	movlw	1
  6160  0729  0242               	subwf	___flmul@temp,w
  6161  072A                     u3615:
  6162  072A  1803               	skipnc
  6163  072B  2F2D               	goto	u3611
  6164  072C  2F2E               	goto	u3610
  6165  072D                     u3611:
  6166  072D  2F3A               	goto	l3451
  6167  072E                     u3610:
  6168  072E                     l3447:
  6169  072E  3000               	movlw	0
  6170  072F  1283               	bcf	3,5	;RP0=0, select bank0
  6171  0730  1303               	bcf	3,6	;RP1=0, select bank0
  6172  0731  00C1               	movwf	___flmul@prod+3
  6173  0732  3000               	movlw	0
  6174  0733  00C0               	movwf	___flmul@prod+2
  6175  0734  3000               	movlw	0
  6176  0735  00BF               	movwf	___flmul@prod+1
  6177  0736  3000               	movlw	0
  6178  0737  00BE               	movwf	___flmul@prod
  6179  0738                     l3449:
  6180  0738  01B7               	clrf	___flmul@sign
  6181  0739  2F54               	goto	l804
  6182  073A                     l3451:
  6183  073A  1283               	bcf	3,5	;RP0=0, select bank0
  6184  073B  1303               	bcf	3,6	;RP1=0, select bank0
  6185  073C  0842               	movf	___flmul@temp,w
  6186  073D  00B2               	movwf	??___flmul
  6187  073E  0832               	movf	??___flmul,w
  6188  073F  00BD               	movwf	___flmul@bexp
  6189  0740  30FF               	movlw	255
  6190  0741  05BE               	andwf	___flmul@prod,f
  6191  0742  30FF               	movlw	255
  6192  0743  05BF               	andwf	___flmul@prod+1,f
  6193  0744  307F               	movlw	127
  6194  0745  05C0               	andwf	___flmul@prod+2,f
  6195  0746  3000               	movlw	0
  6196  0747  05C1               	andwf	___flmul@prod+3,f
  6197  0748                     l3453:
  6198  0748  1C3D               	btfss	___flmul@bexp,0
  6199  0749  2F4B               	goto	u3621
  6200  074A  2F4C               	goto	u3620
  6201  074B                     u3621:
  6202  074B  2F4D               	goto	l3457
  6203  074C                     u3620:
  6204  074C                     l3455:
  6205  074C  17C0               	bsf	___flmul@prod+2,7
  6206  074D                     l3457:
  6207  074D  083D               	movf	___flmul@bexp,w
  6208  074E  00B2               	movwf	??___flmul
  6209  074F  1003               	clrc
  6210  0750  0C32               	rrf	??___flmul,w
  6211  0751  00B3               	movwf	??___flmul+1
  6212  0752  0833               	movf	??___flmul+1,w
  6213  0753  00C1               	movwf	___flmul@prod+3
  6214  0754                     l804:
  6215  0754  0837               	movf	___flmul@sign,w
  6216  0755  00B2               	movwf	??___flmul
  6217  0756  0832               	movf	??___flmul,w
  6218  0757  04C1               	iorwf	___flmul@prod+3,f
  6219  0758                     l3459:
  6220  0758  0841               	movf	___flmul@prod+3,w
  6221  0759  00AD               	movwf	?___flmul+3
  6222  075A  0840               	movf	___flmul@prod+2,w
  6223  075B  00AC               	movwf	?___flmul+2
  6224  075C  083F               	movf	___flmul@prod+1,w
  6225  075D  00AB               	movwf	?___flmul+1
  6226  075E  083E               	movf	___flmul@prod,w
  6227  075F  00AA               	movwf	?___flmul
  6228  0760                     l792:
  6229  0760  0008               	return
  6230  0761                     __end_of___flmul:
  6231                           
  6232                           	psect	text11
  6233  1565                     __ptext11:	
  6234 ;; *************** function __Umul8_16 *****************
  6235 ;; Defined at:
  6236 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  multiplier      1    wreg     unsigned char 
  6239 ;;  multiplicand    1    3[COMMON] unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6242 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6243 ;;  product         2    0[BANK0 ] unsigned int 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  2    3[COMMON] unsigned int 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         2       0       0       0       0
  6254 ;;      Locals:         0       5       0       0       0
  6255 ;;      Temps:          2       0       0       0       0
  6256 ;;      Totals:         4       5       0       0       0
  6257 ;;Total ram usage:        9 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 1
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		___flmul
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267  1565                     __Umul8_16:	
  6268                           ;psect for function __Umul8_16
  6269                           
  6270                           
  6271                           ;incstack = 0
  6272                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6273                           ;__Umul8_16@multiplier stored from wreg
  6274  1565  1283               	bcf	3,5	;RP0=0, select bank0
  6275  1566  1303               	bcf	3,6	;RP1=0, select bank0
  6276  1567  00A4               	movwf	__Umul8_16@multiplier
  6277  1568                     l3131:
  6278  1568  01A0               	clrf	__Umul8_16@product
  6279  1569  01A1               	clrf	__Umul8_16@product+1
  6280  156A                     l3133:
  6281  156A  0873               	movf	__Umul8_16@multiplicand,w
  6282  156B  00F5               	movwf	??__Umul8_16
  6283  156C  01F6               	clrf	??__Umul8_16+1
  6284  156D  0875               	movf	??__Umul8_16,w
  6285  156E  00A2               	movwf	__Umul8_16@word_mpld
  6286  156F  0876               	movf	??__Umul8_16+1,w
  6287  1570  00A3               	movwf	__Umul8_16@word_mpld+1
  6288  1571                     l3135:
  6289  1571  1C24               	btfss	__Umul8_16@multiplier,0
  6290  1572  2D74               	goto	u2881
  6291  1573  2D75               	goto	u2880
  6292  1574                     u2881:
  6293  1574  2D7B               	goto	l811
  6294  1575                     u2880:
  6295  1575                     l3137:
  6296  1575  0822               	movf	__Umul8_16@word_mpld,w
  6297  1576  07A0               	addwf	__Umul8_16@product,f
  6298  1577  1803               	skipnc
  6299  1578  0AA1               	incf	__Umul8_16@product+1,f
  6300  1579  0823               	movf	__Umul8_16@word_mpld+1,w
  6301  157A  07A1               	addwf	__Umul8_16@product+1,f
  6302  157B                     l811:
  6303  157B  3001               	movlw	1
  6304  157C                     u2895:
  6305  157C  1003               	clrc
  6306  157D  0DA2               	rlf	__Umul8_16@word_mpld,f
  6307  157E  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6308  157F  3EFF               	addlw	-1
  6309  1580  1D03               	skipz
  6310  1581  2D7C               	goto	u2895
  6311  1582  1003               	clrc
  6312  1583  0CA4               	rrf	__Umul8_16@multiplier,f
  6313  1584                     l3139:
  6314  1584  0824               	movf	__Umul8_16@multiplier,w
  6315  1585  1D03               	btfss	3,2
  6316  1586  2D88               	goto	u2901
  6317  1587  2D89               	goto	u2900
  6318  1588                     u2901:
  6319  1588  2D71               	goto	l3135
  6320  1589                     u2900:
  6321  1589                     l3141:
  6322  1589  0821               	movf	__Umul8_16@product+1,w
  6323  158A  00F4               	movwf	?__Umul8_16+1
  6324  158B  0820               	movf	__Umul8_16@product,w
  6325  158C  00F3               	movwf	?__Umul8_16
  6326  158D                     l813:
  6327  158D  0008               	return
  6328  158E                     __end_of__Umul8_16:
  6329                           
  6330                           	psect	text12
  6331  1675                     __ptext12:	
  6332 ;; *************** function ___awmod *****************
  6333 ;; Defined at:
  6334 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  divisor         2    3[COMMON] int 
  6337 ;;  dividend        2    5[COMMON] int 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  sign            1    1[BANK0 ] unsigned char 
  6340 ;;  counter         1    0[BANK0 ] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  2    3[COMMON] int 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6350 ;;      Params:         4       0       0       0       0
  6351 ;;      Locals:         0       2       0       0       0
  6352 ;;      Temps:          1       0       0       0       0
  6353 ;;      Totals:         5       2       0       0       0
  6354 ;;Total ram usage:        7 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_run_program
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364  1675                     ___awmod:	
  6365                           ;psect for function ___awmod
  6366                           
  6367  1675                     l3249:	
  6368                           ;incstack = 0
  6369                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6370                           
  6371  1675  1283               	bcf	3,5	;RP0=0, select bank0
  6372  1676  1303               	bcf	3,6	;RP1=0, select bank0
  6373  1677  01A1               	clrf	___awmod@sign
  6374  1678                     l3251:
  6375  1678  1FF6               	btfss	___awmod@dividend+1,7
  6376  1679  2E7B               	goto	u3071
  6377  167A  2E7C               	goto	u3070
  6378  167B                     u3071:
  6379  167B  2E83               	goto	l3257
  6380  167C                     u3070:
  6381  167C                     l3253:
  6382  167C  09F5               	comf	___awmod@dividend,f
  6383  167D  09F6               	comf	___awmod@dividend+1,f
  6384  167E  0AF5               	incf	___awmod@dividend,f
  6385  167F  1903               	skipnz
  6386  1680  0AF6               	incf	___awmod@dividend+1,f
  6387  1681                     l3255:
  6388  1681  01A1               	clrf	___awmod@sign
  6389  1682  0AA1               	incf	___awmod@sign,f
  6390  1683                     l3257:
  6391  1683  1FF4               	btfss	___awmod@divisor+1,7
  6392  1684  2E86               	goto	u3081
  6393  1685  2E87               	goto	u3080
  6394  1686                     u3081:
  6395  1686  2E8C               	goto	l3261
  6396  1687                     u3080:
  6397  1687                     l3259:
  6398  1687  09F3               	comf	___awmod@divisor,f
  6399  1688  09F4               	comf	___awmod@divisor+1,f
  6400  1689  0AF3               	incf	___awmod@divisor,f
  6401  168A  1903               	skipnz
  6402  168B  0AF4               	incf	___awmod@divisor+1,f
  6403  168C                     l3261:
  6404  168C  0873               	movf	___awmod@divisor,w
  6405  168D  0474               	iorwf	___awmod@divisor+1,w
  6406  168E  1903               	btfsc	3,2
  6407  168F  2E91               	goto	u3091
  6408  1690  2E92               	goto	u3090
  6409  1691                     u3091:
  6410  1691  2EC1               	goto	l3279
  6411  1692                     u3090:
  6412  1692                     l3263:
  6413  1692  01A0               	clrf	___awmod@counter
  6414  1693  0AA0               	incf	___awmod@counter,f
  6415  1694  2EA0               	goto	l3269
  6416  1695                     l3265:
  6417  1695  3001               	movlw	1
  6418  1696                     u3105:
  6419  1696  1003               	clrc
  6420  1697  0DF3               	rlf	___awmod@divisor,f
  6421  1698  0DF4               	rlf	___awmod@divisor+1,f
  6422  1699  3EFF               	addlw	-1
  6423  169A  1D03               	skipz
  6424  169B  2E96               	goto	u3105
  6425  169C                     l3267:
  6426  169C  3001               	movlw	1
  6427  169D  00F7               	movwf	??___awmod
  6428  169E  0877               	movf	??___awmod,w
  6429  169F  07A0               	addwf	___awmod@counter,f
  6430  16A0                     l3269:
  6431  16A0  1FF4               	btfss	___awmod@divisor+1,7
  6432  16A1  2EA3               	goto	u3111
  6433  16A2  2EA4               	goto	u3110
  6434  16A3                     u3111:
  6435  16A3  2E95               	goto	l3265
  6436  16A4                     u3110:
  6437  16A4                     l3271:
  6438  16A4  0874               	movf	___awmod@divisor+1,w
  6439  16A5  0276               	subwf	___awmod@dividend+1,w
  6440  16A6  1D03               	skipz
  6441  16A7  2EAA               	goto	u3125
  6442  16A8  0873               	movf	___awmod@divisor,w
  6443  16A9  0275               	subwf	___awmod@dividend,w
  6444  16AA                     u3125:
  6445  16AA  1C03               	skipc
  6446  16AB  2EAD               	goto	u3121
  6447  16AC  2EAE               	goto	u3120
  6448  16AD                     u3121:
  6449  16AD  2EB4               	goto	l3275
  6450  16AE                     u3120:
  6451  16AE                     l3273:
  6452  16AE  0873               	movf	___awmod@divisor,w
  6453  16AF  02F5               	subwf	___awmod@dividend,f
  6454  16B0  0874               	movf	___awmod@divisor+1,w
  6455  16B1  1C03               	skipc
  6456  16B2  03F6               	decf	___awmod@dividend+1,f
  6457  16B3  02F6               	subwf	___awmod@dividend+1,f
  6458  16B4                     l3275:
  6459  16B4  3001               	movlw	1
  6460  16B5                     u3135:
  6461  16B5  1003               	clrc
  6462  16B6  0CF4               	rrf	___awmod@divisor+1,f
  6463  16B7  0CF3               	rrf	___awmod@divisor,f
  6464  16B8  3EFF               	addlw	-1
  6465  16B9  1D03               	skipz
  6466  16BA  2EB5               	goto	u3135
  6467  16BB                     l3277:
  6468  16BB  3001               	movlw	1
  6469  16BC  02A0               	subwf	___awmod@counter,f
  6470  16BD  1D03               	btfss	3,2
  6471  16BE  2EC0               	goto	u3141
  6472  16BF  2EC1               	goto	u3140
  6473  16C0                     u3141:
  6474  16C0  2EA4               	goto	l3271
  6475  16C1                     u3140:
  6476  16C1                     l3279:
  6477  16C1  0821               	movf	___awmod@sign,w
  6478  16C2  1903               	btfsc	3,2
  6479  16C3  2EC5               	goto	u3151
  6480  16C4  2EC6               	goto	u3150
  6481  16C5                     u3151:
  6482  16C5  2ECB               	goto	l3283
  6483  16C6                     u3150:
  6484  16C6                     l3281:
  6485  16C6  09F5               	comf	___awmod@dividend,f
  6486  16C7  09F6               	comf	___awmod@dividend+1,f
  6487  16C8  0AF5               	incf	___awmod@dividend,f
  6488  16C9  1903               	skipnz
  6489  16CA  0AF6               	incf	___awmod@dividend+1,f
  6490  16CB                     l3283:
  6491  16CB  0876               	movf	___awmod@dividend+1,w
  6492  16CC  00F4               	movwf	?___awmod+1
  6493  16CD  0875               	movf	___awmod@dividend,w
  6494  16CE  00F3               	movwf	?___awmod
  6495  16CF                     l569:
  6496  16CF  0008               	return
  6497  16D0                     __end_of___awmod:
  6498                           
  6499                           	psect	text13
  6500  1797                     __ptext13:	
  6501 ;; *************** function ___awdiv *****************
  6502 ;; Defined at:
  6503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  divisor         2    3[COMMON] int 
  6506 ;;  dividend        2    5[COMMON] int 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  quotient        2    2[BANK0 ] int 
  6509 ;;  sign            1    1[BANK0 ] unsigned char 
  6510 ;;  counter         1    0[BANK0 ] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    3[COMMON] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6520 ;;      Params:         4       0       0       0       0
  6521 ;;      Locals:         0       4       0       0       0
  6522 ;;      Temps:          1       0       0       0       0
  6523 ;;      Totals:         5       4       0       0       0
  6524 ;;Total ram usage:        9 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_run_program
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534  1797                     ___awdiv:	
  6535                           ;psect for function ___awdiv
  6536                           
  6537  1797                     l3205:	
  6538                           ;incstack = 0
  6539                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6540                           
  6541  1797  1283               	bcf	3,5	;RP0=0, select bank0
  6542  1798  1303               	bcf	3,6	;RP1=0, select bank0
  6543  1799  01A1               	clrf	___awdiv@sign
  6544  179A                     l3207:
  6545  179A  1FF4               	btfss	___awdiv@divisor+1,7
  6546  179B  2F9D               	goto	u2971
  6547  179C  2F9E               	goto	u2970
  6548  179D                     u2971:
  6549  179D  2FA5               	goto	l3213
  6550  179E                     u2970:
  6551  179E                     l3209:
  6552  179E  09F3               	comf	___awdiv@divisor,f
  6553  179F  09F4               	comf	___awdiv@divisor+1,f
  6554  17A0  0AF3               	incf	___awdiv@divisor,f
  6555  17A1  1903               	skipnz
  6556  17A2  0AF4               	incf	___awdiv@divisor+1,f
  6557  17A3                     l3211:
  6558  17A3  01A1               	clrf	___awdiv@sign
  6559  17A4  0AA1               	incf	___awdiv@sign,f
  6560  17A5                     l3213:
  6561  17A5  1FF6               	btfss	___awdiv@dividend+1,7
  6562  17A6  2FA8               	goto	u2981
  6563  17A7  2FA9               	goto	u2980
  6564  17A8                     u2981:
  6565  17A8  2FB2               	goto	l3219
  6566  17A9                     u2980:
  6567  17A9                     l3215:
  6568  17A9  09F5               	comf	___awdiv@dividend,f
  6569  17AA  09F6               	comf	___awdiv@dividend+1,f
  6570  17AB  0AF5               	incf	___awdiv@dividend,f
  6571  17AC  1903               	skipnz
  6572  17AD  0AF6               	incf	___awdiv@dividend+1,f
  6573  17AE                     l3217:
  6574  17AE  3001               	movlw	1
  6575  17AF  00F7               	movwf	??___awdiv
  6576  17B0  0877               	movf	??___awdiv,w
  6577  17B1  06A1               	xorwf	___awdiv@sign,f
  6578  17B2                     l3219:
  6579  17B2  01A2               	clrf	___awdiv@quotient
  6580  17B3  01A3               	clrf	___awdiv@quotient+1
  6581  17B4                     l3221:
  6582  17B4  0873               	movf	___awdiv@divisor,w
  6583  17B5  0474               	iorwf	___awdiv@divisor+1,w
  6584  17B6  1903               	btfsc	3,2
  6585  17B7  2FB9               	goto	u2991
  6586  17B8  2FBA               	goto	u2990
  6587  17B9                     u2991:
  6588  17B9  2FF1               	goto	l3241
  6589  17BA                     u2990:
  6590  17BA                     l3223:
  6591  17BA  01A0               	clrf	___awdiv@counter
  6592  17BB  0AA0               	incf	___awdiv@counter,f
  6593  17BC  2FC8               	goto	l3229
  6594  17BD                     l3225:
  6595  17BD  3001               	movlw	1
  6596  17BE                     u3005:
  6597  17BE  1003               	clrc
  6598  17BF  0DF3               	rlf	___awdiv@divisor,f
  6599  17C0  0DF4               	rlf	___awdiv@divisor+1,f
  6600  17C1  3EFF               	addlw	-1
  6601  17C2  1D03               	skipz
  6602  17C3  2FBE               	goto	u3005
  6603  17C4                     l3227:
  6604  17C4  3001               	movlw	1
  6605  17C5  00F7               	movwf	??___awdiv
  6606  17C6  0877               	movf	??___awdiv,w
  6607  17C7  07A0               	addwf	___awdiv@counter,f
  6608  17C8                     l3229:
  6609  17C8  1FF4               	btfss	___awdiv@divisor+1,7
  6610  17C9  2FCB               	goto	u3011
  6611  17CA  2FCC               	goto	u3010
  6612  17CB                     u3011:
  6613  17CB  2FBD               	goto	l3225
  6614  17CC                     u3010:
  6615  17CC                     l3231:
  6616  17CC  3001               	movlw	1
  6617  17CD                     u3025:
  6618  17CD  1003               	clrc
  6619  17CE  0DA2               	rlf	___awdiv@quotient,f
  6620  17CF  0DA3               	rlf	___awdiv@quotient+1,f
  6621  17D0  3EFF               	addlw	-1
  6622  17D1  1D03               	skipz
  6623  17D2  2FCD               	goto	u3025
  6624  17D3  0874               	movf	___awdiv@divisor+1,w
  6625  17D4  0276               	subwf	___awdiv@dividend+1,w
  6626  17D5  1D03               	skipz
  6627  17D6  2FD9               	goto	u3035
  6628  17D7  0873               	movf	___awdiv@divisor,w
  6629  17D8  0275               	subwf	___awdiv@dividend,w
  6630  17D9                     u3035:
  6631  17D9  1C03               	skipc
  6632  17DA  2FDC               	goto	u3031
  6633  17DB  2FDD               	goto	u3030
  6634  17DC                     u3031:
  6635  17DC  2FE4               	goto	l3237
  6636  17DD                     u3030:
  6637  17DD                     l3233:
  6638  17DD  0873               	movf	___awdiv@divisor,w
  6639  17DE  02F5               	subwf	___awdiv@dividend,f
  6640  17DF  0874               	movf	___awdiv@divisor+1,w
  6641  17E0  1C03               	skipc
  6642  17E1  03F6               	decf	___awdiv@dividend+1,f
  6643  17E2  02F6               	subwf	___awdiv@dividend+1,f
  6644  17E3                     l3235:
  6645  17E3  1422               	bsf	___awdiv@quotient,0
  6646  17E4                     l3237:
  6647  17E4  3001               	movlw	1
  6648  17E5                     u3045:
  6649  17E5  1003               	clrc
  6650  17E6  0CF4               	rrf	___awdiv@divisor+1,f
  6651  17E7  0CF3               	rrf	___awdiv@divisor,f
  6652  17E8  3EFF               	addlw	-1
  6653  17E9  1D03               	skipz
  6654  17EA  2FE5               	goto	u3045
  6655  17EB                     l3239:
  6656  17EB  3001               	movlw	1
  6657  17EC  02A0               	subwf	___awdiv@counter,f
  6658  17ED  1D03               	btfss	3,2
  6659  17EE  2FF0               	goto	u3051
  6660  17EF  2FF1               	goto	u3050
  6661  17F0                     u3051:
  6662  17F0  2FCC               	goto	l3231
  6663  17F1                     u3050:
  6664  17F1                     l3241:
  6665  17F1  0821               	movf	___awdiv@sign,w
  6666  17F2  1903               	btfsc	3,2
  6667  17F3  2FF5               	goto	u3061
  6668  17F4  2FF6               	goto	u3060
  6669  17F5                     u3061:
  6670  17F5  2FFB               	goto	l3245
  6671  17F6                     u3060:
  6672  17F6                     l3243:
  6673  17F6  09A2               	comf	___awdiv@quotient,f
  6674  17F7  09A3               	comf	___awdiv@quotient+1,f
  6675  17F8  0AA2               	incf	___awdiv@quotient,f
  6676  17F9  1903               	skipnz
  6677  17FA  0AA3               	incf	___awdiv@quotient+1,f
  6678  17FB                     l3245:
  6679  17FB  0823               	movf	___awdiv@quotient+1,w
  6680  17FC  00F4               	movwf	?___awdiv+1
  6681  17FD  0822               	movf	___awdiv@quotient,w
  6682  17FE  00F3               	movwf	?___awdiv
  6683  17FF                     l556:
  6684  17FF  0008               	return
  6685  1800                     __end_of___awdiv:
  6686                           
  6687                           	psect	text14
  6688  1730                     __ptext14:	
  6689 ;; *************** function _read_digital_keypad *****************
  6690 ;; Defined at:
  6691 ;;		line 16 in file "digitalkeypad.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  mode            1    wreg     unsigned char 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  mode            1    4[COMMON] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      unsigned char 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         0       0       0       0       0
  6706 ;;      Locals:         1       0       0       0       0
  6707 ;;      Temps:          1       0       0       0       0
  6708 ;;      Totals:         2       0       0       0       0
  6709 ;;Total ram usage:        2 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719  1730                     _read_digital_keypad:	
  6720                           ;psect for function _read_digital_keypad
  6721                           
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  6725                           ;read_digital_keypad@mode stored from wreg
  6726  1730  00F4               	movwf	read_digital_keypad@mode
  6727  1731                     l3523:
  6728                           
  6729                           ;digitalkeypad.c: 16: unsigned char read_digital_keypad(unsigned char mode);digitalkeypa
      +                          d.c: 17: {;digitalkeypad.c: 18:     static unsigned int once=1;;digitalkeypad.c: 19:    
      +                           static unsigned char pre_key;;digitalkeypad.c: 20:     static unsigned char longpress;;
      +                          digitalkeypad.c: 21:     if(mode==0)
  6730  1731  0874               	movf	read_digital_keypad@mode,w
  6731  1732  1D03               	btfss	3,2
  6732  1733  2F35               	goto	u3771
  6733  1734  2F36               	goto	u3770
  6734  1735                     u3771:
  6735  1735  2F3B               	goto	l3531
  6736  1736                     u3770:
  6737  1736                     l3525:
  6738                           
  6739                           ;digitalkeypad.c: 22:         return (PORTB & 0x3F);
  6740  1736  1283               	bcf	3,5	;RP0=0, select bank0
  6741  1737  1303               	bcf	3,6	;RP1=0, select bank0
  6742  1738  0806               	movf	6,w	;volatile
  6743  1739  393F               	andlw	63
  6744  173A  2F96               	goto	l295
  6745  173B                     l3531:
  6746                           
  6747                           ;digitalkeypad.c: 24:     {;digitalkeypad.c: 25:        if(((PORTB & 0x3F)!=0x3F)&& once
      +                          )
  6748  173B  303F               	movlw	63
  6749  173C  1283               	bcf	3,5	;RP0=0, select bank0
  6750  173D  1303               	bcf	3,6	;RP1=0, select bank0
  6751  173E  0506               	andwf	6,w	;volatile
  6752  173F  00F3               	movwf	??_read_digital_keypad
  6753  1740  303F               	movlw	63
  6754  1741  0673               	xorwf	??_read_digital_keypad,w
  6755  1742  1903               	btfsc	3,2
  6756  1743  2F45               	goto	u3781
  6757  1744  2F46               	goto	u3780
  6758  1745                     u3781:
  6759  1745  2F55               	goto	l3539
  6760  1746                     u3780:
  6761  1746                     l3533:
  6762  1746  086A               	movf	read_digital_keypad@once,w
  6763  1747  046B               	iorwf	read_digital_keypad@once+1,w
  6764  1748  1903               	btfsc	3,2
  6765  1749  2F4B               	goto	u3791
  6766  174A  2F4C               	goto	u3790
  6767  174B                     u3791:
  6768  174B  2F55               	goto	l3539
  6769  174C                     u3790:
  6770  174C                     l3535:
  6771                           
  6772                           ;digitalkeypad.c: 26:        {;digitalkeypad.c: 27:            once=0;
  6773  174C  01EA               	clrf	read_digital_keypad@once
  6774  174D  01EB               	clrf	read_digital_keypad@once+1
  6775                           
  6776                           ;digitalkeypad.c: 28:            longpress=0;
  6777  174E  01E6               	clrf	read_digital_keypad@longpress
  6778  174F                     l3537:
  6779                           
  6780                           ;digitalkeypad.c: 29:            pre_key=PORTB & 0x3F;
  6781  174F  0806               	movf	6,w	;volatile
  6782  1750  393F               	andlw	63
  6783  1751  00F3               	movwf	??_read_digital_keypad
  6784  1752  0873               	movf	??_read_digital_keypad,w
  6785  1753  00E7               	movwf	read_digital_keypad@pre_key
  6786                           
  6787                           ;digitalkeypad.c: 30:        }
  6788  1754  2F95               	goto	l3567
  6789  1755                     l3539:
  6790  1755  086A               	movf	read_digital_keypad@once,w
  6791  1756  046B               	iorwf	read_digital_keypad@once+1,w
  6792  1757  1D03               	btfss	3,2
  6793  1758  2F5A               	goto	u3801
  6794  1759  2F5B               	goto	u3800
  6795  175A                     u3801:
  6796  175A  2F6D               	goto	l3547
  6797  175B                     u3800:
  6798  175B                     l3541:
  6799  175B  0806               	movf	6,w	;volatile
  6800  175C  393F               	andlw	63
  6801  175D  0667               	xorwf	read_digital_keypad@pre_key,w
  6802  175E  1D03               	skipz
  6803  175F  2F61               	goto	u3811
  6804  1760  2F62               	goto	u3810
  6805  1761                     u3811:
  6806  1761  2F6D               	goto	l3547
  6807  1762                     u3810:
  6808  1762                     l3543:
  6809  1762  3014               	movlw	20
  6810  1763  0266               	subwf	read_digital_keypad@longpress,w
  6811  1764  1803               	skipnc
  6812  1765  2F67               	goto	u3821
  6813  1766  2F68               	goto	u3820
  6814  1767                     u3821:
  6815  1767  2F6D               	goto	l3547
  6816  1768                     u3820:
  6817  1768                     l3545:
  6818                           
  6819                           ;digitalkeypad.c: 32:        {;digitalkeypad.c: 33:            longpress++;
  6820  1768  3001               	movlw	1
  6821  1769  00F3               	movwf	??_read_digital_keypad
  6822  176A  0873               	movf	??_read_digital_keypad,w
  6823  176B  07E6               	addwf	read_digital_keypad@longpress,f
  6824                           
  6825                           ;digitalkeypad.c: 34:        }
  6826  176C  2F95               	goto	l3567
  6827  176D                     l3547:
  6828  176D  3014               	movlw	20
  6829  176E  0666               	xorwf	read_digital_keypad@longpress,w
  6830  176F  1D03               	btfss	3,2
  6831  1770  2F72               	goto	u3831
  6832  1771  2F73               	goto	u3830
  6833  1772                     u3831:
  6834  1772  2F7A               	goto	l3557
  6835  1773                     u3830:
  6836  1773                     l3549:
  6837                           
  6838                           ;digitalkeypad.c: 36:        {;digitalkeypad.c: 37:            longpress++;
  6839  1773  3001               	movlw	1
  6840  1774  00F3               	movwf	??_read_digital_keypad
  6841  1775  0873               	movf	??_read_digital_keypad,w
  6842  1776  07E6               	addwf	read_digital_keypad@longpress,f
  6843  1777                     l3551:
  6844                           
  6845                           ;digitalkeypad.c: 38:            return 0x80|pre_key;
  6846  1777  0867               	movf	read_digital_keypad@pre_key,w
  6847  1778  3880               	iorlw	128
  6848  1779  2F96               	goto	l295
  6849  177A                     l3557:
  6850  177A  303F               	movlw	63
  6851  177B  0506               	andwf	6,w	;volatile
  6852  177C  00F3               	movwf	??_read_digital_keypad
  6853  177D  303F               	movlw	63
  6854  177E  0673               	xorwf	??_read_digital_keypad,w
  6855  177F  1D03               	btfss	3,2
  6856  1780  2F82               	goto	u3841
  6857  1781  2F83               	goto	u3840
  6858  1782                     u3841:
  6859  1782  2F95               	goto	l3567
  6860  1783                     u3840:
  6861  1783                     l3559:
  6862  1783  086A               	movf	read_digital_keypad@once,w
  6863  1784  046B               	iorwf	read_digital_keypad@once+1,w
  6864  1785  1D03               	btfss	3,2
  6865  1786  2F88               	goto	u3851
  6866  1787  2F89               	goto	u3850
  6867  1788                     u3851:
  6868  1788  2F95               	goto	l3567
  6869  1789                     u3850:
  6870  1789                     l3561:
  6871                           
  6872                           ;digitalkeypad.c: 41:        {;digitalkeypad.c: 42:            once=1;
  6873  1789  3001               	movlw	1
  6874  178A  00EA               	movwf	read_digital_keypad@once
  6875  178B  3000               	movlw	0
  6876  178C  00EB               	movwf	read_digital_keypad@once+1
  6877                           
  6878                           ;digitalkeypad.c: 43:            if(longpress < 20)
  6879  178D  3014               	movlw	20
  6880  178E  0266               	subwf	read_digital_keypad@longpress,w
  6881  178F  1803               	skipnc
  6882  1790  2F92               	goto	u3861
  6883  1791  2F93               	goto	u3860
  6884  1792                     u3861:
  6885  1792  2F95               	goto	l300
  6886  1793                     u3860:
  6887  1793                     l3563:
  6888                           
  6889                           ;digitalkeypad.c: 44:            {;digitalkeypad.c: 45:                return pre_key;
  6890  1793  0867               	movf	read_digital_keypad@pre_key,w
  6891  1794  2F96               	goto	l295
  6892  1795                     l300:
  6893  1795                     l3567:
  6894                           
  6895                           ;digitalkeypad.c: 49:     return 0x3F;
  6896  1795  303F               	movlw	63
  6897  1796                     l295:
  6898  1796  0008               	return
  6899  1797                     __end_of_read_digital_keypad:
  6900                           
  6901                           	psect	text15
  6902  16D0                     __ptext15:	
  6903 ;; *************** function _power_on_screen *****************
  6904 ;; Defined at:
  6905 ;;		line 102 in file "main.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  i               1   10[BANK0 ] unsigned char 
  6910 ;;  i               1    9[BANK0 ] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6920 ;;      Params:         0       0       0       0       0
  6921 ;;      Locals:         0       2       0       0       0
  6922 ;;      Temps:          0       3       0       0       0
  6923 ;;      Totals:         0       5       0       0       0
  6924 ;;Total ram usage:        5 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 3
  6927 ;; This function calls:
  6928 ;;		_clcd_print
  6929 ;;		_clcd_putch
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935  16D0                     _power_on_screen:	
  6936                           ;psect for function _power_on_screen
  6937                           
  6938  16D0                     l3571:	
  6939                           ;incstack = 0
  6940                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6941                           
  6942                           
  6943                           ;main.c: 104: }
  6944  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  6945  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  6946  16D2  01A9               	clrf	power_on_screen@i
  6947  16D3                     l3577:
  6948                           
  6949                           ;main.c: 105: void clear_screen(void);main.c: 106: {
  6950  16D3  0829               	movf	power_on_screen@i,w
  6951  16D4  3E80               	addlw	128
  6952  16D5  00A6               	movwf	??_power_on_screen
  6953  16D6  0826               	movf	??_power_on_screen,w
  6954  16D7  00A4               	movwf	clcd_putch@addr
  6955  16D8  302A               	movlw	42
  6956  16D9  160A  118A  2514  160A  118A  	fcall	_clcd_putch
  6957  16DE                     l3579:
  6958                           
  6959                           ;main.c: 107:     clcd_write(0x01,0);
  6960  16DE  3001               	movlw	1
  6961  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  6962  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  6963  16E1  00A6               	movwf	??_power_on_screen
  6964  16E2  0826               	movf	??_power_on_screen,w
  6965  16E3  07A9               	addwf	power_on_screen@i,f
  6966  16E4                     l3581:
  6967  16E4  3010               	movlw	16
  6968  16E5  0229               	subwf	power_on_screen@i,w
  6969  16E6  1C03               	skipc
  6970  16E7  2EE9               	goto	u3871
  6971  16E8  2EEA               	goto	u3870
  6972  16E9                     u3871:
  6973  16E9  2ED3               	goto	l3577
  6974  16EA                     u3870:
  6975  16EA                     l3583:
  6976                           
  6977                           ;main.c: 108:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6978  16EA  3023               	movlw	low (STR_26| (0+32768))
  6979  16EB  00A0               	movwf	clcd_print@str
  6980  16EC  3088               	movlw	high (STR_26| (0+32768))
  6981  16ED  00A1               	movwf	clcd_print@str+1
  6982  16EE  30C0               	movlw	192
  6983  16EF  00A6               	movwf	??_power_on_screen
  6984  16F0  0826               	movf	??_power_on_screen,w
  6985  16F1  00A2               	movwf	clcd_print@addr
  6986  16F2  160A  118A  25B9  160A  118A  	fcall	_clcd_print
  6987                           
  6988                           ;main.c: 109: }
  6989  16F7  3000               	movlw	low (STR_20| (0+32768))
  6990  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  6991  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  6992  16FA  00A0               	movwf	clcd_print@str
  6993  16FB  3088               	movlw	high (STR_20| (0+32768))
  6994  16FC  00A1               	movwf	clcd_print@str+1
  6995  16FD  3090               	movlw	144
  6996  16FE  00A6               	movwf	??_power_on_screen
  6997  16FF  0826               	movf	??_power_on_screen,w
  6998  1700  00A2               	movwf	clcd_print@addr
  6999  1701  160A  118A  25B9  160A  118A  	fcall	_clcd_print
  7000  1706                     l3585:
  7001                           
  7002                           ;main.c: 110: void washing_program_display(unsigned char key)
  7003  1706  1283               	bcf	3,5	;RP0=0, select bank0
  7004  1707  1303               	bcf	3,6	;RP1=0, select bank0
  7005  1708  01AA               	clrf	power_on_screen@i_152
  7006  1709                     l3591:
  7007                           
  7008                           ;main.c: 111: {;main.c: 112:     if(reset_mode == 0x10)
  7009  1709  082A               	movf	power_on_screen@i_152,w
  7010  170A  3ED0               	addlw	208
  7011  170B  00A6               	movwf	??_power_on_screen
  7012  170C  0826               	movf	??_power_on_screen,w
  7013  170D  00A4               	movwf	clcd_putch@addr
  7014  170E  302A               	movlw	42
  7015  170F  160A  118A  2514  160A  118A  	fcall	_clcd_putch
  7016  1714                     l3593:
  7017                           
  7018                           ;main.c: 113:     {
  7019  1714  3001               	movlw	1
  7020  1715  1283               	bcf	3,5	;RP0=0, select bank0
  7021  1716  1303               	bcf	3,6	;RP1=0, select bank0
  7022  1717  00A6               	movwf	??_power_on_screen
  7023  1718  0826               	movf	??_power_on_screen,w
  7024  1719  07AA               	addwf	power_on_screen@i_152,f
  7025  171A                     l3595:
  7026  171A  3010               	movlw	16
  7027  171B  022A               	subwf	power_on_screen@i_152,w
  7028  171C  1C03               	skipc
  7029  171D  2F1F               	goto	u3881
  7030  171E  2F20               	goto	u3880
  7031  171F                     u3881:
  7032  171F  2F09               	goto	l3591
  7033  1720                     u3880:
  7034  1720                     l3597:
  7035                           
  7036                           ;main.c: 114:         clear_screen();
  7037  1720  301A               	movlw	26
  7038  1721  1283               	bcf	3,5	;RP0=0, select bank0
  7039  1722  1303               	bcf	3,6	;RP1=0, select bank0
  7040  1723  00A8               	movwf	??_power_on_screen+2
  7041  1724  305E               	movlw	94
  7042  1725  00A7               	movwf	??_power_on_screen+1
  7043  1726  306D               	movlw	109
  7044  1727  00A6               	movwf	??_power_on_screen
  7045  1728                     u4267:
  7046  1728  0BA6               	decfsz	??_power_on_screen,f
  7047  1729  2F28               	goto	u4267
  7048  172A  0BA7               	decfsz	??_power_on_screen+1,f
  7049  172B  2F28               	goto	u4267
  7050  172C  0BA8               	decfsz	??_power_on_screen+2,f
  7051  172D  2F28               	goto	u4267
  7052  172E  2F2F               	nop2
  7053  172F                     l113:
  7054  172F  0008               	return
  7055  1730                     __end_of_power_on_screen:
  7056                           
  7057                           	psect	text16
  7058  1514                     __ptext16:	
  7059 ;; *************** function _clcd_putch *****************
  7060 ;; Defined at:
  7061 ;;		line 40 in file "clcd.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  data            1    wreg     const unsigned char 
  7064 ;;  addr            1    4[BANK0 ] unsigned char 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  data            1    5[BANK0 ] const unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7076 ;;      Params:         0       1       0       0       0
  7077 ;;      Locals:         0       1       0       0       0
  7078 ;;      Temps:          0       0       0       0       0
  7079 ;;      Totals:         0       2       0       0       0
  7080 ;;Total ram usage:        2 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 2
  7083 ;; This function calls:
  7084 ;;		_clcd_write
  7085 ;; This function is called by:
  7086 ;;		_power_on_screen
  7087 ;;		_washing_program_display
  7088 ;;		_water_level_display
  7089 ;;		_run_program
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093  1514                     _clcd_putch:	
  7094                           ;psect for function _clcd_putch
  7095                           
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  7099                           ;clcd_putch@data stored from wreg
  7100  1514  1283               	bcf	3,5	;RP0=0, select bank0
  7101  1515  1303               	bcf	3,6	;RP1=0, select bank0
  7102  1516  00A5               	movwf	clcd_putch@data
  7103  1517                     l3163:
  7104                           
  7105                           ;clcd.c: 40: void clcd_putch(const char data,unsigned char addr);clcd.c: 41: {;clcd.c: 4
      +                          2:     clcd_write(addr,0);
  7106  1517  01F3               	clrf	clcd_write@mode
  7107  1518  0824               	movf	clcd_putch@addr,w
  7108  1519  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7109                           
  7110                           ;clcd.c: 43:     clcd_write(data,1);
  7111  151E  01F3               	clrf	clcd_write@mode
  7112  151F  0AF3               	incf	clcd_write@mode,f
  7113  1520  1283               	bcf	3,5	;RP0=0, select bank0
  7114  1521  1303               	bcf	3,6	;RP1=0, select bank0
  7115  1522  0825               	movf	clcd_putch@data,w
  7116  1523  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7117  1528                     l254:
  7118  1528  0008               	return
  7119  1529                     __end_of_clcd_putch:
  7120                           
  7121                           	psect	text17
  7122  15B9                     __ptext17:	
  7123 ;; *************** function _clcd_print *****************
  7124 ;; Defined at:
  7125 ;;		line 45 in file "clcd.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  7128 ;;		 -> STR_49(15), STR_48(15), STR_47(5), STR_46(6), 
  7129 ;;		 -> STR_45(6), STR_44(6), STR_43(6), STR_42(6), 
  7130 ;;		 -> STR_41(5), STR_40(17), STR_39(8), STR_38(11), 
  7131 ;;		 -> STR_37(8), STR_36(7), STR_35(7), STR_34(17), 
  7132 ;;		 -> STR_33(7), STR_32(11), STR_31(13), STR_30(12), 
  7133 ;;		 -> STR_29(13), STR_28(17), STR_27(18), STR_26(17), 
  7134 ;;		 -> STR_25(15), STR_24(14), STR_23(12), STR_22(13), 
  7135 ;;		 -> STR_21(15), STR_20(18), STR_19(17), STR_18(16), 
  7136 ;;		 -> STR_17(4), STR_16(5), STR_15(7), STR_14(4), 
  7137 ;;		 -> STR_13(5), STR_12(11), STR_11(10), STR_10(9), 
  7138 ;;		 -> STR_9(10), STR_8(10), STR_7(8), STR_6(11), 
  7139 ;;		 -> STR_5(10), STR_4(7), STR_3(10), STR_2(6), 
  7140 ;;		 -> STR_1(6), 
  7141 ;;  addr            1    2[BANK0 ] unsigned char 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7153 ;;      Params:         0       3       0       0       0
  7154 ;;      Locals:         0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0
  7156 ;;      Totals:         0       3       0       0       0
  7157 ;;Total ram usage:        3 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; Hardware stack levels required when called: 2
  7160 ;; This function calls:
  7161 ;;		_clcd_write
  7162 ;; This function is called by:
  7163 ;;		_main
  7164 ;;		_power_on_screen
  7165 ;;		_washing_program_display
  7166 ;;		_water_level_display
  7167 ;;		_door_status_check
  7168 ;;		_run_program
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172  15B9                     _clcd_print:	
  7173                           ;psect for function _clcd_print
  7174                           
  7175  15B9                     l3101:	
  7176                           ;incstack = 0
  7177                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7178                           
  7179                           
  7180                           ;clcd.c: 45: void clcd_print(const char*str,unsigned char addr);clcd.c: 46: {;clcd.c: 47
      +                          :     clcd_write(addr,0);
  7181  15B9  01F3               	clrf	clcd_write@mode
  7182  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  7183  15BB  1303               	bcf	3,6	;RP1=0, select bank0
  7184  15BC  0822               	movf	clcd_print@addr,w
  7185  15BD  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7186                           
  7187                           ;clcd.c: 48:     while(*str!='\0')
  7188  15C2  2DDB               	goto	l3107
  7189  15C3                     l3103:
  7190                           
  7191                           ;clcd.c: 49:     {;clcd.c: 50:         clcd_write(*str,1);
  7192  15C3  01F3               	clrf	clcd_write@mode
  7193  15C4  0AF3               	incf	clcd_write@mode,f
  7194  15C5  0821               	movf	clcd_print@str+1,w
  7195  15C6  00FF               	movwf	btemp+1
  7196  15C7  0820               	movf	clcd_print@str,w
  7197  15C8  0084               	movwf	4
  7198  15C9  160A  118A  2000  160A  118A  	fcall	stringtab
  7199  15CE  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7200  15D3                     l3105:
  7201                           
  7202                           ;clcd.c: 51:         str++;
  7203  15D3  3001               	movlw	1
  7204  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  7205  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  7206  15D6  07A0               	addwf	clcd_print@str,f
  7207  15D7  1803               	skipnc
  7208  15D8  0AA1               	incf	clcd_print@str+1,f
  7209  15D9  3000               	movlw	0
  7210  15DA  07A1               	addwf	clcd_print@str+1,f
  7211  15DB                     l3107:
  7212                           
  7213                           ;clcd.c: 48:     while(*str!='\0')
  7214  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  7215  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  7216  15DD  0821               	movf	clcd_print@str+1,w
  7217  15DE  00FF               	movwf	btemp+1
  7218  15DF  0820               	movf	clcd_print@str,w
  7219  15E0  0084               	movwf	4
  7220  15E1  160A  118A  2000  160A  118A  	fcall	stringtab
  7221  15E6  3A00               	xorlw	0
  7222  15E7  1D03               	skipz
  7223  15E8  2DEA               	goto	u2871
  7224  15E9  2DEB               	goto	u2870
  7225  15EA                     u2871:
  7226  15EA  2DC3               	goto	l3103
  7227  15EB                     u2870:
  7228  15EB                     l260:
  7229  15EB  0008               	return
  7230  15EC                     __end_of_clcd_print:
  7231                           
  7232                           	psect	text18
  7233  1529                     __ptext18:	
  7234 ;; *************** function _init_config *****************
  7235 ;; Defined at:
  7236 ;;		line 16 in file "main.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0, pclath, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7250 ;;      Params:         0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0
  7253 ;;      Totals:         0       0       0       0       0
  7254 ;;Total ram usage:        0 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; Hardware stack levels required when called: 4
  7257 ;; This function calls:
  7258 ;;		_init_clcd
  7259 ;;		_init_digital_keypad
  7260 ;;		_init_timer2
  7261 ;; This function is called by:
  7262 ;;		_main
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266  1529                     _init_config:	
  7267                           ;psect for function _init_config
  7268                           
  7269  1529                     l3507:	
  7270                           ;incstack = 0
  7271                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  7272                           
  7273                           
  7274                           ;main.c: 18: void main(void)
  7275  1529  160A  118A  24DC  160A  118A  	fcall	_init_clcd
  7276                           
  7277                           ;main.c: 19: {
  7278  152E  160A  118A  24CE  160A  118A  	fcall	_init_digital_keypad
  7279                           
  7280                           ;main.c: 20:     unsigned char key;
  7281  1533  160A  118A  24E7  160A  118A  	fcall	_init_timer2
  7282  1538                     l3509:
  7283                           
  7284                           ;main.c: 21:     operation_mode = 0x01;
  7285  1538  170B               	bsf	11,6	;volatile
  7286  1539                     l3511:
  7287                           
  7288                           ;main.c: 22:     init_config();
  7289  1539  1683               	bsf	3,5	;RP0=1, select bank1
  7290  153A  1303               	bcf	3,6	;RP1=0, select bank1
  7291  153B  1087               	bcf	7,1	;volatile
  7292  153C                     l3513:
  7293                           
  7294                           ;main.c: 23:     clcd_print(" Press Key5 To ",(0x80+0));
  7295  153C  1107               	bcf	7,2	;volatile
  7296  153D                     l3515:
  7297                           
  7298                           ;main.c: 24:     clcd_print("    Power ON    ",(0xC0+0));
  7299  153D  178B               	bsf	11,7	;volatile
  7300  153E                     l3517:
  7301                           
  7302                           ;main.c: 25:     clcd_print(" Washing Machine ",(0x90+0));
  7303  153E  3006               	movlw	6
  7304  153F  009F               	movwf	31	;volatile
  7305  1540                     l3519:
  7306                           
  7307                           ;main.c: 26:     while(read_digital_keypad(1) != 0x2F)
  7308  1540  0185               	clrf	5	;volatile
  7309  1541                     l3521:
  7310                           
  7311                           ;main.c: 27:     {
  7312  1541  1283               	bcf	3,5	;RP0=0, select bank0
  7313  1542  1303               	bcf	3,6	;RP1=0, select bank0
  7314  1543  0185               	clrf	5	;volatile
  7315  1544                     l77:
  7316  1544  0008               	return
  7317  1545                     __end_of_init_config:
  7318                           
  7319                           	psect	text19
  7320  14E7                     __ptext19:	
  7321 ;; *************** function _init_timer2 *****************
  7322 ;; Defined at:
  7323 ;;		line 8 in file "timer.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7337 ;;      Params:         0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0
  7340 ;;      Totals:         0       0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_init_config
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351  14E7                     _init_timer2:	
  7352                           ;psect for function _init_timer2
  7353                           
  7354  14E7                     l3155:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _init_timer2: [wreg]
  7357                           
  7358                           
  7359                           ;timer.c: 10:     T2CKPS0=1;
  7360  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  7361  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  7362  14E9  1412               	bsf	18,0	;volatile
  7363                           
  7364                           ;timer.c: 11:     T2CKPS1=1;
  7365  14EA  1492               	bsf	18,1	;volatile
  7366  14EB                     l3157:
  7367                           
  7368                           ;timer.c: 12:     PR2=250;
  7369  14EB  30FA               	movlw	250
  7370  14EC  1683               	bsf	3,5	;RP0=1, select bank1
  7371  14ED  1303               	bcf	3,6	;RP1=0, select bank1
  7372  14EE  0092               	movwf	18	;volatile
  7373  14EF                     l3159:
  7374                           
  7375                           ;timer.c: 13:     TMR2IE=1;
  7376  14EF  148C               	bsf	12,1	;volatile
  7377  14F0                     l3161:
  7378                           
  7379                           ;timer.c: 14:     TMR2ON=0;
  7380  14F0  1283               	bcf	3,5	;RP0=0, select bank0
  7381  14F1  1303               	bcf	3,6	;RP1=0, select bank0
  7382  14F2  1112               	bcf	18,2	;volatile
  7383  14F3                     l317:
  7384  14F3  0008               	return
  7385  14F4                     __end_of_init_timer2:
  7386                           
  7387                           	psect	text20
  7388  14CE                     __ptext20:	
  7389 ;; *************** function _init_digital_keypad *****************
  7390 ;; Defined at:
  7391 ;;		line 12 in file "digitalkeypad.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;		None
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7405 ;;      Params:         0       0       0       0       0
  7406 ;;      Locals:         0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0
  7408 ;;      Totals:         0       0       0       0       0
  7409 ;;Total ram usage:        0 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 1
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_init_config
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419  14CE                     _init_digital_keypad:	
  7420                           ;psect for function _init_digital_keypad
  7421                           
  7422  14CE                     l3153:	
  7423                           ;incstack = 0
  7424                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  7425                           
  7426                           
  7427                           ;digitalkeypad.c: 14: TRISB=TRISB|0x3F;
  7428  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  7429  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  7430  14D0  0806               	movf	6,w	;volatile
  7431  14D1  383F               	iorlw	63
  7432  14D2  0086               	movwf	6	;volatile
  7433  14D3                     l285:
  7434  14D3  0008               	return
  7435  14D4                     __end_of_init_digital_keypad:
  7436                           
  7437                           	psect	text21
  7438  14DC                     __ptext21:	
  7439 ;; *************** function _init_clcd *****************
  7440 ;; Defined at:
  7441 ;;		line 24 in file "clcd.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, pclath, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7455 ;;      Params:         0       0       0       0       0
  7456 ;;      Locals:         0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0
  7458 ;;      Totals:         0       0       0       0       0
  7459 ;;Total ram usage:        0 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 3
  7462 ;; This function calls:
  7463 ;;		_init_display_controller
  7464 ;; This function is called by:
  7465 ;;		_init_config
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469  14DC                     _init_clcd:	
  7470                           ;psect for function _init_clcd
  7471                           
  7472  14DC                     l3145:	
  7473                           ;incstack = 0
  7474                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  7475                           
  7476                           
  7477                           ;clcd.c: 26:     TRISD=0x00;
  7478  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  7479  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  7480  14DE  0188               	clrf	8	;volatile
  7481  14DF                     l3147:
  7482                           
  7483                           ;clcd.c: 27:     TRISE2=0;
  7484  14DF  1109               	bcf	9,2	;volatile
  7485  14E0                     l3149:
  7486                           
  7487                           ;clcd.c: 28:     TRISE1=0;
  7488  14E0  1089               	bcf	9,1	;volatile
  7489  14E1                     l3151:
  7490                           
  7491                           ;clcd.c: 29:     init_display_controller();
  7492  14E1  160A  118A  2623  160A  118A  	fcall	_init_display_controller
  7493  14E6                     l248:
  7494  14E6  0008               	return
  7495  14E7                     __end_of_init_clcd:
  7496                           
  7497                           	psect	text22
  7498  1623                     __ptext22:	
  7499 ;; *************** function _init_display_controller *****************
  7500 ;; Defined at:
  7501 ;;		line 10 in file "clcd.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7515 ;;      Params:         0       0       0       0       0
  7516 ;;      Locals:         0       0       0       0       0
  7517 ;;      Temps:          0       2       0       0       0
  7518 ;;      Totals:         0       2       0       0       0
  7519 ;;Total ram usage:        2 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 2
  7522 ;; This function calls:
  7523 ;;		_clcd_write
  7524 ;; This function is called by:
  7525 ;;		_init_clcd
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529  1623                     _init_display_controller:	
  7530                           ;psect for function _init_display_controller
  7531                           
  7532  1623                     l3113:	
  7533                           ;incstack = 0
  7534                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  7535                           
  7536                           
  7537                           ;clcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  7538  1623  30C3               	movlw	195
  7539  1624  1283               	bcf	3,5	;RP0=0, select bank0
  7540  1625  1303               	bcf	3,6	;RP1=0, select bank0
  7541  1626  00A1               	movwf	??_init_display_controller+1
  7542  1627  30CC               	movlw	204
  7543  1628  00A0               	movwf	??_init_display_controller
  7544  1629                     u4277:
  7545  1629  0BA0               	decfsz	??_init_display_controller,f
  7546  162A  2E29               	goto	u4277
  7547  162B  0BA1               	decfsz	??_init_display_controller+1,f
  7548  162C  2E29               	goto	u4277
  7549  162D  0000               	nop
  7550  162E                     l3115:
  7551                           
  7552                           ;clcd.c: 13:     clcd_write(0x33,0);
  7553  162E  01F3               	clrf	clcd_write@mode
  7554  162F  3033               	movlw	51
  7555  1630  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7556  1635                     l3117:
  7557                           
  7558                           ;clcd.c: 14:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  7559  1635  301B               	movlw	27
  7560  1636  1283               	bcf	3,5	;RP0=0, select bank0
  7561  1637  1303               	bcf	3,6	;RP1=0, select bank0
  7562  1638  00A1               	movwf	??_init_display_controller+1
  7563  1639  309D               	movlw	157
  7564  163A  00A0               	movwf	??_init_display_controller
  7565  163B                     u4287:
  7566  163B  0BA0               	decfsz	??_init_display_controller,f
  7567  163C  2E3B               	goto	u4287
  7568  163D  0BA1               	decfsz	??_init_display_controller+1,f
  7569  163E  2E3B               	goto	u4287
  7570  163F  2E40               	nop2
  7571                           
  7572                           ;clcd.c: 15:     clcd_write(0x33,0);
  7573  1640  01F3               	clrf	clcd_write@mode
  7574  1641  3033               	movlw	51
  7575  1642  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7576  1647                     l3119:
  7577                           
  7578                           ;clcd.c: 16:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7579  1647  30A5               	movlw	165
  7580  1648  1283               	bcf	3,5	;RP0=0, select bank0
  7581  1649  1303               	bcf	3,6	;RP1=0, select bank0
  7582  164A  00A0               	movwf	??_init_display_controller
  7583  164B                     u4297:
  7584  164B  0BA0               	decfsz	??_init_display_controller,f
  7585  164C  2E4B               	goto	u4297
  7586  164D  2E4E               	nop2
  7587  164E                     l3121:
  7588                           
  7589                           ;clcd.c: 17:     clcd_write(0x33,0);
  7590  164E  01F3               	clrf	clcd_write@mode
  7591  164F  3033               	movlw	51
  7592  1650  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7593  1655                     l3123:
  7594                           
  7595                           ;clcd.c: 18:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7596  1655  2E56               	nop2	;2 cycle nop
  7597  1656  2E57               	nop2	;2 cycle nop
  7598  1657  0000               	nop
  7599  1658                     l3125:
  7600                           
  7601                           ;clcd.c: 19:     clcd_write(0x01,0);
  7602  1658  01F3               	clrf	clcd_write@mode
  7603  1659  3001               	movlw	1
  7604  165A  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7605  165F                     l3127:
  7606                           
  7607                           ;clcd.c: 20:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7608  165F  30A5               	movlw	165
  7609  1660  1283               	bcf	3,5	;RP0=0, select bank0
  7610  1661  1303               	bcf	3,6	;RP1=0, select bank0
  7611  1662  00A0               	movwf	??_init_display_controller
  7612  1663                     u4307:
  7613  1663  0BA0               	decfsz	??_init_display_controller,f
  7614  1664  2E63               	goto	u4307
  7615  1665  2E66               	nop2
  7616                           
  7617                           ;clcd.c: 21:     clcd_write(0x0C,0);
  7618  1666  01F3               	clrf	clcd_write@mode
  7619  1667  300C               	movlw	12
  7620  1668  160A  118A  2545  160A  118A  	fcall	_clcd_write
  7621  166D                     l3129:
  7622                           
  7623                           ;clcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7624  166D  30A5               	movlw	165
  7625  166E  1283               	bcf	3,5	;RP0=0, select bank0
  7626  166F  1303               	bcf	3,6	;RP1=0, select bank0
  7627  1670  00A0               	movwf	??_init_display_controller
  7628  1671                     u4317:
  7629  1671  0BA0               	decfsz	??_init_display_controller,f
  7630  1672  2E71               	goto	u4317
  7631  1673  2E74               	nop2
  7632  1674                     l245:
  7633  1674  0008               	return
  7634  1675                     __end_of_init_display_controller:
  7635                           
  7636                           	psect	text23
  7637  1545                     __ptext23:	
  7638 ;; *************** function _clcd_write *****************
  7639 ;; Defined at:
  7640 ;;		line 31 in file "clcd.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  byte            1    wreg     unsigned char 
  7643 ;;  mode            1    3[COMMON] unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  byte            1    6[COMMON] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7655 ;;      Params:         1       0       0       0       0
  7656 ;;      Locals:         1       0       0       0       0
  7657 ;;      Temps:          2       0       0       0       0
  7658 ;;      Totals:         4       0       0       0       0
  7659 ;;Total ram usage:        4 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_clear_screen
  7666 ;;		_init_display_controller
  7667 ;;		_clcd_putch
  7668 ;;		_clcd_print
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672  1545                     _clcd_write:	
  7673                           ;psect for function _clcd_write
  7674                           
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in _clcd_write: [wreg]
  7678                           ;clcd_write@byte stored from wreg
  7679  1545  00F6               	movwf	clcd_write@byte
  7680  1546                     l3093:
  7681                           
  7682                           ;clcd.c: 31: void clcd_write(unsigned char byte,unsigned char mode);clcd.c: 32: {;clcd.c
      +                          : 33:     RE2 = mode;
  7683  1546  1873               	btfsc	clcd_write@mode,0
  7684  1547  2D49               	goto	u2851
  7685  1548  2D4D               	goto	u2850
  7686  1549                     u2851:
  7687  1549  1283               	bcf	3,5	;RP0=0, select bank0
  7688  154A  1303               	bcf	3,6	;RP1=0, select bank0
  7689  154B  1509               	bsf	9,2	;volatile
  7690  154C  2D50               	goto	u2864
  7691  154D                     u2850:
  7692  154D  1283               	bcf	3,5	;RP0=0, select bank0
  7693  154E  1303               	bcf	3,6	;RP1=0, select bank0
  7694  154F  1109               	bcf	9,2	;volatile
  7695  1550                     u2864:
  7696  1550                     l3095:
  7697                           
  7698                           ;clcd.c: 34:     PORTD = byte;
  7699  1550  0876               	movf	clcd_write@byte,w
  7700  1551  0088               	movwf	8	;volatile
  7701  1552                     l3097:
  7702                           
  7703                           ;clcd.c: 35:     RE1=1;
  7704  1552  1489               	bsf	9,1	;volatile
  7705                           
  7706                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7707  1553  30A6               	movlw	166
  7708  1554  00F4               	movwf	??_clcd_write
  7709  1555                     u4327:
  7710  1555  0BF4               	decfsz	??_clcd_write,f
  7711  1556  2D55               	goto	u4327
  7712  1557  0000               	nop
  7713  1558                     l3099:
  7714                           
  7715                           ;clcd.c: 37:     RE1=0;
  7716  1558  1283               	bcf	3,5	;RP0=0, select bank0
  7717  1559  1303               	bcf	3,6	;RP1=0, select bank0
  7718  155A  1089               	bcf	9,1	;volatile
  7719                           
  7720                           ;clcd.c: 38:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  7721  155B  301B               	movlw	27
  7722  155C  00F5               	movwf	??_clcd_write+1
  7723  155D  309E               	movlw	158
  7724  155E  00F4               	movwf	??_clcd_write
  7725  155F                     u4337:
  7726  155F  0BF4               	decfsz	??_clcd_write,f
  7727  1560  2D5F               	goto	u4337
  7728  1561  0BF5               	decfsz	??_clcd_write+1,f
  7729  1562  2D5F               	goto	u4337
  7730  1563  0000               	nop
  7731  1564                     l251:
  7732  1564  0008               	return
  7733  1565                     __end_of_clcd_write:
  7734                           
  7735                           	psect	text24
  7736  15EC                     __ptext24:	
  7737 ;; *************** function _isr *****************
  7738 ;; Defined at:
  7739 ;;		line 11 in file "isr.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7753 ;;      Params:         0       0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0
  7755 ;;      Temps:          3       0       0       0       0
  7756 ;;      Totals:         3       0       0       0       0
  7757 ;;Total ram usage:        3 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		Interrupt level 1
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766  15EC                     _isr:	
  7767                           ;psect for function _isr
  7768                           
  7769  15EC                     i1l2903:
  7770                           
  7771                           ;isr.c: 14:     static unsigned int count=0;;isr.c: 15:     if(TMR2IF==1)
  7772  15EC  1283               	bcf	3,5	;RP0=0, select bank0
  7773  15ED  1303               	bcf	3,6	;RP1=0, select bank0
  7774  15EE  1C8C               	btfss	12,1	;volatile
  7775  15EF  2DF1               	goto	u280_21
  7776  15F0  2DF2               	goto	u280_20
  7777  15F1                     u280_21:
  7778  15F1  2E1C               	goto	i1l278
  7779  15F2                     u280_20:
  7780  15F2                     i1l2905:
  7781                           
  7782                           ;isr.c: 16:     {;isr.c: 17:         if(++count==1250)
  7783  15F2  3001               	movlw	1
  7784  15F3  07DA               	addwf	isr@count,f
  7785  15F4  1803               	skipnc
  7786  15F5  0ADB               	incf	isr@count+1,f
  7787  15F6  3000               	movlw	0
  7788  15F7  07DB               	addwf	isr@count+1,f
  7789  15F8  30E2               	movlw	226
  7790  15F9  065A               	xorwf	isr@count,w
  7791  15FA  3004               	movlw	4
  7792  15FB  1903               	skipnz
  7793  15FC  065B               	xorwf	isr@count+1,w
  7794  15FD  1D03               	btfss	3,2
  7795  15FE  2E00               	goto	u281_21
  7796  15FF  2E01               	goto	u281_20
  7797  1600                     u281_21:
  7798  1600  2E1B               	goto	i1l2921
  7799  1601                     u281_20:
  7800  1601                     i1l2907:
  7801                           
  7802                           ;isr.c: 18:         {;isr.c: 19:             count=0;
  7803  1601  01DA               	clrf	isr@count
  7804  1602  01DB               	clrf	isr@count+1
  7805  1603                     i1l2909:
  7806                           
  7807                           ;isr.c: 20:             if(sec>0)
  7808  1603  0878               	movf	_sec,w
  7809  1604  1903               	btfsc	3,2
  7810  1605  2E07               	goto	u282_21
  7811  1606  2E08               	goto	u282_20
  7812  1607                     u282_21:
  7813  1607  2E0B               	goto	i1l2913
  7814  1608                     u282_20:
  7815  1608                     i1l2911:
  7816                           
  7817                           ;isr.c: 21:                 sec--;
  7818  1608  3001               	movlw	1
  7819  1609  02F8               	subwf	_sec,f
  7820  160A  2E1B               	goto	i1l2921
  7821  160B                     i1l2913:
  7822  160B  0878               	movf	_sec,w
  7823  160C  1D03               	btfss	3,2
  7824  160D  2E0F               	goto	u283_21
  7825  160E  2E10               	goto	u283_20
  7826  160F                     u283_21:
  7827  160F  2E1B               	goto	i1l2921
  7828  1610                     u283_20:
  7829  1610                     i1l2915:
  7830  1610  0868               	movf	_min,w
  7831  1611  1903               	btfsc	3,2
  7832  1612  2E14               	goto	u284_21
  7833  1613  2E15               	goto	u284_20
  7834  1614                     u284_21:
  7835  1614  2E1B               	goto	i1l2921
  7836  1615                     u284_20:
  7837  1615                     i1l2917:
  7838                           
  7839                           ;isr.c: 23:             {;isr.c: 24:                 min--;
  7840  1615  3001               	movlw	1
  7841  1616  02E8               	subwf	_min,f
  7842  1617                     i1l2919:
  7843                           
  7844                           ;isr.c: 25:                 sec=59;
  7845  1617  303B               	movlw	59
  7846  1618  00F0               	movwf	??_isr
  7847  1619  0870               	movf	??_isr,w
  7848  161A  00F8               	movwf	_sec
  7849  161B                     i1l2921:
  7850                           
  7851                           ;isr.c: 28:         TMR2IF=0;
  7852  161B  108C               	bcf	12,1	;volatile
  7853  161C                     i1l278:
  7854  161C  0872               	movf	??_isr+2,w
  7855  161D  008A               	movwf	10
  7856  161E  0E71               	swapf	??_isr+1,w
  7857  161F  0083               	movwf	3
  7858  1620  0EFE               	swapf	btemp,f
  7859  1621  0E7E               	swapf	btemp,w
  7860  1622  0009               	retfie
  7861  1623                     __end_of_isr:
  7862  007E                     btemp	set	126	;btemp
  7863  007E                     wtemp0	set	126
  7864                           
  7865                           	psect	intentry
  7866  0004                     __pintentry:	
  7867                           ;incstack = 0
  7868                           ; Regs used in _isr: [wreg+status,2+status,0]
  7869                           
  7870  0004                     interrupt_function:
  7871  007E                     saved_w	set	btemp
  7872  0004  00FE               	movwf	btemp
  7873  0005  0E03               	swapf	3,w
  7874  0006  00F1               	movwf	??_isr+1
  7875  0007  080A               	movf	10,w
  7876  0008  00F2               	movwf	??_isr+2
  7877  0009  160A  118A  2DEC   	ljmp	_isr
  7878                           
  7879                           	psect	idloc
  7880                           
  7881                           ;Config register IDLOC0 @ 0x2000
  7882                           ;	unspecified, using default values
  7883  2000                     	org	8192
  7884  2000  3FFF               	dw	16383
  7885                           
  7886                           ;Config register IDLOC1 @ 0x2001
  7887                           ;	unspecified, using default values
  7888  2001                     	org	8193
  7889  2001  3FFF               	dw	16383
  7890                           
  7891                           ;Config register IDLOC2 @ 0x2002
  7892                           ;	unspecified, using default values
  7893  2002                     	org	8194
  7894  2002  3FFF               	dw	16383
  7895                           
  7896                           ;Config register IDLOC3 @ 0x2003
  7897                           ;	unspecified, using default values
  7898  2003                     	org	8195
  7899  2003  3FFF               	dw	16383
  7900                           
  7901                           	psect	config
  7902                           
  7903                           ;Config register CONFIG @ 0x2007
  7904                           ;	Oscillator Selection bits
  7905                           ;	FOSC = 0x3, unprogrammed default
  7906                           ;	Watchdog Timer Enable bit
  7907                           ;	WDTE = OFF, WDT disabled
  7908                           ;	Power-up Timer Enable bit
  7909                           ;	PWRTE = 0x1, unprogrammed default
  7910                           ;	Brown-out Reset Enable bit
  7911                           ;	BOREN = 0x1, unprogrammed default
  7912                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7913                           ;	LVP = 0x1, unprogrammed default
  7914                           ;	Data EEPROM Memory Code Protection bit
  7915                           ;	CPD = 0x1, unprogrammed default
  7916                           ;	Flash Program Memory Write Enable bits
  7917                           ;	WRT = 0x3, unprogrammed default
  7918                           ;	In-Circuit Debugger Mode bit
  7919                           ;	DEBUG = 0x1, unprogrammed default
  7920                           ;	Flash Program Memory Code Protection bit
  7921                           ;	CP = 0x1, unprogrammed default
  7922  2007                     	org	8199
  7923  2007  3FFB               	dw	16379

Data Sizes:
    Strings     437
    Constant    0
    Data        36
    BSS         19
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     58      77
    BANK1            80      5      39
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_49(CODE[15]), STR_48(CODE[15]), STR_47(CODE[5]), STR_46(CODE[6]), 
		 -> STR_45(CODE[6]), STR_44(CODE[6]), STR_43(CODE[6]), STR_42(CODE[6]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[8]), STR_38(CODE[11]), 
		 -> STR_37(CODE[8]), STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[17]), 
		 -> STR_33(CODE[7]), STR_32(CODE[11]), STR_31(CODE[13]), STR_30(CODE[12]), 
		 -> STR_29(CODE[13]), STR_28(CODE[17]), STR_27(CODE[18]), STR_26(CODE[17]), 
		 -> STR_25(CODE[15]), STR_24(CODE[14]), STR_23(CODE[12]), STR_22(CODE[13]), 
		 -> STR_21(CODE[15]), STR_20(CODE[18]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[4]), STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[4]), 
		 -> STR_13(CODE[5]), STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[8]), STR_6(CODE[11]), 
		 -> STR_5(CODE[10]), STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    water_level_arr	PTR unsigned char [5] size(2) Largest target is 7
		 -> STR_17(CODE[4]), STR_16(CODE[5]), STR_15(CODE[7]), STR_14(CODE[4]), 
		 -> STR_13(CODE[5]), 

    washing_prog	PTR unsigned char [12] size(2) Largest target is 11
		 -> STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[8]), STR_6(CODE[11]), STR_5(CODE[10]), 
		 -> STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clear_screen
    _water_level_display->_clear_screen
    _washing_program_display->_clear_screen
    _run_program->___awdiv
    _run_program->___awmod
    _run_program->_clear_screen
    _door_status_check->_clear_screen
    _clear_screen->_clcd_write
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _clcd_putch->___awdiv
    _clcd_putch->___awmod
    _clcd_print->_clcd_write
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_run_program
    _water_level_display->_clcd_putch
    _washing_program_display->_clcd_putch
    _run_program->___fltol
    _door_status_check->_clcd_print
    ___fltol->___flmul
    ___flmul->___xxtofl
    _power_on_screen->_clcd_putch
    _clcd_putch->___awdiv
    _init_clcd->_init_display_controller

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   86355
                                             55 BANK0      3     3      0
                                              0 BANK1      5     5      0
                         _clcd_print
                       _clear_screen
                        _init_config
                    _power_on_screen
                _read_digital_keypad
                        _run_program
               _set_time_for_program
            _washing_program_display
                _water_level_display
 ---------------------------------------------------------------------------------
 (1) _water_level_display                                  4     4      0   13515
                                              6 BANK0      4     4      0
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _washing_program_display                              4     4      0   13515
                                              6 BANK0      4     4      0
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_time_for_program                                 2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _run_program                                          8     8      0   34025
                                             47 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                       _clear_screen
                  _door_status_check
 ---------------------------------------------------------------------------------
 (2) _door_status_check                                    1     1      0   11200
                                              3 BANK0      1     1      0
                         _clcd_print
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         1     1      0     962
                                              7 COMMON     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1926
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1153
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      5     5      0   12720
                                              6 BANK0      5     5      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    2284
                                              4 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3   10238
                                              0 BANK0      3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     962
                          _init_clcd
                _init_digital_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     962
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     962
                                              0 BANK0      2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     962
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_timer2
   _power_on_screen
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       _clcd_write (ARG)
   _read_digital_keypad
   _run_program
     ___awdiv
     ___awmod
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _clcd_print
     _clcd_putch
     _clear_screen
     _door_status_check
       _clcd_print
       _clear_screen
   _set_time_for_program
   _washing_program_display
     _clcd_print
     _clcd_putch
     _clear_screen
   _water_level_display
     _clcd_print
     _clcd_putch
     _clear_screen

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      5      27       7       48.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7F      12        0.0%
ABS                  0      0      7F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Nov 25 19:23:44 2024

                              pc 0002                   clcd_print@addr 0022                               l91 0F76  
                             l77 1544                     ___awdiv@sign 0021                               fsr 0004  
            ___wmul@multiplicand 0075           water_level_display@key 0029              __Umul8_16@word_mpld 0022  
                            l113 172F                              l201 09E5                              l300 1795  
                            l116 1500                              l204 0A23                              l127 0BFF  
                            l226 03FF                              l138 0D1F                              l251 1564  
                            l403 159E                              l260 15EB                              l245 1674  
                            l317 14F3                              l405 15B8                              l254 1528  
                            l248 14E6                              l184 0DEC                              l169 0DAD  
                            l285 14D3                              l197 0E68                              l295 1796  
                            l811 157B                              l556 17FF                              l804 0754  
                            l813 158D                              l569 16CF                              l850 0AB5  
                            l842 0A8D                              l596 07C7                              l836 0A48  
                            l589 07DC                              l838 0ADF                              l599 07DC  
                            l792 0760                              l849 0AA9                              l798 06CC  
                            _GIE 005F                              _RA0 0028                              _RB0 0030  
                            _RC1 0039                              _RC2 003A                              _RE1 0049  
                            _RE2 004A                              _PR2 0092             _set_time_for_program 0D20  
                            _min 0068                              _sec 0078                              _isr 15EC  
                 clcd_putch@addr 0024                              fsr0 0004                   clcd_putch@data 0025  
                            indf 0000                     ___awmod@sign 0021     read_digital_keypad@longpress 0066  
                   ___flmul@aexp 0038                     ___flmul@bexp 003D                     ___flmul@sign 0037  
                   ___flmul@temp 0042                     ___flmul@prod 003E                      _run_program 0038  
                   ___fltol@exp1 004E                             l3101 15B9                             l3103 15C3  
                           l3111 14FB                             l3121 164E                             l3113 1623  
                           l3105 15D3                             l3201 15B2            ??_read_digital_keypad 0073  
                           l3123 1655                             l3115 162E                             l3107 15DB  
                           l3211 17A3                             l3131 1568                             l3125 1658  
                           l3117 1635                             l3221 17B4                             l3213 17A5  
                           l3205 1797                             l3141 1589                             l3133 156A  
                           l3301 0797                             l3109 14F4                             l3127 165F  
                           l3119 1647                             l3151 14E1                             l3231 17CC  
                           l3223 17BA                             l3215 17A9                             l3207 179A  
                           l3135 1571                             l3303 079B                             l3311 07B5  
                           l3129 166D                             l3145 14DC                             l3153 14CE  
                           l3161 14F0                             l3233 17DD                             l3225 17BD  
                           l3241 17F1                             l3217 17AE                             l3209 179E  
                           l3137 1575                             l3401 062A                             l3321 07D1  
                           l3147 14DF                             l3155 14E7                             l3163 1517  
                           l3243 17F6                             l3235 17E3                             l3227 17C4  
                           l3219 17B2                             l3251 1678                             l3139 1584  
                           l3411 0698                             l3403 0650                             l3331 0412  
                           l3323 0400                             l3171 09C7                             l3093 1546  
                           l3149 14E0                             l3157 14EB                             l3245 17FB  
                           l3237 17E4                             l3229 17C8                             l3261 168C  
                           l3253 167C                             l3421 06B0                             l3413 069C  
                           l3405 0678                             l3341 042E                             l3333 0417  
                           l3325 0407                             l3317 07BC                             l3309 07A3  
                           l3501 0AD6                             l3181 0A0E                             l3173 09D6  
                           l3165 09B8                             l3095 1550                             l3159 14EF  
                           l3511 1539                             l3239 17EB                             l3271 16A4  
                           l3263 1692                             l3255 1681                             l3431 06D1  
                           l3423 06B1                             l3415 069D                             l3407 0681  
                           l3351 0443                             l3343 0433                             l3335 041C  
                           l3327 040D                             l3319 07CC                             l3191 158E  
                           l3503 0AD7                             l3183 0A1D                             l3175 09EB  
                           l3167 09BE                             l3097 1552                             l3521 1541  
                           l3513 153C                             l3281 16C6                             l3273 16AE  
                           l3265 1695                             l3257 1683                             l3249 1675  
                           l3433 06D6                             l3441 0707                             l3425 06B5  
                           l3417 06A6                             l3409 068F                             l3361 045F  
                           l3353 0448                             l3345 0439                             l3337 0424  
                           l3329 0411                             l3193 1592                             l3185 0A20  
                           l3177 09F0                             l3169 09C2                             l3601 0D21  
                           l3099 1558                             l3515 153D                             l3507 1529  
                           l3531 173B                             l3523 1731                             l3283 16CB  
                           l3275 16B4                             l3267 169C                             l3259 1687  
                           l3451 073A                             l3443 0714                             l3435 06E4  
                           l3427 06C9                             l3419 06AC                             l3371 048A  
                           l3363 0464                             l3355 0450                             l3347 043D  
                           l3339 0426                             l3195 1596                             l3187 0A21  
                           l3179 09FF                             l4171 0D8B                             l3603 0D25  
                           l3517 153E                             l3509 1538                             l3541 175B  
                           l3533 1746                             l3525 1736                             l3277 16BB  
                           l3269 16A0                             l3453 0748                             l3445 071F  
                           l3437 06E8                             l3381 0527                             l3373 04A7  
                           l3357 0452                             l3349 043E                             l3293 0777  
                           l3197 15A5                             l3189 0A22                             l4173 0DD3  
                           l3621 0D5B                             l3613 0D33                             l3605 0D29  
                           l4165 0FEB                             l3519 1540                             l3551 1777  
                           l3543 1762                             l3535 174C                             l3279 16C1  
                           l3455 074C                             l3447 072E                             l3439 0701  
                           l3391 058A                             l3383 0530                             l3375 04C3  
                           l3367 046D                             l3359 045A                             l3295 078C  
                           l3287 0761                             l3199 15AC                             l3471 0A50  
                           l3463 0A27                             l4175 0DFC                             l3631 0D7E  
                           l3615 0D4C                             l4167 0D3B                             l3561 1789  
                           l3545 1768                             l3537 174F                             l3457 074D  
                           l3449 0738                             l3393 05A3                             l3385 0540  
                           l3377 04EF                             l3369 047D                             l3297 078D  
                           l3289 076E                             l3481 0A72                             l3465 0A2C  
                           l3801 012C                             l4177 0E29                             l3641 0DA5  
                           l4169 0D68                             l3625 0D60                             l3617 0D50  
                           l3609 0D2E                             l3721 0AEF                             l3571 16D0  
                           l3563 1793                             l3547 176D                             l3539 1755  
                           l3459 0758                             l3395 05C0                             l3387 055D  
                           l3379 050B                             l3299 0795                             l3491 0AA3  
                           l3483 0A76                             l3475 0A59                             l3467 0A30  
                           l3811 01E0                             l3803 013B                             l4179 0E42  
                           l3651 0DBB                             l3643 0DA9                             l3635 0D83  
                           l3627 0D79                             l3619 0D53                             l3731 0B16  
                           l3723 0AF7                             l3715 0AE3                             l3581 16E4  
                           l3549 1773                             l3557 177A                             l3397 05ED  
                           l3389 056D                             l3493 0AAD                             l3485 0A84  
                           l3477 0A5E                             l3469 0A40                             l3821 01FF  
                           l3813 01F7                             l3805 014A                             l3661 0DE4  
                           l3653 0DBE                             l3637 0D9C                             l3741 0BB8  
                           l3733 0B22                             l3725 0B01                             l3717 0AE9  
                           l3591 1709                             l3583 16EA                             l3559 1783  
                           l3567 1795                             l3399 05FD                             l3495 0AB7  
                           l3487 0A94                             l3479 0A6B                             l3831 0228  
                           l3823 0207                             l3815 01F8                             l3807 016A  
                           l3671 0E12                             l3663 0DE8                             l3655 0DC6  
                           l3647 0DB2                             l3639 0DA0                             l3743 0BBE  
                           l3735 0B28                             l3727 0B02                             l3719 0AEE  
                           l3751 0C0F                             l3911 0EC9                             l3903 0EA4  
                           l3593 1714                             l3585 1706                             l3577 16D3  
                           l3497 0ACD                             l3489 0A9F                             l3841 028B  
                           l3833 022E                             l3825 0209                             l3817 01F9  
                           l3809 01A5                             l3681 0E21                             l3673 0E16  
                           l3665 0DEC                             l3649 0DB7                             l3737 0B6E  
                           l3729 0B07                             l3761 0C36                             l3753 0C17  
                           l3745 0C03                             l3913 0ECE                             l3905 0EAC  
                           l3595 171A                             l3579 16DE                             l3499 0AD2  
                           l3851 030E                             l3835 0244                             l3843 029B  
                           l3827 020D                             l3819 01FA                             l3675 0E19  
                           l3667 0DF4                             l3659 0DCB                             l3739 0B74  
                           l3771 0CD8                             l3763 0C42                             l3755 0C21  
                           l3747 0C09                             l3931 0F07                             l3923 0EE3  
                           l3915 0ED4                             l3907 0EB9                             l3597 1720  
                           l3861 0369                             l3853 0314                             l3845 02A1  
                           l3837 0254                             l3829 020E                             l3781 0055  
                           l3669 0E0D                             l3685 0E3A                             l3773 0CDE  
                           l3765 0C48                             l3757 0C22                             l3749 0C0A  
                           l3941 0F2A                             l3933 0F10                             l3925 0EEB  
                           l3917 0EE1                             l3909 0EC4                             l3871 03BB  
                           l3863 0375                             l3855 0322                             l3847 02EE  
                           l3839 027B                             l3791 00C1                             l3783 006C  
                           l3775 003B                             l3599 0D20                             l3767 0C8E  
                           l3759 0C27                             l3951 0F66                             l3943 0F39  
                           l3935 0F18                             l3927 0EF8                             l3881 03F1  
                           l3873 03BF                             l3865 0392                             l3849 02FE  
                           l3857 032F                             l3793 00DE                             l3785 007B  
                           l3777 0041                             l3769 0C94                             l3961 0F89  
                           l3953 0F6E                             l3945 0F48                             l3937 0F20  
                           l3929 0F00                             l3883 03F4                             l3875 03C4  
                           l3867 03AF                             l3859 034C                             l3795 010A  
                           l3787 0098                             l3779 0046                             l3971 0FA7  
                           l3963 0F91                             l3955 0F71                             l3947 0F57  
                           l3939 0F25                             l3891 0E72                             l3885 03F6  
                           l3877 03D3                             l3869 03B4                             l3797 0118  
                           l3789 00B5                             l3981 0FD9                             l3973 0FB6  
                           l3957 0F77                             l3949 0F5E                             l3893 0E81  
                           l3879 03E2                             l3799 011D                             l3975 0FC5  
                           l3967 0F9C                             l3959 0F80                             l3895 0E90  
                           l3887 0E69                             l3977 0FD4                             l3969 0FA2  
                           l3985 0FE2                             l3897 0EA0                             l3889 0E6D  
                           l3987 0FF9                             ?_isr 0070                             STR_1 0992  
                           STR_2 0998                             STR_3 091A                             STR_4 097F  
                           STR_5 0910                             STR_6 0905                             STR_7 095B  
                           STR_8 0924                             STR_9 0938                             u3010 17CC  
                           u3011 17CB                             u3005 17BE                             u3030 17DD  
                           u3110 16A4                             u3031 17DC                             u3111 16A3  
                           u3120 16AE                             u4000 0CDE                             u3025 17CD  
                           u3121 16AD                             u3105 1696                             u4001 0CDD  
                           u3050 17F1                             u3210 07B4                             u4010 0041  
                           u3051 17F0                             u3035 17D9                             u3211 07B3  
                           u4011 0040                             u3060 17F6                             u3140 16C1  
                           u3300 0443                             u3220 07BB                             u4100 03BB  
                           u4020 0207                             u3061 17F5                             u3045 17E5  
                           u3141 16C0                             u3125 16AA                             u3301 0442  
                           u3221 07BA                             u3205 07A4                             u4101 03BA  
                           u4021 0206                             u3150 16C6                             u3070 167C  
                           u3310 0448                             u4030 022E                             u4110 0EB9  
                           u3151 16C5                             u3135 16B5                             u3071 167B  
                           u3311 0447                             u4031 022D                             u4111 0EB8  
                           u3080 1687                             u3320 045F                             u3240 07CC  
                           u3160 076E                             u4040 0244                             u4200 0F91  
                           u4120 0EC4                             u3081 1686                             u3401 057C  
                           u3321 045E                             u3241 07CB                             u3161 076D  
                           u4041 0243                             u4201 0F90                             u4121 0EC3  
                           u3090 1692                             u3402 0583                             u3330 0464  
                           u3250 07D1                             u3170 0785                             u4050 027B  
                           u4210 0FA2                             u4130 0EF8                             u3091 1691  
                           u3403 058A                             u3331 0463                             u3251 07D0  
                           u3235 07BE                             u4051 027A                             u4211 0FA1  
                           u4131 0EF7                             u4115 0EB5                             u3260 0411  
                           u3180 079B                             u4060 02A1                             u4140 0F00  
                           u3421 05B2                             u3341 04B5                             u3261 0410  
                           u3181 079A                             u4061 02A0                             u4045 0240  
                           u4141 0EFF                             u3510 069C                             u3422 05B9  
                           u3342 04BC                             u3270 0417                             u3190 07A2  
                           u4070 02EE                             u4150 0F07                             u3511 069B  
                           u3431 05DF                             u3423 05C0                             u3415 058C  
                           u3351 04D1                             u3343 04C3                             u3271 0416  
                           u3191 07A1                             u3175 0780                             u4071 02ED  
                           u4055 0277                             u4151 0F06                             u4135 0EF4  
                           u3600 0714                             u3432 05E6                             u3352 04D8  
                           u3280 041C                             u4080 0314                             u4160 0F18  
                           u3601 0713                             u3505 0691                             u3441 060C  
                           u3433 05ED                             u3361 04FD                             u3353 04DF  
                           u3281 041B                             u4081 0313                             u4161 0F17  
                           u3610 072E                             u3530 06B0                             u3450 0636  
                           u3442 0613                             u3362 0504                             u3290 043D  
                           u4090 03B4                             u4170 0F20                             u4307 1663  
                           u3611 072D                             u3531 06AF                             u3443 061A  
                           u3371 0519                             u3363 050B                             u3291 043C  
                           u4091 03B3                             u4075 02EA                             u4227 0FCD  
                           u4171 0F1F                             u2900 1589                             u3620 074C  
                           u3540 06B5                             u3372 0520                             u4180 0F66  
                           u4317 1671                             u2901 1588                             u3621 074B  
                           u3605 0710                             u3541 06B4                             u3525 069F  
                           u3461 0642                             u3373 0527                             u4237 0112  
                           u4181 0F65                             u3550 06C9                             u3470 065E  
                           u3462 0649                             u3710 0AA3                             u3630 0A2C  
                           u2910 09BE                             u4190 0F6E                             u4327 1555  
                           u3615 072A                             u3551 06C8                             u3463 0650  
                           u3455 0631                             u3391 054F                             u3711 0AA2  
                           u3631 0A2B                             u2911 09BD                             u4247 03EA  
                           u4191 0F6D                             u3800 175B                             u3560 06D0  
                           u3392 0556                             u3720 0AA9                             u3640 0A30  
                           u2920 09EB                             u4337 155F                             u3801 175A  
                           u3561 06CF                             u3481 066A                             u3393 055D  
                           u3385 0529                             u3721 0AA8                             u3705 0A98  
                           u3641 0A2F                             u4257 14FD                             u2921 09EA  
                           u2850 154D                             u3810 1762                             u3570 06D6  
                           u3482 0671                             u2930 1596                             u3730 0AAD  
                           u3650 0A50                             u2851 1549                             u4267 1728  
                           u3811 1761                             u3571 06D5                             u3483 0678  
                           u3475 0659                             u2931 1595                             u3731 0AAC  
                           u3651 0A4F                             _PEIE 005E                             u3820 1768  
                           u3580 06E8                             u3740 0AC2                             u3900 0AF7  
                           u4277 1629                             u3821 1767                             u3581 06E7  
                           u3901 0AF6                             u2870 15EB                             u3830 1773  
                           u3590 06F7                             u3750 0AD2                             u3670 0A71  
                           u3910 0B01                             u4287 163B                             u2871 15EA  
                           u3831 1772                             u3495 067A                             u3751 0AD1  
                           u3671 0A70                             u3911 0B00                             u2864 1550  
                           u3840 1783                             u2880 1575                             u2960 15B2  
                           u3760 0AD6                             u3920 0B28                             u4297 164B  
                           u3841 1782                             u2881 1574                             u2961 15B1  
                           u2945 159F                             u3761 0AD5                             u3745 0ABD  
                           u3665 0A63                             u3921 0B27                             u3850 1789  
                           u3770 1736                             u2970 179E                             u3690 0A93  
                           u3930 0B74                             u3851 1788                             u3771 1735  
                           u2971 179D                             u3595 06F2                             u2955 15A6  
                           u3691 0A92                             u3931 0B73                             u3860 1793  
                           u3780 1746                             u2980 17A9                             u3940 0BBE  
                           u3861 1792                             u3781 1745                             u2981 17A8  
                           u3685 0A85                             u3941 0BBD                             u3870 16EA  
                           u3790 174C                             u2990 17BA                             u3950 0C09  
                           u3871 16E9                             u3791 174B                             u2991 17B9  
                           u2895 157C                             u3951 0C08                             u3880 1720  
                           u3960 0C17                             u3881 171F                             u3961 0C16  
                           u3890 0AE9                             u3970 0C21                             u3891 0AE8  
                           u3971 0C20                             u3980 0C48                             u3981 0C47  
                           u3990 0C94                             u3991 0C93                             _main 0E69  
                           btemp 007E                             start 000C                   clcd_write@byte 0076  
                 clcd_write@mode 0073          __end_of_power_on_screen 1730        ??_washing_program_display 0026  
                          ??_isr 0070                    ___fltol@sign1 004D                            ?_main 0070  
                __end_of___awdiv 1800                            STR_10 0942                            STR_11 092E  
                          STR_20 0800                            STR_12 08FA                            STR_21 0875  
                          STR_13 09A8                            STR_30 08E3                            STR_22 08B0  
                          STR_14 09AD                            STR_23 08D7                            STR_31 08CA  
                          STR_15 0978                            STR_40 0834                            STR_32 08EF  
                          STR_24 08A2                            STR_16 099E                            STR_41 09A3  
                          STR_33 0971                            STR_25 0866                            STR_17 09B1  
                          STR_42 0986                            STR_18 0856                            STR_34 0834  
                          STR_26 0823                            STR_27 0800                            STR_43 098C  
                          STR_35 096A                            STR_19 0812                            STR_44 0986  
                          STR_36 0963                            STR_28 0845                  __end_of___awmod 16D0  
                          STR_45 098C                            STR_37 0953                            STR_29 08BD  
                          STR_38 08EF                            STR_46 0986                            STR_47 09A3  
                          STR_39 094B                            STR_48 0884                            STR_49 0893  
                __end_of___flmul 0761                  __end_of___fltol 07DD                  ___awdiv@divisor 0073  
          ?_set_time_for_program 0070                            i1l278 161C                     ?_init_config 0070  
                ___awdiv@counter 0020                            _PORTA 0005                            _PORTB 0006  
                          _PORTD 0008                            _TRISA 0085                            _TRISB 0086  
                          _TRISD 0088                     ?_init_timer2 0070             __end_of_clear_screen 1501  
          run_program@total_time 005E                            main@j 00C2                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 000F  
                   __end_of_main 1000                           ??_main 0057                   run_program@key 0056  
                         _ADCON1 009F  __end_of_washing_program_display 0C00                 ___awdiv@dividend 0075  
                         i1l2911 1608                           i1l2903 15EC                           i1l2913 160B  
                         i1l2921 161B                           i1l2905 15F2                           i1l2915 1610  
                         i1l2907 1601                           i1l2917 1615                           i1l2909 1603  
                         i1l2919 1617                           u280_20 15F2                           u280_21 15F1  
                         u281_20 1601                           u281_21 1600                           u282_20 1608  
                         u282_21 1607                           u283_20 1610                           u283_21 160F  
                         u284_20 1615                           u284_21 1614                           _TMR2IE 0461  
                         _TMR2IF 0061                           _TMR2ON 0092                           _TRISC1 0439  
                         _TRISC2 043A                           _TRISE1 0449                           _TRISE2 044A  
               __end_of___xxtofl 0AE0      __end_of_init_digital_keypad 14D4          _init_display_controller 1623  
                         ___wmul 158E                        ??___awdiv 0077                 ?_power_on_screen 0070  
                      ??___awmod 0077                        ??___flmul 0032                        ??___fltol 0048  
    __end_of_water_level_display 0D20                 ___awdiv@quotient 0022                  ___awmod@divisor 0073  
         ??_set_time_for_program 0073                  ___awmod@counter 0020                           saved_w 007E  
                   ___xxtofl@arg 0026                     ___xxtofl@exp 0025                     ___xxtofl@val 0073  
        __end_of__initialization 0034                       ___fltol@f1 0044                   __pcstackCOMMON 0070  
                   __pidataBANK0 09B6                     __pidataBANK1 07DD                     ?_run_program 0070  
                     __pbssBANK0 005A                  run_program@time 005C        ??_init_display_controller 0020  
                     _clcd_print 15B9                       _clcd_putch 1514                       _clcd_write 1545  
              __end_of__Umul8_16 158E                       __pmaintext 0E69                     _clear_screen 14F4  
                        ?___wmul 0073                       __pintentry 0004                          _T2CKPS0 0090  
                        _T2CKPS1 0091      __end_of_read_digital_keypad 1797                        ?___xxtofl 0073  
                     __stringtab 1000                          ___awdiv 1797                          ___awmod 1675  
                        ___flmul 0400                          ___fltol 0761                          __ptext1 0C00  
                        __ptext2 0AE0                          __ptext3 0D20                          __ptext4 0038  
                        __ptext5 09B8                          __ptext6 14F4                          __ptext7 0A24  
                        __ptext8 158E                          __ptext9 0761  __end_of_init_display_controller 1675  
              __end_of_init_clcd 14E7                       ??___xxtofl 0020                 ___awmod@dividend 0075  
                        main@key 00C6                          clrloop0 14D5             end_of_initialization 0034  
                 _operation_mode 006C                      ?_clcd_print 0020                      ?_clcd_putch 0024  
                    ?_clcd_write 0073         ?_washing_program_display 0070                       _reset_mode 0069  
                   __pstringtext 0800                       _rinse_time 0062       washing_program_display@key 0029  
                     _program_no 007A                    ___xxtofl@sign 0024                    clcd_print@str 0020  
                    ___flmul@grs 0039                   __end_of___wmul 15B9              start_initialization 000F  
                    __end_of_isr 1623                         ??___wmul 0077                       init_fetch0 1501  
                      __Umul8_16 1565                      __pdataBANK0 006A                      __pdataBANK1 00A0  
     read_digital_keypad@pre_key 0067                    ??_init_config 0077                    ??_init_timer2 0073  
                      ___flmul@a 002E                        ___flmul@b 002A                      __pbssCOMMON 0078  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00C2  
                      __pnvBANK0 006C             power_on_screen@i_152 002A                         ?___awdiv 0073  
                       ?___awmod 0073                         ?___flmul 002A                         ?___fltol 0044  
                     ?__Umul8_16 0073                        __pstrings 1000                        _init_clcd 14DC  
            __end_of_init_config 1545                ??_power_on_screen 0026              __end_of_init_timer2 14F4  
       ?_init_display_controller 0070                interrupt_function 0004                   ___wmul@product 0020  
                      clear_ram0 14D4                     ??_clcd_print 0077                     ??_clcd_putch 0078  
                   ??_clcd_write 0074                  _water_level_arr 00B8                        _wash_time 0064  
                      _spin_time 0060                      __stringbase 1012                        main@j_142 00C4  
              ___wmul@multiplier 0073               __end_of_clcd_print 15EC               __end_of_clcd_putch 1529  
             __end_of_clcd_write 1565                       ?_init_clcd 0070              _init_digital_keypad 14CE  
            _water_level_display 0C00                      ??__Umul8_16 0075             ?_init_digital_keypad 0070  
             __end_of__stringtab 1012                      _init_config 1529             ?_water_level_display 0070  
                       ___xxtofl 0A24                      _init_timer2 14E7                    ??_run_program 004F  
                       __ptext10 0400                         __ptext11 1565                         __ptext20 14CE  
                       __ptext12 1675                         __ptext21 14DC                         __ptext13 1797  
                       __ptext22 1623                         __ptext14 1730                         __ptext23 1545  
                       __ptext15 16D0                         __ptext24 15EC                         __ptext16 1514  
                       __ptext17 15B9                         __ptext18 1529                         __ptext19 14E7  
   __end_of_set_time_for_program 0E69          read_digital_keypad@mode 0074          read_digital_keypad@once 006A  
                  ?_clear_screen 0070            ??_init_digital_keypad 0073                _door_status_check 09B8  
             ?_door_status_check 0070            ??_water_level_display 0026                         isr@count 005A  
            ??_door_status_check 0023                         init_ram0 1505                      ??_init_clcd 0077  
                       intlevel1 0000              __end_of_run_program 0400                        stringcode 100A  
                 ??_clear_screen 0077        __end_of_door_status_check 0A24              _read_digital_keypad 1730  
              _water_level_index 0079          _washing_program_display 0AE0           __Umul8_16@multiplicand 0073  
                _power_on_screen 16D0                     _washing_prog 00A0                         stringtab 1000  
           ?_read_digital_keypad 0070                 power_on_screen@i 0029             __Umul8_16@multiplier 0024  
              __Umul8_16@product 0020  
